<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Illusory</title>
  
  <subtitle>随便点点吧</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-05-14T12:17:39.617Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>daniel-lij</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>时代永远眷顾人民，尽管他们大多都是傻逼</title>
    <link href="http://yoursite.com/2019/05/16/%E6%97%B6%E4%BB%A3%E6%B0%B8%E8%BF%9C%E7%9C%B7%E9%A1%BE%E7%9D%80%E4%BA%BA%E6%B0%91%EF%BC%8C%E5%B0%BD%E7%AE%A1%E4%BB%96%E4%BB%AC%E5%A4%A7%E5%A4%9A%E9%83%BD%E6%98%AF%E7%85%9E%E7%AC%94/"/>
    <id>http://yoursite.com/2019/05/16/时代永远眷顾着人民，尽管他们大多都是煞笔/</id>
    <published>2019-05-16T07:40:16.000Z</published>
    <updated>2019-05-14T12:17:39.617Z</updated>
    
    <content type="html"><![CDATA[<h2 id="时代永远眷顾人民，尽管他们大多都是傻逼"><a href="#时代永远眷顾人民，尽管他们大多都是傻逼" class="headerlink" title="时代永远眷顾人民，尽管他们大多都是傻逼"></a>时代永远眷顾人民，尽管他们大多都是傻逼</h2><p>视频里头是伊朗某地的一家小百货店，墙上有一台电视机，电视里头正播放着伊朗精神领袖哈梅内伊对全国人民的直播演讲。很快，百货店门口进来一个中年男子，也可能是青年，伊朗人有点显老，总之是个男的。当这名男子发现哈梅内伊在电视里滔滔不绝侃侃而谈时，立马抓起边上的一张木凳，欲朝电视屏幕砸去。小店老板见状，急忙抢身上前，将其牢牢拦住，至此，视频戛然而止。</p><p>如果要换我是小店老板，是决计不会去拦的，我最看不惯的就是道貌岸然的伪君子夸夸其谈的样子，尤其是电视直播的那种，说不定自己先砸为敬了。但伊朗人还真不一定舍得，因为他们太穷了。据伊朗统计部的数据，2010年的时候，伊朗全国有一千万人口处于绝对贫穷线之下，另外又有三千多万人口处于相对贫穷线之下，而伊朗全国也就七千多万人口。也就是说，超过一半的人口都处于贫困之中，典型的金字塔社会，而且这还是在美国宣布制裁之前的伊朗。</p><p>美作家棱罗说过一句名言，一个阶级的奢侈全靠另一个阶级的贫苦来维持。伊朗平民穷，并不代表伊朗穷，伊朗的上层社会还是富得流油的，只是财富分配不公而已。伊朗的石油储量位列全球第四，高过科威特和阿联酋，如果有个合理的分配制度，伊朗人民的日子不会比沙特差太多，但这世界上最不容易做到的事情就是公平。</p><p>之前我在文章内介绍过，伊斯兰革命卫队占领了伊朗的经济，大约三分之一左右。然后伊朗总的国有经济就占比超二分之一（两者有重叠）。现在世界大致有这么一个规律，但凡国有经济占比较高的国家，都反美，比例越高反地越起劲。比如朝鲜，比如委内瑞拉等等，越南现在走亲美路线，国有企业就迅速改革，从最高峰时期的1.5万家，缩减到如今的500家，明年预计只剩150家。</p><p>因为要加入TPP的条件之一，就是所有企业必须公平竞争，否则就会被踢出局。当年奥巴马牵头搞TPP时，中国当局也很头大，尤其是希拉里对华持鹰派立场，所以从当时的舆论来看，倒是希望共和党赢。不料特朗普上来后，直接撇弃多边模式，坚持要搞双边，更狠。</p><p>另外，委内瑞拉以前也是不反美的，后来查韦斯上台后，就突然反美了，委国很多人连美国人长什么样都没见过，一听说要反美，也纷纷响应，对美国恨之入骨起来。然后在仇恨的掩护下，查韦斯对委内瑞拉进行社会主义改造，开启国有化暴力进程，最高峰时国有经济占比超过90%。结果南美最富裕的国家就这样废了，常年处于动乱和贫乏之中，反美的骨气倒是一直坚挺。</p><p>为什么国有经济占比越高越反美呢？这里其实有意识形态的因素，就是公有制与私有制的对立，因为美国是自由市场经济的旗帜，而公有制是计划经济的产物，国有经济占比越高，政府干预就越强，两者存在难以调和的矛盾。包括现在中-美之间的贸-易纠-葛，其实也是这个原因。</p><p>然后这里还有一个规律，国有经济占比越多的国家，穷人就越多。比如欧美国家，清一色的私有制国家，各个高收入高福利。再比如朝鲜，国有率百分百，老百姓均贫，赤贫，没有丝毫私有财产。委国也是随着国有化进程由富返贫的，中国改革开放至今的发展成就，也完全托国退民进的福。他们敢退，人民就敢富。</p><p>再说回伊朗，单单是穷也就算了，他们还有个叫“道德警察”的部门。每天上街巡逻，检查老百姓的仪容仪表，女的必须要佩戴头巾，不得化妆涂口红，不许染发，不许穿紧身裤，不许玩摇滚乐等等。</p><p>试想一想，如果我们每天上街都有警察来约束我们的穿着打扮和言行，那得多难受。我记得我小时候忘戴红领巾被罚过五毛钱，一度留下阴影。</p><p>人是天生喜爱自由的物种，如果你不追求自-由，说明你后天被人为地洗脑了。总之在精神压抑和物质困乏之中，伊朗人民曾在2018年元旦前后，爆发过一次大规模的游–行抗–议活动。一开始只是抗议政府在经济上的没作为，后来迅速升级，直接要求神-权-政-府-倒-台，哈梅内伊滚出伊朗。</p><p>所以，如果美国要是对伊朗采取军事行动，伊朗的平民百分百要放鞭炮庆祝，穷人只怕是做梦都盼着这一天。现代战争也比较文明，并不是针对平民的杀戮，而是以颠–覆–政–拳为目的。比如伊拉克，干掉萨达姆的独–裁–统–治之后，再重建一个新的民–选政–府。</p><p>现在伊拉克与伊朗虽然人均GDP差不多，但是伊拉克人民的生活质量绝对远超伊朗。因为伊拉克的石油以前是萨达姆的私产，而现在伊拉克的石油经济全民共享。另外，美国对伊拉克的战后重建中，包括了让伊拉克的央-行独-立，跟美联储一样，政府无法干预央行货币制度，而且外汇可自由兑换。</p><p>货币制度是一个国家的良心，因为它决定着所有人的命运。2017伊拉克的M2增幅为2.64%，而伊朗为27.96%，增幅位列全球第六，排名第一的国家，今年总统已经落马。而伊朗2018年时汇率暴跌，也完全归因于当局对货币制度的滥用。</p><p>一个国家可以有穷人，但是不能人为地去制造贫穷，如果一个国家制造了太多穷人，那么这个国家最终也会被穷人所抛弃。而且从历史来看，任何看似固若金汤的政-拳，最终都败给了人民。很奇怪，时代永远眷顾人民，尽管他们大多都是傻逼。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;时代永远眷顾人民，尽管他们大多都是傻逼&quot;&gt;&lt;a href=&quot;#时代永远眷顾人民，尽管他们大多都是傻逼&quot; class=&quot;headerlink&quot; title=&quot;时代永远眷顾人民，尽管他们大多都是傻逼&quot;&gt;&lt;/a&gt;时代永远眷顾人民，尽管他们大多都是傻逼&lt;/h2&gt;&lt;p&gt;视频
      
    
    </summary>
    
      <category term="metoo" scheme="http://yoursite.com/categories/metoo/"/>
    
      <category term="yuexin" scheme="http://yoursite.com/categories/metoo/yuexin/"/>
    
    
      <category term="个人" scheme="http://yoursite.com/tags/%E4%B8%AA%E4%BA%BA/"/>
    
  </entry>
  
  <entry>
    <title>时代永远眷顾人民，尽管他们大多都是傻逼</title>
    <link href="http://yoursite.com/2019/05/16/%E8%A7%81%E4%B8%96%E9%9D%A2%EF%BC%8C%E4%BB%80%E4%B9%88%E6%97%B6%E5%80%99%E5%8F%98%E5%BE%97%E5%A6%82%E6%AD%A4%E5%BB%89%E4%BB%B7/"/>
    <id>http://yoursite.com/2019/05/16/见世面，什么时候变得如此廉价/</id>
    <published>2019-05-16T07:40:16.000Z</published>
    <updated>2019-09-17T01:30:09.436Z</updated>
    
    <content type="html"><![CDATA[<h2 id="01"><a href="#01" class="headerlink" title="01"></a>01</h2><p>前不久，知乎有个热门提问：“你见过最没见过世面的女孩，是什么样子的？”</p><p>高赞只有一句话：</p><p>“吃牛排点8分熟。”</p><p>因为在西餐厅，牛排一般只有单数分熟，没有8分熟。</p><p>想以此来说明女孩没见过世面。</p><p>但由于回答没有任何解释，还是有不少看不懂的人评论求解。</p><p>于是又招来一番嘲笑。</p><p>有人甚至调侃道：“评论区活捉一堆没见过世面的人。”<br><img src="\images\news\2019.9.17\1.jpg" alt=""><br>如今，“见世面”这个词，被不少人和物质生活的丰富程度画上等号。</p><p>追求世面，也成了新时代女孩追逐的标配。</p><p>几个月前，听到一个让我诧异的事。</p><p>邻居家刚满20岁的女孩，竟裸贷5000块去旅游。</p><p>理由是女孩子一定要趁年轻，多出去走走见世面。</p><p>结果一趟旅游回来，利息已经滚上了几万块，死活还不上了。</p><p>现在裸照全部外泄，她觉得没脸见人，学校也不敢去，怕被人认出指指点点。</p><p>无法想象，接下来的日子该有多煎熬。</p><p>不少女孩为了追求见世面，不顾家境好坏，买LV包包，每个季度换新大牌衣服。</p><p>各种水乳、面霜、化妆品、口红如数家珍，认为素颜出门就像在裸奔。</p><p>去健身房自拍，秀出自己P出来的大长腿和马甲线，还有36C胸部。</p><p>国内外各个城市旅游打卡，在米其林星级餐厅用餐，顺便朋友圈晒个照。</p><p>跟着金融才俊炒股炒房，期货基金样样不落<br><img src="\images\news\2019.9.17\2.jpg" alt=""><br>但让人恶心的是，不少自认为见了点“世面”的女孩，内心极其膨胀。</p><p>每天把优越感写在脸上，喜欢嘲笑那些缺乏高端物质生活的人。</p><blockquote><ul><li>“哎呀，我昨天去法国刚买了一只gucci包包呢。”“你这个mac算什么啊，好便宜的。”“天哪，你居然用国货！”“哪有女人不敷面膜的啊。”“你用这种劣质化妆品，迟早要烂脸的啊！”</li></ul></blockquote><p>我认为，一个真正见过世面的女生，往往不会觉得自己有多优越，更不会轻易嘲弄他人。</p><p>反过来也一样，喜欢用自己价值观去揣度整个世界，肆意批判他人的人。</p><p>即使见过很多事物，也不见得有多大世面。<br><img src="\images\news\2019.9.17\3.jpg" alt=""><br>正如林语堂先生所说的：</p><blockquote><ul><li>腰有十文钱必振衣作晌；每与人言必谈及贵戚；见到问路之人必作傲睨之态；与朋友相聚便喋喋高吟其酸腐诗文；与人交谈便偖刁言以逞才。</li></ul></blockquote><p>文化素质提不上去，去再多地方，用再名贵的物品，都是井底之蛙。</p><p>他们不会因此变得高雅，变得聪明。</p><p>愚蠢和固执，跟从前一模一样，毫无变化。</p><p>那么，什么才能让自己真正的见过世面？</p><p>在我看来，分为4个阶段。</p><h2 id="02-懂物欲"><a href="#02-懂物欲" class="headerlink" title="02 懂物欲"></a>02 懂物欲</h2><p>如今这个物质的社会，世面给人的第一联想。</p><p>往往是美食、奢侈品、游艇、高档场所。</p><p>是一切能够彰显身份，又能扩充奢侈词汇量的名利场。</p><p>有人总结道，女孩见过世面的标志就是：</p><blockquote><ul><li>抹着高级口红吃车厘子，背着奢侈包包环游世界；出入高档圈子场所，张口闭口达官显贵是我朋友；去大城市工作赚大钱，嫁给有车有房有户口的人</li></ul></blockquote><p>这样的生活就是人生赢家。</p><p>当一帮姐妹为了一件没见过的潮玩惊呼雀跃之时。</p><p>看到气定神闲的你，敬佩地甩出一句，“还是你见过世面啊”。</p><p>所谓懂物欲，不外乎如此。<br><img src="\images\news\2019.9.17\4.jpg" alt=""> </p><h2 id="03-知深浅"><a href="#03-知深浅" class="headerlink" title="03 知深浅"></a>03 知深浅</h2><p>生活除了好事，还有各种坏事。</p><p>除了富有，还有贫穷，有各种阴暗面。</p><p>有些家长会带孩子去高档场所游玩，还会去贫苦山区转一转。</p><p>希望他们能看到这个世界不同的样子。</p><p>对于成年人，也就是我们说的阅历。</p><p>地铁民警@马拓，每天会见到形形色色的女性乘客。</p><p>她们有着不同的职业，不同的性格，在地铁里因为不同的事，和各色的对象发生争执。</p><blockquote><ul><li>有粗布麻衣但虎视眈眈的大妈；有身体孱弱气得呼哧带喘的小学女老师；有丸子头被抓垮哭哭啼啼的女学生；也有自称练过散打但始终不敢出手的出版社女编辑。</li></ul></blockquote><p>她们大多因为一点点小事就闹到派出所，久久不能冷静下来，甚至一直怒火中烧，坐在调解室还气得挠墙。</p><p>当然也有很多淡定的，在会议室安静地等待处理问题，然后心平气和地做笔录。</p><p>遇事时的不同反应，就能看出见过世面和没见过世面的区别。<br><img src="\images\news\2019.9.17\5.jpg" alt=""><br>剥去物质的外衣，见世面本质的含义是“经不经事”。</p><p>它取决于你在社会上，对生活资料的积累，对事件本质的参悟。</p><p>有人遇事，能够预见它的严重性或普遍性，然后进行简单平静的处置。</p><p>而有的人，则遇到一点鸡毛蒜皮的小事，都会惊慌失措，庸人自扰。</p><p>知道生活深浅的人，说白了就是见识多、眼界宽、格局大。</p><p>这样的世面，可以说相当有质感了。<br><img src="\images\news\2019.9.17\6.jpg" alt=""> </p><h2 id="04-见真我"><a href="#04-见真我" class="headerlink" title="04 见真我"></a>04 见真我</h2><p>都说做人做事，要知己知彼。</p><p>人们总误以为，自己的事情，自己肯定清楚。</p><p>但往往，知己才是最难的，很多人不知道自己知道什么，也不知道自己不知道什么。</p><p>所以就没法找到自己的位置，也没法见真我。</p><p>这样的人，容易为知道一些事而膨胀，或是为不懂一些事而自卑。</p><p>要知道，所有人的世面，都是从零开始一次次见出来的。</p><p>因为所处环境不一样，所以见的世面不同罢了。<br><img src="\images\news\2019.9.17\7.jpg" alt=""><br>曾经带我妹去吃西餐。</p><p>服务员问牛排熟度，我妹一脸天真地说：“8分熟吧。”</p><p>服务员倒没说什么，反而邻座正在切牛排的情侣投来了鄙夷的目光。</p><p>我妹当时就有些不好意思了。</p><p>我对服务员说:“牛排帮忙切块，再上两副碗筷，谢谢。”</p><p>由于声音略大，不光是邻桌，周围的人也都把目光集中在我身上。</p><p>相信在他们眼里，我们就是两个“土包子”。</p><p>但我妹反而“噗嗤”一声笑了出来。</p><p>那天晚上，我俩在周围人鄙夷的目光中，大大方方用筷子吃完了8分熟的牛排。</p><p>在我看来，在不影响他人的情况下。</p><p>哪有什么没见过世面的行为，只有没见过世面的心理活动罢了。<br><img src="\images\news\2019.9.17\8.jpg" alt=""><br>那些自以为见过世面就去嘲笑别人的人，根本不懂得尊重，也摆不正自己的位置。</p><p>我妹是一位护士，虽然不知道牛肉几分熟，却懂得很多人不知道的医学知识。</p><p>所以，不要因为自己有着更的高物质条件，而产生优越感。</p><p>你知道牛排5分熟好吃，别人能一眼分辨麦子和水稻的区别。</p><p>科学家知道如何能让火箭升空，农民知道如何才能有好收成。</p><p>城里的孩子见过高楼大厦，乡下的孩子见过满天繁星。</p><p>很多时候，所谓的高级，只不过偏见。</p><p>要知道自己知道什么，知道自己不知道什么。</p><p>当踏进一个新的领域，新的圈子时，承认自己眼界不足，不要不懂装懂，要对未知保持好奇心。</p><p>同时，也要体谅别人的无知，不去嘲笑或鄙视他的畏畏缩缩。</p><p>总之核心就是一句话：</p><p>见过世面没什么好得意的，没见过也没什么好自卑的。</p><p>世面这种东西就在那里，总有机会见一次的。<br><img src="\images\news\2019.9.17\9.jpg" alt=""> </p><h2 id="05-悟众生"><a href="#05-悟众生" class="headerlink" title="05 悟众生"></a>05 悟众生</h2><p>所谓世面，不过是世界的一面而已。</p><p>这个世界太大了，谁也没资格说自己见过天地万物。</p><p>谁敢说自己知道每一种花香。谁敢说自己吃过每一种咖喱。谁敢说自己遨游过每一座山川。谁敢说自己见过每一片斑斓的鱼鳞。</p><p>世面这东西，是见不完的。</p><p>人活着就是在见世面，没有见过这一说。</p><p>不仅要见，还要在心中悟。<br><img src="\images\news\2019.9.17\10.jpg" alt=""> </p><p>为什么在有些人眼里，可乐就是比红酒好喝。</p><p>为什么有些人往大城市赶，有些人却去乡村支教。</p><p>为什么很多看似平常的事情，对有些人来说是匪夷所思，或是可笑。</p><p>为什么同一件事物，在你眼里是这个样子，在别人眼里，又是另外的样子。</p><p>世界上没有两片一样的树叶。</p><p>每个人的世面，总会有不对称的地方。</p><p>谁又比谁更见过世面？</p><p>谁的人生又是标准答案？</p><p>众生皆不同，并无上下，也没有左右。</p><p>通过看世界、看众生，从而领悟生活。</p><p>充分包容每个人的不同，充分理解每一种存在。</p><p>去追求阅尽这繁华世界，沉浸于人间烟火。</p><p>这样的生活，不是很惬意吗？<br><img src="\images\news\2019.9.17\11.jpg" alt=""> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;01&quot;&gt;&lt;a href=&quot;#01&quot; class=&quot;headerlink&quot; title=&quot;01&quot;&gt;&lt;/a&gt;01&lt;/h2&gt;&lt;p&gt;前不久，知乎有个热门提问：“你见过最没见过世面的女孩，是什么样子的？”&lt;/p&gt;
&lt;p&gt;高赞只有一句话：&lt;/p&gt;
&lt;p&gt;“吃牛排点8分熟。”&lt;
      
    
    </summary>
    
      <category term="随录" scheme="http://yoursite.com/categories/%E9%9A%8F%E5%BD%95/"/>
    
    
      <category term="个人" scheme="http://yoursite.com/tags/%E4%B8%AA%E4%BA%BA/"/>
    
  </entry>
  
  <entry>
    <title>一个北大既得利益者的自述</title>
    <link href="http://yoursite.com/2019/05/15/%E4%B8%80%E4%B8%AA%E5%8C%97%E5%A4%A7%E6%97%A2%E5%BE%97%E5%88%A9%E7%9B%8A%E8%80%85%E7%9A%84%E8%87%AA%E8%BF%B0/"/>
    <id>http://yoursite.com/2019/05/15/一个北大既得利益者的自述/</id>
    <published>2019-05-15T07:40:16.000Z</published>
    <updated>2019-05-13T09:23:14.360Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一个北大既得利益者的自述"><a href="#一个北大既得利益者的自述" class="headerlink" title="一个北大既得利益者的自述"></a>一个北大既得利益者的自述</h2><p>我生于一个标准意义上的北京中产阶层家庭，有北京户口，家人在北京有房。敲出这行字时我感到十分愧疚与不安，因为这行字里包含了绝大多数中国人奋斗一生都未必能得到的东西，而我居然一出生就拥有。</p><p>我妈有事业单位编制，不过主要收入来源是搞物流；我爸退休前是机关公务员；家里的钱大多数是我妈挣的。说中产阶层是因为，一方面我的未成年生活里完全没有为物质问题操过心，另一方面我的童年伙伴里也有那种真正来自富裕家庭的，我从小就知道有些东西不值得像他们那样花那么多钱，而且我这辈子大概也不会为那些东西花那么多钱。有意思的是，我六岁上小学一年级时就知道「中产阶层」（当时叫「中产阶级」）这个词了，而正在写这段文字的我今年二十岁，依然认为这个词能够形容我原生家庭的经济状况。</p><p>虽然也经历过大家在公众号爆文里读到过的「北京小升初」、「奥数班」、「周末课外班赶场」，但现在回忆起来，我童年时期所处的教育氛围依然是比较宽松的。父母给我报了那些课外班，但不会特别要求我的学习成绩；甚至在我小学三年级时听说「北京小升初与奥数脱钩」这一流言，他们的第一反应就是把我的奥数班退掉。相比于我自己有要求的学习成绩，父母更关注的是我的心理健康，毕竟我那时情商太低，会因为一点点因为「马虎」而导致的成绩波动而强烈地自责甚至自虐。当然，这一相对宽松的教育氛围跟北京市内的具体地域也有关，我小学在东城，初中在西城，高中才到海淀区。</p><p>可能是部分由于那一代人的历史经历，我父母都比较政治冷感，他们不鼓励我过于关心政治，也不鼓励在家庭日常讨论中经常出现社会议题。他们对我的最大期望就是做一个「接地气的」快乐的人，最大担忧就是我因为过于关心政治又难以把控局势而陷入麻烦。这样说吧，我妈是一位会多次鼓励自己的女儿多看电视连续剧的母亲，她的理由是，多追剧才能多「接地气」，多懂点人情世故，少为那些社会问题花太多心思。后来不少人很好奇我父母的职业背景，以为是他们培养了我对社会政治问题的热情，其实那完全是学校教育与课外阅读的结果。</p><p>我十分感激我的父母能给予我无忧的物质条件与相对宽松的教育环境，当然也能比较清醒地发现他们的思想认识与我的不同。比如，他们完全不能理解同性恋，也完全不能理解非宗教出于伦理考虑的素食主义者。我上中学时针对类似这样的问题和父母争论过，有一次搞得十分不愉快，到后来我主动去找了学校的心理咨询师（所以我再次强调，大家有心理压力与困惑一定要寻求专业帮助，千万不要自己扛着）。后来我和家里人在这方面争论得很少了，但如果他们在微信上转发明显的科技谣言，我还是会马上给他们指出来，不管有没有用。</p><p>关于宗教信仰，我父母符合中国大多数人的情况，不信教，但也不算严格意义上的无神论者；毕竟真正的无神论者不会在自己孩子高考前在卧佛寺花钱敲钟，孩子考上了北大还专程去「还愿」。不过不管怎样，我和大多数中国孩子一样，成长在一个世俗的环境里；直到来到印尼，通过访谈了解到虔诚信徒家庭子女所经受的挣扎与压迫，我才真切地感到生长在世俗国家与世俗家庭的可贵。</p><p>可以说，在我截至目前的短短二十年人生里，人生的每一大跨步都充满了极端的幸运。小升初，提前通过面试从优质小学升入优质初中；中考，擦着分数线的边被人大附中录取；高考，再次擦着分数线的边考上了北京大学；大二升大三时，在最后关头拿到了公派名额与国外高校方面的录取，成为了整个语系唯一一名大三公派出国的学生。面对这些幸运，我无意感谢上天，一是因为我不信神，二是因为社会学的学术训练告诉我，这一切都是社会结构性不公的结果，如果我感谢上天、自得其乐，那简直是又蠢又坏。</p><p>明明都是自己考上的，为什么还是不公呢？不如我讲一讲自己上高三时的几个细节。高三一年我有用功学习是真的，但我的「用功」和衡水等名校学生的「用功」完全不在一个量级：离高考不到一个月，我还有闲工夫读《南方周末》（后来的高考作文用上了那时读到的案例，关于安庆殡葬改革事件）；离高考不到三天，我还有闲工夫看电视。这是一个怎样的高三？而我竟然考上了北大。而那些千千百百饱受非人类学习压力折磨的同在一个国家的同龄人，很可能连本科都考不上。</p><p>不公不仅关乎户籍与地域；甚至关乎考题与评价标准本身。我高考的数学成绩并不理想，文综分数也比以往的模拟考试低很多；可以说，最后能擦边上北大，几乎完全是高考作文得满分起了作用。而认识我或者读过我其它稿子的朋友应该都清楚，我的文笔并不够优美，至少也没有高于同龄才子才女的水平；如果说作文分数能比同龄人的高一些，很大程度上都是因为我在文字中流露出的所谓「社会责任感」。当然，我流露出的社会责任感是真情实感，我甚至没办法不在作文中流露这样的真情实感。然而，如果我能有一点点对社会问题的理性思考、对社会不公的批判精神，都是学校教育与课外阅读的结果；而我之所以能享受到如此优质的教育资源与课外阅读机会而多数人享受不到，说到底依然是社会不公的结果。</p><p>从小到大，我没有经历过很多明显的人生挫折或打击；唯一一次可以算上的，是我十七岁正准备上高三那个暑假发生的家庭变故。关于那场变故我不想多谈，因为我不需要大家因此可怜我，毕竟相比这一个不幸，我拥有的幸运要太多太多。除非我发现有朋友也遭遇了和我类似的家庭变故，我才会告诉他们具体的细节，因为我也希望自己和家庭从变故中一步步走出来的经历能够真实地帮到一些人。</p><p>如果非要总结我的原生家庭与成长经历，那么我不得不说，这是一条很残酷的因果链：我生来享受了北京户口和很好的家庭条件，然后是优质初等教育、中等教育，让我没有受什么非人类的折磨就考上了北大，考上了北大就又享受了北大光环带给我的名声甚至是物质利益——如果我没上北大，就不会因为仅仅给乡下孩子上了堂普通的性教育课而获得一些小名气；如果我没上北大，我每周写给《南方周末》的稿子即使仍承蒙编辑老师赏识，也未必能长期厕身于报纸的重要版面，我也就不可能身为全职学生还获得相对稳定的收入（一篇评论1200-1400字左右，稿费800元，如果每周都发稿，一个月能获得稿费收入3200元）。而在可以预知的将来，这一光环还将带给我更多；虽然光环之所以成为光环，大部分都是因为北大前辈的创造，而非我的个人努力。</p><p>如果说「穷则独善其身，达则兼善天下」，我就属于那「达」的人；如果说「车厢内的人，有责任尽量前行」，我就属于那「车厢内」的人。我不敢想象，一路走来，按照鲁迅的话讲，我已经「吃」了多少人。虽然身为无神论者，我引用基督教的概念时很可能会犯错，但作为一个希望能被大家理解的比喻，我不得不承认，我时常感到自己是负有原罪的人。这里的「原罪」不是来自神的国，它恰恰来自人的国；我背负的是整个社会结构不公的原罪。</p><p>我能力有限，也还有很多很多缺点。然而我清楚地知道，如果我每一天都能用力地生活，尽力地完善自己，努力地为这个社会变得好一些而做一点点事情，很大一部分动力都是来源于这种深重的不安与愧疚。</p><p>我实在没有理由不向前走；我实在没有理由仅为自己而向前走。</p><p>沒有理由不拼命</p><p>让我们孩子的不安与愧疚少一些</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一个北大既得利益者的自述&quot;&gt;&lt;a href=&quot;#一个北大既得利益者的自述&quot; class=&quot;headerlink&quot; title=&quot;一个北大既得利益者的自述&quot;&gt;&lt;/a&gt;一个北大既得利益者的自述&lt;/h2&gt;&lt;p&gt;我生于一个标准意义上的北京中产阶层家庭，有北京户口，家人在北
      
    
    </summary>
    
      <category term="metoo" scheme="http://yoursite.com/categories/metoo/"/>
    
      <category term="yuexin" scheme="http://yoursite.com/categories/metoo/yuexin/"/>
    
    
      <category term="个人" scheme="http://yoursite.com/tags/%E4%B8%AA%E4%BA%BA/"/>
    
  </entry>
  
  <entry>
    <title>辨证与放屁</title>
    <link href="http://yoursite.com/2019/05/14/%E8%BE%A9%E8%AF%81%E6%B3%95%E4%B8%8E%E6%94%BE%E5%B1%81/"/>
    <id>http://yoursite.com/2019/05/14/辩证法与放屁/</id>
    <published>2019-05-14T07:40:16.000Z</published>
    <updated>2019-05-13T08:23:19.472Z</updated>
    
    <content type="html"><![CDATA[<h2 id="辨证与放屁"><a href="#辨证与放屁" class="headerlink" title="辨证与放屁"></a>辨证与放屁</h2><h4 id="第一堂课"><a href="#第一堂课" class="headerlink" title="第一堂课"></a>第一堂课</h4><p>　　上课时，我放了一个屁——很普通的屁。既不很臭，当然也绝对不香。<br>　　可怕的是，教授正在讲辩证法。<br>　　“请你自己对这个屁作一下判断，”教授说，“它好还是不好？”<br>　　我只得说：“不好。”<br>　　“错了，”教授说，“任何事物都有矛盾组成，有它不好的一面，肯定有它好的一面。”<br>　　“那么说它好也不对了？”我问。<br>　　“当然。”教授说。<br>　　“它既好又不好。”<br>　　“错了。你只看到矛盾双方对立斗争的一面，没有看到他们统一的一面。”<br>　　我只好认真看待这个严肃的问题，仔细想了想说：“这个屁既好又不好，但不好的一面是主要的，处于主导地位。”<br>　　“错了。你是用静止的观点看问题。矛盾的双方会相互转换，今天处于主导地位一面，明天一定处于次要地位。”<br>　　“你是说明天全人类会为了我的这个屁欢呼雀跃吗？”<br>　　“不尽如此，但不能否认这种发展趋势。”<br>　　我愣了好大一会儿，只得硬着头皮说：“我的屁既好又不好，既不好又好。今天可能不好，明天一定会好。今天可能很好，明天也许会不好。”<br>　　教授听得直摇头，说：“这是彻底的怀疑论，不是辩证法的观点。”<br>　　就这样，仅仅因为放了一个屁，我就成了一个怀疑论者。<br>　　教授接着讲课：“辩证法的威力不仅在于能够轻而易举地驳斥任何观点，而且他能够轻易地为任何观点找到理论根据。”<br>　　“可是我的屁就没有任何根据。”我抗议道。<br>　　“那是因为你没有找到！其实很简单，它是你肚子里矛盾双方对立统一的必然结果。”<br>　　我哑口无言。<br>　　教授说：“下面我们不谈屁，谈一个更复杂的问题：一个西瓜，一粒芝麻，无论你怎样选择，都有理论基础。”<br>　　我赶紧说：“我要捡起西瓜，丢了芝麻。”<br>　　“很好。”教授说，“你抓住了主要矛盾，也就是说，你抓住了解决问题的关键。”<br>　　“那我就捡起芝麻，丢掉西瓜。”<br>　　“先有量变，才能达到质变。你解决问题的顺序十分正确。”<br>　　“我既要西瓜，又要芝麻。”<br>　　“即抓住主要矛盾，又不放过次要矛盾。你是用全面的眼光看问题”<br>　　“我既要砸烂西瓜，又要踩碎芝麻。”<br>　　“很好，你是用发展的眼光看问题。新事物就是对旧事物的否定。一切旧的事物必然灭亡。旧事物的灭亡是新事物产生的前提。”<br>　　“我既要吃掉西瓜，又要砸烂西瓜。既要捡起芝麻，又要踩碎芝麻。可是，只有一个西瓜，一粒芝麻，怎么办？”<br>　　“你这才算对辩证法入了门。重要的是：矛盾的双方不仅对立，而且有它统一的一面。你吃掉西瓜当然有它合理的一面，但你要砸烂西瓜，也并非不合理。只有将二者统一，才能进入更高层次的斗争。”<br>　　我张口结舌，目瞪口呆：“可是，你并没有解决我的问题。”<br>　　教授笑着说：“辩证法不解决任何问题，它的用途在于首先把人变成傻瓜——如果还有人不是傻瓜的话。”<br>　　“你是说‘首先’？”我问。<br>　　“是的！然后再从傻瓜飞跃到学者。”教授开始整理讲义，“关于辩证法为什么不解决问题，如何把人变成傻瓜，以及怎样实现从傻瓜到学者的飞跃，这是下一节课的内容。”<br>　　教授一蹦一跳，走出教室。</p><h4 id="第二堂课"><a href="#第二堂课" class="headerlink" title="第二堂课"></a>第二堂课</h4><p>　　教授说：“下面我们讲一下辩证法的用途。我们要举一个更加复杂的例子：如何看待中国传统文化？”<br>　　我说：“那一定要用辩证的观点。”<br>　　“对。我们有许多大牌的辩证法学者，他们会充分利用辩证法的三大规律，理论联系实际，旁征博引，纵横捭阖，下笔万言，紧绕主体。最后给你得出一个结论：要取其精华，去其糟粕——你佩服不佩服？”<br>　　“是啊。辩证法不是很有用吗？”<br>　　“以前我也这样认为。直到我见到一只丧家的野狗——它改变了我的看法。”<br>　　“野狗？”我莫名其妙。<br>　　“是的。我家屋后有个垃圾堆。有一天来了一只丧家的野狗，它对其他东西看也不看，‘喀哧’一口，咬住一块骨头。”<br>　　“这毫不奇怪，所有的狗都会这样。”我说。<br>　　“不错。问题是，对于狗来说，这块骨头就是‘精华’。垃圾堆里除了骨头以外，还有砖头，铁块，破水桶等等糟粕，他为什么只要骨头这个精华呢？他怎么知道取其精华，去其糟粕？难道它已经充分理解了大牌学者们的论述了吗？”<br>　　“好像不会。”<br>　　“肯定不会！所以说，大牌学者们通过精确的论述，得到的精妙结论，其实是连一只丧家的野狗早就知道的东西。既然如此，我们为什么还要为他们喝彩，对他们崇拜呢？”<br>　　“是啊！为什么？”<br>　　“唯一的解释就是：辩证法已经成功地把你变成了一个傻瓜。”<br>　　“我明白了。”<br>　　“你明白以后一定要问：你说的没用。取其精华，去其糟粕谁都知道。问题是什么是精华，什么是糟粕。”<br>　　“对！看他们怎么说。”<br>　　“你难不倒他，他们又会充分利用辩证法的三大规律，理论联系实际，旁征博引，纵横捭阖，下笔万言，紧绕主体。最后给你得出一个结论：具体问题，具体分析。高明不高明？”<br>　　“是有道理。”<br>　　“可是我认为：这不仅是无聊，无用的问题，已经近于无赖了。”<br>　　“这怎么说？”<br>　　“难道世界上有人会‘具体问题，抽象分析’吗？那只丧家的野狗，来到垃圾堆前，难道会象亚里斯多德一样，先把各种东西分门别类，搞清其内涵和外延，再通过归纳演绎，最后确定它是吃砖头还是吃骨头吗？这可能吗？”<br>　　“不可能。那样的话，他连吃砖头都有可能。”<br>　　“对，孺子可教！没有人会去‘具体问题，抽象分析’，‘具体问题，具体分析’这句话，说了等于没说。不过辩证法学者倒是喜欢用抽象的方法，分析具体问题。因为辩证法是放之四海而皆准的普遍真理。所以如果你看到一只吃砖头的狗，千万不能小视，它可能是一个著名学者。”<br>　　教授又收拾好讲义，说：“辩证法的根本在于使用‘全面的，发展的，联系的’观点看问题。象所有的谎言一样，这话听起来很显真理。下一节课讲辩证法的渊源，以及它和形而上学的关系。”</p><h4 id="第三堂课"><a href="#第三堂课" class="headerlink" title="第三堂课"></a>第三堂课</h4><p>　　“迄今为止，人类用三种方法研究这个世界。”教授毫不客气，单刀直入，“第一种是‘屠夫式’，大部分科学家都是这种方式。他们把世界割裂成极小的部分进行分析研究。研究生物的并不研究全部生物，有的只研究动物；研究动物的也不研究全部动物，有的只研究哺乳动物；研究哺乳动物的，有的只研究猴子；研究猴子的有的只研究猴子的尾巴。他们眼中只见树木，不见森林，是极其片面的观点。”<br>　　“不是辩证法的观点。”我说。<br>　　“对，”教授接着说，“不仅如此，他们还尽量割裂研究对象与其他事物的联系，在尽量不受干扰的情况下，看看他到底是什么样子。科学家花费大量金钱建造实验室，而不在大街上做实验，主要原因就在于此。现在有些实验还要搞到太空里去做，连空气引力都要隔绝。可见，为了割裂事物之间的关系，这些科学家是不择手段的。”<br>　　我说：“与辩证法的观点相反。”<br>　　“有说对了，但仍然不止于此。他们还不管一只猴子过去怎样，将来如何，只管拿来一刀宰掉，看看它肚子里都是什么东西。他们用的是彻底的静止观点。”<br>　　“非常野蛮，而且十分笨拙。”<br>　　“所以我把它叫做‘屠夫式’。但这是我们一切科学知识的基础和来源。没有这些人，也就没有任何科学。他们应该得到应有的尊重——他们的人格，才智和他们使用的方法，都应该得到尊重。”<br>　　“有谁不尊重他们吗？”<br>　　“有很多，你可能就是一个。”<br>　　“此话怎讲？”<br>　　“他们用的是孤立，静止，片面的方法，这种方法有一个名称，你们中学老师教过你们吗？”<br>　　“叫‘形而上学’，可那是个贬义词呀？”<br>　　“是的，就叫‘形而上学’。这就是过去全部的科学家，现在大部分科学家使用的方法。”<br>　　“那为什么它是一个贬义词呢？”<br>　　“因为它和辩证法不相容，而且针锋相对。有些人不仅自以为是正确的，而且断定其他人都是错的。奇怪的是，辩证法整天讲什么对立统一，形而上学来和辩证法对立，他却不肯同一，而是对形而上学采取一棍子打死的态度。”<br>　　“我明白了。”<br>　　“使用第二种方法的也是科学家，我称之为‘强盗式’。这种科学家更重要。<br>　　他们什么也不干，坐等形而上学的科学家研究出比较确切的成果，在此基础上综合升华。千千万万的科学家研究了万万千千的动物，植物，微生物以后，达尔文拿来一综合，就提出了进化论。”<br>　　“这活倒很轻松。”<br>　　“一点也不轻松，而且需要更高的聪明才智和更加宽阔的视野。爱因斯坦是其中最出色的一位。他的视野非常开阔，甚至研究过辩证法。但是他说辩证法对他的研究没有任何帮助。”<br>　　“辩证法到底是干什么的呢？”<br>　　“研究世界的第三种方法就是辩证法的方法，我称之为‘上帝式’的方法。也就是我们下一节课的内容。”</p><h4 id="最后一课"><a href="#最后一课" class="headerlink" title="最后一课"></a>最后一课</h4><p>　　“我被开除了，”教授说，“今天上最后一课。请先提问。”<br>　　我说：“有的同学说，你的观点有点偏激。”<br>　　“他说对了，我不仅偏激，而且有错误。上一节课我就故意设置了一个常识性的错误，但是你们并没有给我提出来。现在我不得不把最重要的东西教给你们：没有谁是全部正确的，最多只是正确了一部分。如果世界是那只大象，我们就是那一群摸象的瞎子。我们想知道大象的样子，但是我们谁也不可能把这只大象摸完。我所有的瞎子加在一起也不可能，如果你的一生只能摸完大象的尾巴，你一定要认真去摸。如果你确信自己完全了解了这支尾巴，你一定要坚持自己的观点。<br>　　不要听见别人说大象像柱子或者象扇子就轻易改变自己的观点。偏激并不可怕，可怕的是听风就是雨，毫无自己的主见。如果你坚持的错了，没什么大不了，一定有更聪明的瞎子给你指出错误。科学就是这样在成千上万的错误中提取一个真理的学问。但是如果你对了，却没有坚持，世界就失去了一次前进的机会。<br>　　“另外你要随时记住：无论你是对是错，你只是了解大象的一小部分。要听听别的瞎子怎么说。不能轻信，也不能不信。你别无选择，只有使用你的理性。它也许有许多不足，但却是你唯一可以信赖的东西。一个人的理性十分有限，许多人的理性却威力巨大。如果你不知道许多人的理性在哪里，那么我告诉你——那就是科学。科学也有不足，以后一定要被突破。不过那需要许许多多比爱因斯坦更聪明的人，肯定不是你我。<br>　　“理性，批判和宽容，就是我所说的最重要的东西。”<br>　　这次我没有提问，也没有其他人提问。<br>　　“言归正传，继续谈辩证法。”教授只好自己接着说，“辩证法也是个瞎子，但是他不摸象。”<br>　　“他不想了解大象吗？”我问。<br>　　“他当然想了解大象，但是他认为摸象没有用，或者说作用不大。他认为大象在到处乱跑，还在不断地从小变大，而且与他周围的森林，地球，甚至太阳系，银河系有无限多的联系，用‘孤立，静止，片面’的形而上学观点徒劳无功，只有使用‘全面，发展，联系’的辩证法观点，才能搞清大象的样子。”<br>　　“可是他连象都不摸，怎么全面，发展，联系呢？”<br>　　“我不知道，鬼也不知道，只有上帝知道。所以我把它称为‘上帝式’的方法。辩证法最初在中国流行，伏羲八卦，阴阳五行，孔子的‘过犹不及’，老子的‘反者道之动’，《易经》‘一阴一阳谓之道’，《黄帝内经》‘内外调和，邪不能侵’统统都是辩证法。西方只有亚里斯多德提出过辩证法的雏形，既不全面，也不具体。恩格斯说他阐述了辩证法的基本原理，我不知道从何说起。不过这无关紧要，现代意义上的辩证法是从黑格尔开始的，这一点恩格斯和我，以及其他任何人，都不会有任何意见。”<br>　　“你只说恩格斯，怎么不提马克思？”<br>　　“马克思和辩证法关系不大。”<br>　　“辩证唯物主义不是不是马克思主义的灵魂吗？”<br>　　“我不同意这个观点，马克思早期写过一篇《神圣家族》，痛批黑格尔的‘泛逻辑论’，泛逻辑论就包括辩证法。以后也没见他怎样说过辩证法。直到他最晚的哲学著作《资本论 第二版 跋》中，他才开玩笑地说自己卖弄了辩证法。但是辩证法是什么，马克思终其一生，也没有回答过。”<br>　　“那么辩证法怎样进入马克思主义的呢？”<br>　　“完全是恩格斯的原因，从《反杜林论》到恩格斯致死不愿发表的《自然辩证法》，辩证法才成为马克思主义的所谓灵魂。这一点我和顾准的看法一样。马克思是不会同意‘辩证唯物主义’这个说法的。这完全是后人的需要。不过《反杜林论》是经过马克思同意的，这一点倒是事实。”<br>　　“辩证法有哪些内容？”<br>　　“首先是三大规律：第一，质量互变规律，来自黑格尔《逻辑学》第一部‘存在论’。第二，矛盾统一规律，来自《逻辑学》第二部‘本质论’。第三，否定之否定规律，来自《逻辑学》第三部‘理念论’。<br>　　“这都是表面的东西，也就是马克思所说的”神秘外形“。它的根本在于用全面，发展，联系的观点看问题。它的实质是隐藏其后的两大主义：第一，真理一元论。反对真理的多元论和相对主义。这早已成为历史的垃圾。第二，真理不可分，局部事务的真理都是整体世界的一部分，孤立的研究发现不了这些真理。只有在森林中找树木，不能从树木开始研究森林。这不仅极其荒唐，而且毫不现实。<br>　　“为什么不现实？”<br>　　“有个西方不败教授说得很好：事实充分证明，孤立的，静止的、片面地来研究事物的方法，在人类现有的认识情况下才是最好的方法论，才可能了解事物的本质。因为事物之间的联系千丝万缕，如果把所有的关联都考虑进去，就等于什么也干不成，就象我们老祖宗一样，只能抱着个‘太极生两仪，两仪生四象’，这个思维懒怠症混日子。等到对事物的各种性状及规律有了较为详细的把握，再把它放到系统中进行非常谨慎的观察和研究。而中国人的传统思维是总想一口吃成个大胖子，一开始便从总体上提出本质的观点。这种带有原始思维特征的传统正与辩证法不谋而合，或者说辩证法只是中国古代思想方法的一种现代表述，中国人从来不缺少这种思维方式，需要补课的正是孤立的，静止的、片面地来研究事物的笨功夫。”<br>　　“辩证法到底是怎么来的呢？”<br>　　“你们中学教科书上是怎么讲的？”<br>　　“好像是对客观世界，人类社会以及思维规律的全面正确的总结。”<br>　　“这种说法极其荒唐，而且全然不顾任何事实，是彻底的误人子弟。第一，别说黑格尔活着的时候，就是在二十一世纪的今天，人类对客观世界仅仅了解一点，很小的一点。对人类社会只了解半点。对思维规律了解得半点也不到。一只大象我们只是了解了尾巴上的几个关节，腿上的几根毛，加上耳朵上一块皮而已，谈得上什么全面总结，正确总结？纯粹是说梦话。<br>　　“第二，你们可以看一看《马克思恩格斯选集》第三卷469页第十二行到第十四行：‘黑格尔的著作中有一个广博的辩证法纲要，虽然它是从一个完全错误的出发点发展起来的。’恩格斯在不止二十个地方说过，这个错误的出发点就是唯心主义。谁都知道，恩格斯所谓的辩证法原版照抄的来自黑格尔的《逻辑学》，如他自己所说，只不过打碎了‘黑格尔唯心主义的外壳’，取了他‘辩证法的合理内核’。你相信吗？人类从许许多多正确的出发点出发，都要走上弯路。而一个叫黑格尔的帝国教授，却可以从一个错误的出发点出发，‘全面地，正确地’总结出客观世界，人类社会以及思维的全部正确规律。这是人说的话吗？<br>　　“我绝不相信。就是再把我绑到新教徒的火刑柱上，把我烧死以前烤上两个小时，我仍然不相信！”<br>　　“我也不相信。”我小声说。<br>　　“可是相信的人相当多。自从打碎了基督教的枷锁，辩证法是科学发展道路上的最大障碍。他把现代科学斥责为不入流的形而上学，机械论。使科学在一些地方停滞不前。二十世纪二十年代，前苏联科学院的一个院长，就因为要搞农作物的杂交改良而丢了脑袋。”<br>　　“那为什么？”<br>　　“因为杂交改良依据的是孟德尔－摩尔根理论，与辩证法格格不入。”<br>　　“你很熟悉前苏联吗？”<br>　　“我最熟悉的是中国，我在这里住了几十年。可是打别人头上的苍蝇更轻松。”<br>　　我问：“对于辩证法的进攻，科学是怎么反击的呢？”<br>　　“西方哲学用实证主义，逻辑经验主义进行了反击。现代科学却默不做声。它只是不断地发展，生产出更多的粮食，钢铁，机器，以及人类除精神需要的一切。当这一切成为不可逆转的潮流的时候，辩证法才忽然发现，虽然它在骂别人，丢人的却是他自己。”<br>　　“辩证法没有任何可取之处吗？”<br>　　“有人说辩证法是一个早产的怪胎，虽然在人类认识的现阶段并不适用，但他整体的观点确实十分诱人。现代科学的整体论，有机论已经初具雏形。不过这不是对辩证法的回归，而是在科学自身的发展中，若隐若现地概括出的一些原则。真理一元论毕竟是难以接受的。科学从不放过任何一个发展的可能性，哪怕最微小的希望，也会有人付出百倍的努力。1984年，一大群名气很大的科学大师在美国成立了圣菲研究所（Santa Fe Institute），他们包括众多的诺贝尔奖获得者，是许多科学领域的顶尖人物，出钱的大老板也是赫赫有名——金融杀手索罗斯。它们的目标就是研究‘一元化理论’的可能性。当然，他们谁也不会相信什么辩证法，那就不要研究‘一元化’了。它们是用现代科学的方法探讨控制复杂的适应系统（CAS）的一般性原理。虽然我不相信他们会取得任何结果，但这是人类科学史上最大胆的尝试之一。我预祝他们成功——尽管那样会打破我的一切观念。”</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;辨证与放屁&quot;&gt;&lt;a href=&quot;#辨证与放屁&quot; class=&quot;headerlink&quot; title=&quot;辨证与放屁&quot;&gt;&lt;/a&gt;辨证与放屁&lt;/h2&gt;&lt;h4 id=&quot;第一堂课&quot;&gt;&lt;a href=&quot;#第一堂课&quot; class=&quot;headerlink&quot; title=&quot;第一堂课&quot;
      
    
    </summary>
    
      <category term="逻辑" scheme="http://yoursite.com/categories/%E9%80%BB%E8%BE%91/"/>
    
      <category term="心理" scheme="http://yoursite.com/categories/%E9%80%BB%E8%BE%91/%E5%BF%83%E7%90%86/"/>
    
    
      <category term="逻辑" scheme="http://yoursite.com/tags/%E9%80%BB%E8%BE%91/"/>
    
  </entry>
  
  <entry>
    <title>被“辩证法”毒害的中国人</title>
    <link href="http://yoursite.com/2019/05/14/%E8%A2%AB%E2%80%9C%E8%BE%A9%E8%AF%81%E6%B3%95%E2%80%9D%E6%AF%92%E5%AE%B3%E7%9A%84%E4%B8%AD%E5%9B%BD%E4%BA%BA/"/>
    <id>http://yoursite.com/2019/05/14/被“辩证法”毒害的中国人/</id>
    <published>2019-05-14T07:40:16.000Z</published>
    <updated>2019-05-13T07:49:05.007Z</updated>
    
    <content type="html"><![CDATA[<h2 id="被“辩证法”毒害的中国人"><a href="#被“辩证法”毒害的中国人" class="headerlink" title="被“辩证法”毒害的中国人"></a>被“辩证法”毒害的中国人</h2><p>每年高考结束后，高考作文题都会成为人们解读、议论的焦点。然而人们普遍忽视了高考作文题的最大特点——“辩证”扎堆。今年虽然有所收敛，但“科技的利与弊”、“想着拥有还是想着没有”等辩证题目仍然不少。…</p><p>　　不但高考作文题简直爱死了辩证，在日常生活中，国人也把“你要辩证的看问题”挂在嘴边。当代思想家顾准曾总结说：“中国人是天生的辩证法家”。</p><p>　　可是顾准又说“辩证法把中国人坑害苦了”。这是咋回事？</p><p>　　【一个无敌句式——你要辩证地看问题】</p><p>　　无论你说啥观点，“辩证地看问题”都能将你轻易击败</p><p>　　有个笑话这样说：<br>上课时，我放了一个屁——很普通的屁。既不很臭，当然也绝对不香。<br>可怕的是，教授正在讲辩证法。“请你自己对这个屁作一下判断，”教授说，“它好还是不好？”<br>我只得说：“不好。”<br>“错了，”教授说，“任何事物都由矛盾组成，有它不好的一面，肯定有它好的一面。”</p><p>　　这个笑话看起来很有趣。然而这真的是个笑话吗？君不见：<br>　　当我们说民主是个好东西时，总有个故作老成的人充满智力优越感的说：你要辩证的看问题，民主不是万能的，民主有民主的缺陷……<br>　　当我们说强拆是个坏东西时，那个“智者”又跑出来说：你要辩证的看问题，强拆有强拆的作用，不强拆怎么发展……<br>　　当我们批评官员的腐败风气时，“智者”又开口了：你要辩证的看问题，官员也很不容易……<br>　　当我们……</p><p>　　哦，对了，“你要辩证的看问题”还有个一样无敌的姊妹句式——“你太偏激了”。…</p><p>　　更厉害的是：“辩证的看问题”发展到高级阶段后，你连发表观点的必要都没了</p><p>　　在“方舟子打假唐骏”时，一位叫“李国良”的网友说：“方说非黑即白，看来其完全不懂辩证法。这个世界上任何事情都是相对的，黑中有白，白中有黑，方却一口咬定他就是白，唐就是黑，连对立统一规律都不懂。”</p><p>　　你看看，遇到更大的“智慧”，你发现其实说什么观点都是多余的，反正“黑中有白，白中有黑”，进一步“善中有恶，恶中有善”，最后“是中有非，非中有是”，所以“是非”并不分明，甚至有人直接说本就无所谓“是非”，你还废什么话。…</p><p>　　【“辩证法”让我们由不安变得心安】</p><p>　　当我们对’假恶丑’感到不安时，一“辩证”就释然了</p><p>　　生活中每天都发生着各种假丑恶，有些假丑恶就发生在我们身边，或者我们就参与其中。如果我们批评或抵触假丑恶，可能会对自己不利；而不批评不抵触，自己内心又不安。</p><p>　　这时候，“辩证法”就派上用场了。只要我们改变思维方式，去“全面的”看待假丑恶，那么你会发现假中有真、丑中有美、恶中有善。唐骏是造假，可人家毕竟激励了很多年轻人；贪污让人痛恨，可贪污也是经济的润滑剂；强拆是惨烈，但没有大拆大建哪来让我们骄傲的市容市貌……</p><p>　　就这么一“辩证”，我们发现不但原来认为的假丑恶没那么糟糕了，甚至面目可爱起来，简直能成为真善美了。张艺谋不就在《英雄》中通过“辩证”的思维把暴君捧为英雄了吗？所以我们还有什么不能心安理得的。 …</p><p>　　所以“辩证法”是犬儒的最爱</p><p>　　所谓儒，就是知识分子；所谓犬儒，就是像狗一样的奴才知识分子。知识分子本该是道义的坚守者，无奈上面要指鹿为马，知识分子该怎么办？坚持“鹿不是马”，要掉脑袋；而难得糊涂，才能明哲保身。</p><p>　　“辩证法”正是一门“糊涂”学问。被誉为“中国古代辩证法”的老庄哲学，有不少这类说法：“物无非彼，物无非是。”“彼出于是，是亦因彼。”“方可方不可，方不可方可；因是因非，因非因是。”“是亦彼也，彼亦是也。彼亦一是非，此亦一是非，果且有彼是乎哉？果且无彼是乎哉？”“恶乎然？然于然。恶乎不然？不然于不然。……无物不然，无物不可。……恢诡谲怪，道通为一。”（见《庄子·内篇·齐物论》）</p><p>　　在庄子看来，马亦鹿也，鹿亦马也，所谓“万物一齐”也。于是知识分子们释然了：你指鹿为马，我难得糊涂，“不谴是非，以与世俗处”。 …</p><p>　　【中国人信奉的“辩证法”实乃诡辩术与捣糨糊术】</p><p>　　辩证法作为一个哲学概念本无害</p><p>　　尽管辩证法作为一个哲学概念，有丰富的内涵，但公认的辩证法的核心就是对立统一论。</p><p>　　教科书上说，对立统一是指世界上一切事物都包含着两个方面，这两个方面既相互对立，又相互统一。</p><p>　　事实上，这里的“一切事物”指的是“一切连续性的概念”，比如高度、数量、面积、价值。拿高度来说，包含高和矮两个方面，高矮对立，但没有高就无所谓矮，没有矮就无所谓高，而且随着标准的变化，原来高的以后可能变成矮的，反之亦然，这就叫两个方面的统一性。</p><p>　　如果辩证法仅仅是指上述这样的哲学概念，那么无错，更无害。</p><p>　　但被中国人灵活应用后的“辩证法”成了诡辩术</p><p>　　然而中国人理解的“辩证法”，却是抓住“一切”、“两个方面”、“统一性”等字眼大做文章。</p><p>　　比如“唐骏造假了”，这本来是个事实判断，根本不是个“连续性的概念”，不适用辩证法，更不存在“两个方面”的问题。</p><p>　　再比如“唐骏造假的价值如何”，这是个价值判断，对一件事做价值判断必然可以判断出好和坏两个方面，但“唐骏造假的价值如何”同样不是个“连续性的概念”，也不适用于辩证法。唐骏造假的正面价值——激励了年轻人，和负面价值——损害诚信，二者根本是两回事，不存在什么“统一性”。</p><p>　　但是，中国人的“辩证法”却认为，既然“一切事物”都有“两个方面”，那么“唐骏造假了”肯定也有两个方面，然而这两个方面是什么？你总不能说唐骏既造假也没有造假吧？于是“聪明”的中国人继续挖掘，发现做价值判断总是能找到“两个方面”，于是就以价值判断的多样性来混淆事实判断的单一性，在我们指出唐骏造假这个事实时，在旁边一个劲说“唐骏造假的积极意义”。</p><p>　　好吧，既然你要做价值判断，那我们就来谈谈唐骏造假的负面作用。这时候，“聪明”的中国人又拿出了“统一性”法宝，把两个逻辑上不相干的事情“统一”到一个逻辑下，以“唐骏激励了年轻人”来否定“唐骏损害了诚信”，如此“鸡同鸭讲”（实际上这种“鸡同鸭讲”普遍的出现在中国的各种辩论比赛中，这种比赛的题目设置往往就是要求选手们“鸡同鸭讲”）。</p><p>　　好吧，既然你要讲“统一”，那么我们从整体来看，“唐骏损害了诚信”之恶还是超过了“唐骏激励了年轻人”之善吧？所以唐骏造假的整体价值仍是恶的。 这时候“聪明”的中国人又绕了回去——“你不要太偏激了，毕竟人家唐骏激励了年轻人，你自己又有什么贡献……”。</p><p>　　所以中国人的“辩证法”就是种以价值判断混淆事实判断、让逻辑上不相干的价值左右互搏、以局部的价值否定整体的价值的诡辩术。…</p><p>　　更“高级”的“辩证法”干脆认为不存在是非、善恶，一团糨糊就是最大的“智慧”</p><p>　　更“聪明”的中国人都懒得诡辩了，他们认为既然“两个方面”有“统一性”，可以“相互转化”，那么“两个方面”不是“你中有我、我中有你”、“你亦是我、我亦是你”吗？“两个方面”根本就分不清嘛。明白了“分不清”这个“本质”，才是达到了“手中无剑、心中亦无剑”的最高级“智慧”。“聪明难，糊涂更难”啊。…</p><p>　　【结语】<br>　　以后再有人故作老成、装出一副“智者”模样说“你要辩证的看问题”，你就拿这个专题砸他的脸。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;被“辩证法”毒害的中国人&quot;&gt;&lt;a href=&quot;#被“辩证法”毒害的中国人&quot; class=&quot;headerlink&quot; title=&quot;被“辩证法”毒害的中国人&quot;&gt;&lt;/a&gt;被“辩证法”毒害的中国人&lt;/h2&gt;&lt;p&gt;每年高考结束后，高考作文题都会成为人们解读、议论的焦点。然而
      
    
    </summary>
    
      <category term="逻辑" scheme="http://yoursite.com/categories/%E9%80%BB%E8%BE%91/"/>
    
      <category term="心理" scheme="http://yoursite.com/categories/%E9%80%BB%E8%BE%91/%E5%BF%83%E7%90%86/"/>
    
    
      <category term="逻辑" scheme="http://yoursite.com/tags/%E9%80%BB%E8%BE%91/"/>
    
  </entry>
  
  <entry>
    <title>用提问来促进思维——兼谈【非】技术领域的 WHAT HOW WHY 三部曲</title>
    <link href="http://yoursite.com/2019/05/14/%E7%94%A8%E6%8F%90%E9%97%AE%E6%9D%A5%E4%BF%83%E8%BF%9B%E6%80%9D%E7%BB%B4%E2%80%94%E2%80%94%E5%85%BC%E8%B0%88%E3%80%90%E9%9D%9E%E3%80%91%E6%8A%80%E6%9C%AF%E9%A2%86%E5%9F%9F%E7%9A%84%20WHAT%20HOW%20WHY%20%E4%B8%89%E9%83%A8%E6%9B%B2/"/>
    <id>http://yoursite.com/2019/05/14/用提问来促进思维——兼谈【非】技术领域的 WHAT HOW WHY 三部曲/</id>
    <published>2019-05-14T07:40:16.000Z</published>
    <updated>2019-05-13T07:44:56.703Z</updated>
    
    <content type="html"><![CDATA[<h2 id="用提问来促进思维——兼谈【非】技术领域的-WHAT-HOW-WHY-三部曲"><a href="#用提问来促进思维——兼谈【非】技术领域的-WHAT-HOW-WHY-三部曲" class="headerlink" title="用提问来促进思维——兼谈【非】技术领域的 WHAT HOW WHY 三部曲"></a>用提问来促进思维——兼谈【非】技术领域的 WHAT HOW WHY 三部曲</h2><p>文章目录<br>★认知的过程<br>★WHAT HOW WHY 的步骤<br>★以“楼市”为例<br>★总结<br>　　在前一篇博文里，俺主要是从“时间管理”的角度，来阐述微博的弊端。其实微博还有另一个弊端：纵容快餐文化而导致【思考不够深入】。所以，俺今天来聊一下，如何用提问的方式促进深度思考。顺便也聊聊【WHAT HOW WHY 三部曲】在【非】技术领域的应用。</p><p>★认知的过程</p><p>　　稍微了解“认知心理学”的网友应该知道：我们对某个事物的认识，总是“由浅到深”。虽然同样是由浅到深，但每个人思考的深度却千差万别。不幸的是，大多数人在看待某个东西（事物、问题、现象）的时候，都仅仅停留在浅层次。<br>　　为啥会这样捏？一个很重要的原因就是：大多数人不善于提问。<br>　　说到这儿，俺又要第 N 次抨击天朝的教育制度了。在天朝的中小学教育中，根本就没有教会学生，该如何提问、该如何质疑、该如何反思。为啥会这样捏？因为天朝的教育主要是为了愚民，愚民的主要目的是为了维护党的领导（民众越愚昧，党就越容易统治）。<br>　　考虑到抨击教育制度不是本文的重点，就此打住。<br>　　好，言归正传。如何才能掌握提问的窍门捏？如何才能在提问中加深思考捏？俺总结了一个比较简单的提问三部曲：WHAT、HOW、WHY。通过这个三部曲，你可以一步步地从事物的表象深入到事物的本质。</p><p>★WHAT HOW WHY 的步骤</p><p>　　为啥本文的副标题是“兼谈【非】技术领域的 WHAT HOW WHY 三部曲”？因为俺在3年前（2009）已经写过一篇博文《学习技术的三部曲：WHAT HOW WHY》。在那篇博文里，主要是介绍三部曲在技术领域（理工科）的应用。考虑到俺博客的读者中，有越来越多的人不是 IT 行业。所以，俺今天侧重介绍一下，这个三部曲在社会科学（文科）方面的应用。</p><p>◇WHAT</p><p>　　当我们开始了解某个事物的时候，总是先从 WHAT 类型的问题开始入手。而所谓的【WHAT】也就是“What is it?”<br>　　在这个层面，你首先要了解的，就是某个事物所涉及的：时间、地点、当事人以及该事件的大致经过。要了解这些，其实比较容易——通过跟别人交流，或阅读各类媒体（网络、电视、报刊），就可以对某个事物有一个初步的、肤浅的、表面的认识。<br>　　在 WHAT HOW WHY 这3个层次中，这个层次是最简单的——因为你只需运用【记忆力】即可解决。对大多数人而言，只要智力没啥缺陷，都能达到这个层次。达到这个层次虽然很简单，但你千万要记住：从 WHAT 类型的问题得到的答案，通常只反映出事情的表面现象。而表象跟本质，往往是不同的，甚至是相反的。如果你仅仅停留在 WHAT 层面，很可能会被【表象】所误导。<br>　　在《为啥俺不常用微博——兼谈时间管理心得》一文，俺提到微博传递的信息过于肤浅——意思就是说，（大部分）微博传递的信息仅仅停留在 WHAT 层面。</p><p>◇HOW</p><p>　　所谓的【HOW】就是“How to do?”。<br>　　因为本文侧重讲社会学领域的话题。而社会学领域，“人”往往是关键因素。所以，你首先要思考的就是：当事人是【如何】参与某个事件的？（此处所说的“当事人”，可以是某个具体的人，也可以是某个群体）<br>　　当然啦，很多事物的发展，除了有“当事人”的因素，还有其它一些因素（比如：文化因素、法律因素、经济因素、科技因素等等）。所以，你还要问：除了当事人，其它因素是如何起作用的？<br>　　最后，你还要继续问：在各种因素的作用下，事件是【如何】一步步发展的？该事件内部是如何运作的？……<br>　　和 WHAT 层次不同的是，HOW 层次光靠记忆力是远远不够滴。你还需要具备一定的分析推理能力，还需要懂得查阅相关资料，才能搞明白上述 HOW 类型的问题。</p><p>◇WHY</p><p>　　当你能够比较透彻地厘清 HOW 层面的各类问题，就可以开始思考 WHY 类型的问题了。<br>　　所谓的【WHY】类型问题，俺举几个简单的例子：<br>某个当事人为什么会这么干而不是那么干<br>为什么是这个因素起作用而不是那个因素起作用<br>事件为什么会朝着这个方向发展而不是朝着另外的方向发展<br>……<br>　　WHY 类型的问题有个特点：这类问题很发散且数量很多。因此，对于某个具体的事物，总可以提出几十个（甚至上百个） WHY 类型的问题。在这么多个问题中，只有少数几个是【切中要害】的。所谓“切中要害”的问题，就是那些会把你引向该事物【本质】的问题。<br>　　肯定有人要问，如何才能直接提出切中要害的问题？老实说，这没有捷径。只有经常思考的人，才能逐渐掌握这种“直接命中要害”的思维能力。<br>　　一旦提出 WHY 问题，接下来自然就是寻找答案。<br>　　显然，WHY 类型的问题比 HOW 类型的问题更难回答——在回答 WHY 类型问题的过程中，你不但需要动用分析、推理、归纳、总结等各种思维能力，可能还要运用到跨领域、跨学科的知识。但是收获也是很大的。一旦把这些 WHY 类型的问题想明白，你就对整个事件有一个既宏观又深刻的认识。<br>　　能达到这个境界，看问题通常会比较深刻。可惜这样的人比例太低了 :(</p><p>◇WHY 之后可以做啥？</p><p>　　可能有人会问：达到 WHY 境界之后，又该如何？所以俺补充了这一小节。<br>　　当你经历了 WHY 层次之后，你可以回过头，再用 WHAT 方式【重新审视】这个事物。这时候看到的信息同你一开始用 WHAT 方式看到的信息，已经迥然不同了。因为你一开始看到的是【表象】，而现在你已经能看到本质。<br>　　如果你愿意的话，你还可以开始思考解决之道。说到“如何解决问题”，这又是另一个很大的领域，已经超出本文的范畴——本文讲的是“如何认知”。要想学习“如何解决”，强烈建议大伙儿看一下书评：《你的灯亮着吗？——找到问题的真正所在》，非常经典！</p><p>★以“楼市”为例</p><p>　　前面说了一大通抽象的方法论，估计有些同学看着都要打瞌睡了。为了给大伙儿加深印象，俺拿个具体的例子来运用一下。考虑到这几年来，高房价是大伙儿的心病，俺就拿天朝的房地产市场来说事儿。</p><p>◇WHAT</p><p>　　首先要了解：时间、地点、当事人（这很容易）。<br>时间: 最近10年<br>地点: 天朝<br>当事人: 开发商、购房者、政府<br>至于事情经过，大伙儿应该也清楚：<br>开发商: 天朝所有的开发商都在涨价（个别地方甚至涨了好几倍）<br>购房者: 大多数购房者无力支付高房价，怨声载道。<br>政府: 近两年来，朝廷出台了各种措施。一方面控制销售方（对开发商限价），另一方面控制购买方（对民众限购）。</p><p>　　从【表面上】看，貌似政府真的很想把房价控制住；从【表面上】看，貌似开发商榨取了买房者的血汗钱。<br>　　估计很多人的认识就仅仅停留在上述水平（也就是 WHAT 层次）。</p><p>◇HOW</p><p>　　如果你进入到 HOW 层面，就应该继续思考……</p><ol><li>由于“价格”是天朝楼市的焦点所在，而楼价是开发商定的。那么，开发商是【如何】定出这个价格的？</li><li>开发商，顾名思义，首先是商人。而商人，自然是要赚钱滴。通俗滴说，卖楼得到的钞票必须大于盖楼花掉的钞票，它才有得赚。所以，你就需要继续思考：开发商盖楼的钱是【如何】花的？</li><li>稍微 Google 一下，不难发现，盖楼的成本主要有：土地成本、建材成本、劳动力成本、税收成本、其它成本（各种杂费）。这几项成本中，土地成本和税收成本是增长最快的。再稍微查一下 Google，你还会发现，土地成本占了开发商总成本的很大比例（据说比例高的，竟然达到59%）。另外，税收成本的比例也不低。</li><li>在天朝，所有土地皆国有。那开发商买地花掉的钱，都进了谁的口袋？各位用膝盖想一下，自然就明白啦。</li></ol><p>　　因此，想清楚这个层次的同学，就不会再把矛盾的焦点简单地对准开发商。当然啦，黑心的开发商也有不少，但是跟朝廷比起来，再黑心的开发商也是小巫见大巫。</p><p>◇WHY</p><p>　　如果你进入到 WHY 层面，可以思考的问题就更多了。比如：<br>【为什么】政府要把土地卖得这么贵捏？<br>土地这么贵了，【为什么】开发商还敢买捏？<br>开发商发售的楼盘这么贵了，【为什么】还有人要捏？<br>【为什么】很多人宁可买房也不肯租房捏？<br>……<br>　　请问，上述这几个问题，哪一个切中要害？俺认为是第一个问题——“为啥政府把地卖得这么贵”。<br>　　为了回答这个问题，你可以从如下几个角度去分析：<br>所有权的因素（天朝的土地是国有的）<br>财政收入的因素（卖地的钱成为各地财政收入的大头）<br>腐败的因素（天晓得这其中有多少钱变成了官员们的灰色收入）<br>GDP 的因素（GDP 增长率已经成为地方政府的面子工程）<br>通胀的因素<br>……<br>　　大伙儿请注意，上述的每一个因素，所起的作用有大有小。这时候，你要思考的就是：哪些因素是关键因素（决定性因素）？<br>　　（考虑到篇幅有限，俺就不一一展开分析了，直接说说俺的观点）<br>　　关键因素就是政治制度（别的因素都是由它引起的）。天朝的政治制度（一党专政、权力过度集中、缺乏监管）必然会衍生出权贵阶层；权贵阶层利用手中的权力来掠夺民众的财富（权力寻租、权钱交易）；而楼市只不过是财富转移的途径之一（稍微跑题一下：其实天朝的股市，也在起着类似的作用）。<br>　　稍微跑题一下，如果想知道天朝的权贵阶层有多牛B，请看俺的另一篇博文。</p><p>　　俺前面说过：要回答某个【深层次】的 WHY 类型问题，多半会涉及到跨学科、跨领域。关于“高房价”的问题，表面上属于房地产行业；一旦深入思考，却牵扯到政治制度。显然，那些浅层思维的人，往往看不到问题的本质。所以才会有很多人还在用所谓的“刚性需求”、所谓的“土地稀缺”来解释高房价。当然啦，也不排除某些别有用心的人揣着明白装糊涂，故意误导大家。</p><p>★总结</p><p>　　人类之所以能够从众多动物中脱颖而出，关键在于人类更擅长于思考；同样的，某个人之所以能从社会中脱颖而出，善于思考往往是重要因素（但不是唯一因素）。所以，列位看官不要仅仅满足于快餐文化，经常多动脑子，看问题千万不要流于表面！<br>　　最后，引用哲学鼻祖苏格拉底的名言作本文的结尾：未经反思自省的人生不值得去过。/ The unexamined life is not worth living.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;用提问来促进思维——兼谈【非】技术领域的-WHAT-HOW-WHY-三部曲&quot;&gt;&lt;a href=&quot;#用提问来促进思维——兼谈【非】技术领域的-WHAT-HOW-WHY-三部曲&quot; class=&quot;headerlink&quot; title=&quot;用提问来促进思维——兼谈【非】技术领
      
    
    </summary>
    
      <category term="逻辑" scheme="http://yoursite.com/categories/%E9%80%BB%E8%BE%91/"/>
    
      <category term="心理" scheme="http://yoursite.com/categories/%E9%80%BB%E8%BE%91/%E5%BF%83%E7%90%86/"/>
    
    
      <category term="逻辑" scheme="http://yoursite.com/tags/%E9%80%BB%E8%BE%91/"/>
    
  </entry>
  
  <entry>
    <title>聊聊【阴谋论】流行的原因及其弊端</title>
    <link href="http://yoursite.com/2019/05/14/%E8%81%8A%E8%81%8A%E3%80%90%E9%98%B4%E8%B0%8B%E8%AE%BA%E3%80%91%E6%B5%81%E8%A1%8C%E7%9A%84%E5%8E%9F%E5%9B%A0%E5%8F%8A%E5%85%B6%E5%BC%8A%E7%AB%AF/"/>
    <id>http://yoursite.com/2019/05/14/聊聊【阴谋论】流行的原因及其弊端/</id>
    <published>2019-05-14T07:40:16.000Z</published>
    <updated>2019-05-13T07:46:03.656Z</updated>
    
    <content type="html"><![CDATA[<h2 id="聊聊【阴谋论】流行的原因及其弊端"><a href="#聊聊【阴谋论】流行的原因及其弊端" class="headerlink" title="聊聊【阴谋论】流行的原因及其弊端"></a>聊聊【阴谋论】流行的原因及其弊端</h2><p>文章目录<br>★“阴谋论”是啥？<br>★为何阴谋论很有市场？<br>★阴谋论的弊端<br>★俺如何对待阴谋论观点<br>★“阴谋论”是啥？</p><p>　　所谓的“阴谋论”，就是把重大的历史事件，或者当代的一些重大事件，归结为某些秘密的团体策划的阴谋。</p><p>　　为了让各位读者有个具体的印象，俺举几个例子。<br>　　比如前几年很畅销的《货币战争》。在此书中，作者塑造了一个巨牛B的“罗斯柴尔德家族”。据作者说，从拿破仑战争、到第一次世界大战、到第二次世界大战、一直到现在，地球上所有重大的政治事件和经济事件，都是这个牛B家族在幕后事先操纵的。<br>　　比如前几年好莱坞拍的大片《达芬奇密码》（改编自同名小说），很多人应该都看过。也是以阴谋论为主题。说是从古至今，一直有个光明会（共济会）的秘密团体，在操控世界。<br>　　比如“9-11事件”已经过去10年了，依然还有很多人认为，9-11是美国政府自导自演的苦肉计，以此来达到不可告人的目的。</p><p>★为何阴谋论很有市场？</p><p>　　如果大伙儿仔细观察，会发现：周围有很多人相信形形色色的阴谋论。所以，俺有必要解释一下，其中的缘由。</p><p>◇心理因素</p><p>　　俺个人觉得，心理学层面的因素是阴谋论广泛存在的主要原因。对于阴谋论的心理学因素，俺总结了如下几点。</p><p>　　１、满足“简单性偏好”<br>　　什么是“简单性偏好”捏？在我们的潜意识里，总是企图用尽可能简单的概念来构建我们的知识体系。而阴谋论，恰好可以满足这种心理倾向——把所有的事情的根源都归结为一个或少数几个缘由。比如刚才提到的《货币战争》，就用”罗斯柴尔德家族”来解释所有重大的政治事件和经济事件。确实足够简单！</p><p>　　２、消除对“未知和不确定性”的恐惧<br>　　在人的潜意识中，存在一种对未知和不确定性的恐惧。这个应该是进化产生的。当初猿人在丛林中游荡的时候，周围的环境充满危险。而这种“对不确定性的恐惧”，有助于避免个体的冒险，从而提高生存的概率。<br>　　而阴谋论的存在，可以大大消除这种不确定性。在阴谋论者眼里，许多重大的历史事件，都可以得到很好的解释——全都是预先策划的，只有必然性（确定性），没有偶然性（随机性）。</p><p>　　３、为情感因素找到接口<br>　　这回，俺换一个例子，拿奥巴马同学来说事儿。<br>　　话说奥同学当选总统后，很多美国佬之间流传着一种说法，说奥同学不是在美国夏威夷出生的。根据美国法律，只有在美国本土出生的人，才能当总统。所以，这个阴谋论在质疑奥同学出生地的同时，也在质疑他总统身份的合法性。后来，美国官方给出了很多确凿的证据，证明奥同学确确实实在夏威夷出生，但有不少美国民众宁可相信阴谋论，也不愿相信那些确凿的证据。<br>　　为什么会这样捏？在这些人当中，有很大比例的人，在感情上无法接受“黑人当美国总统”这一现实。而接受阴谋论可以令他们逃避这一现实。</p><p>　　４、满足猎奇心理<br>　　为什么很多人热衷于娱乐圈八卦捏？这就是猎奇心理的作用。而阴谋论在某种程度上，很类似于娱乐圈八卦——同样给人提供惊奇、刺激、劲爆的信息，让受众感觉窥探到某些内幕，心里很爽。</p><p>◇政治因素</p><p>　　除了心理学因素，另一个对阴谋论推波助澜的，就是政治因素。<br>　　很多政客或者某些国家的政府，喜欢用阴谋论来操纵舆论，进而影响公众，以达到自己的目的。这样的例子，极权国家有，民主国家也有。<br>　　比如天朝这种极权国家，官方经常鼓吹：帝国主义忘我之心不死。把很多原本不相关的事情，都扣上“帝国主义颠覆天朝”的大帽子。近几年，天朝还流行另一个比较傻B的阴谋论——党中央在下一盘很大的棋——把伟光正吹得神乎其神。<br>　　即便像美国这样的民主国家，在50年代也出现了臭名昭著的麦卡锡主义，鼓吹赤色分子渗透到美国各界。很多科学家（比如爱因斯坦、奥本海默）都受到牵连，好在麦卡锡风光的时间不长。</p><p>◇经济因素</p><p>　　最后，再来说说经济因素。<br>　　由于阴谋论具有广泛的心理学基础，因此，很多阴谋论的调调，很吸引眼球。在当今互联网时代，吸引眼球就能意味着经济效益（眼球经济）。所以，就会促使某些人为了经济利益，大肆鼓吹阴谋论。<br>　　俺不妨邪恶地揣测一下，《货币战争》的作者应该借卖书，赚了不少银子。</p><p>★阴谋论的弊端</p><p>　　信奉阴谋论，对个人而言，会导致如下的弊端。</p><p>◇变得消极</p><p>　　如果一个人信奉阴谋论，认为所有的的重大事件都是阴谋集团在背后操纵，潜意识里就会觉得自己无法与之抗衡。长期受这种潜意识的影响，会让自己变得消极，事事随波逐流。</p><p>◇不善把握机会</p><p>　　在现实世界中（尤其在眼下这个信息时代），时常充满着偶然性，充满着突发事件。而这些偶然的，突发的事情，往往意味着机遇。善于抓住机遇的人，更容易为自己争取到利益，也更易达成自己的目标。<br>　　而那些信奉阴谋论的人，认定凡事都有人在背后操控。因此，这种人不相信偶然性，也不相信突发事件。自然也就不懂得去抓住机会。</p><p>★俺如何对待阴谋论观点</p><p>　　大部分的阴谋论有一个共同特点——【既无法证实又无法证伪】。也就是说，你可能永远都找不到确凿证据来证实它，也找不到确凿证据来否定它。所以，对这类阴谋论，俺持“保留态度”，既不相信它，也不去否定它；或者也可以说，持“忽略的态度”。对俺来说，一个不可能证实又不可能证否的命题，是一个没有意义的命题。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;聊聊【阴谋论】流行的原因及其弊端&quot;&gt;&lt;a href=&quot;#聊聊【阴谋论】流行的原因及其弊端&quot; class=&quot;headerlink&quot; title=&quot;聊聊【阴谋论】流行的原因及其弊端&quot;&gt;&lt;/a&gt;聊聊【阴谋论】流行的原因及其弊端&lt;/h2&gt;&lt;p&gt;文章目录&lt;br&gt;★“阴谋论”
      
    
    </summary>
    
      <category term="逻辑" scheme="http://yoursite.com/categories/%E9%80%BB%E8%BE%91/"/>
    
      <category term="心理" scheme="http://yoursite.com/categories/%E9%80%BB%E8%BE%91/%E5%BF%83%E7%90%86/"/>
    
    
      <category term="逻辑" scheme="http://yoursite.com/tags/%E9%80%BB%E8%BE%91/"/>
    
  </entry>
  
  <entry>
    <title>许锡良：中国的逻辑是怎样死亡的？</title>
    <link href="http://yoursite.com/2019/05/14/%E8%AE%B8%E9%94%A1%E8%89%AF%EF%BC%9A%E4%B8%AD%E5%9B%BD%E7%9A%84%E9%80%BB%E8%BE%91%E6%98%AF%E6%80%8E%E6%A0%B7%E6%AD%BB%E4%BA%A1%E7%9A%84%EF%BC%9F/"/>
    <id>http://yoursite.com/2019/05/14/许锡良：中国的逻辑是怎样死亡的？/</id>
    <published>2019-05-14T07:40:16.000Z</published>
    <updated>2019-05-13T07:52:22.870Z</updated>
    
    <content type="html"><![CDATA[<h2 id="许锡良：中国的逻辑是怎样死亡的？"><a href="#许锡良：中国的逻辑是怎样死亡的？" class="headerlink" title="许锡良：中国的逻辑是怎样死亡的？"></a>许锡良：中国的逻辑是怎样死亡的？</h2><p>中国有术而无学，是一个不争的事实。为什么会这样？因为，中国缺乏逻辑学。中国的文化的源头没有出过亚里斯多德式的人物。中国第一个真正的逻辑学家是当代学者金岳霖先生（1895-1984），而且他也是从美国的大学里学得的逻辑学，他的逻辑学著作《逻辑》、《知识论》的问世，中国才算是有了真正的逻辑学。一个缺乏逻辑思维能力的民族，什么混帐逻辑，混帐思维都会横行天下。中国数千年来的一治一乱，每个政权都出自枪杆子。正是因为缺乏了逻辑的民族，自然就会缺乏论理的能力，暴力滋生的地方，道理就自然消失，而逻辑也就变得没有必要了。</p><p>　　中国自古是一个讲“中庸之道”的民族，凡事都讲中庸。最早出现中庸说法是《尚书·大禹谟》中有所记载的“人心惟危，道心惟微；惟精惟一，允执厥中。”后来程子有言：“不偏之谓中；不易之谓庸。中者，天下之正道。庸者，天下之定理。”（朱熹《四书章句集注》）孔子也曾经有过“有鄙夫问于我，空空如也，我扣其两端而竭焉”和“过犹不及”之类的说法。中国的古文因为叙事背景的缺乏，后人很难作出完全合理的理解，每一代人都只能够作出一个大致的判断。对于那个“惟精惟一，允执厥中”的解释有多种多样。明朝的王阳明在回答其学生关于“惟精惟一”的提问的时候，曾回答说：“……博学、审问、慎思、明辨、笃行者，皆所以为惟精而求惟一也。”（《王阳明全集》上海古籍出版社1992年版：13页）算是对中庸之道有了一个比较彻底的解释。因为，无论是“允执厥中”也好，还是“执其两端而扣”也罢，“不偏不倚”、“执其两端”，都只是一个虚拟的说法。笼统地说来自然是这样的。但是，你怎么知道一个事件的两端在哪里？因此，还是王阳明懂得比较透彻。要明事理，必须“博学、审问、慎思、明辨、笃行”，但是，倘若没有逻辑学，缺乏逻辑思维能力，那么，要想审问、慎思、明辨，恐怕远非易事。知行合一，谈何容易。事实上，中庸之道，无论怎样解释，在知行合一的问题上，其实就是变成了各打五十大板，凡事和稀泥。因此，会哭的孩子有奶吃。反正是各打五十大板，过份也是这样，不过份也是这样。为了防止自己在打五十大板上吃亏，就必须“恨小非君子，无毒不丈夫”。因此，在“中庸之道”指导下的中国人，其行为常常并不中庸，相反，极易走极端。因为，这里没有精细的道理可讲。所作判断的依据，就是在事态控制之前，各退五十大步或者各打五十大板。当然，这样一来，事先坚守本份的一方是要明显吃亏的。中国矛盾多多，喜欢窝里斗，其根本要害就是缺乏逻辑分析能力，缺乏讲道理的习惯。即使是所谓教育，也多是口号、标语、语录等独断语句充斥其中。有时不受教育尚且能够以朴素的逻辑思考一些问题，一受教育，则变成了一脑袋瓜子浆糊。</p><p>　　因此，在中国，不讲逻辑，是有其源远流长的文化根源的。</p><p>　　自“五四”新文化运动之后，本来是好好学习西方逻辑思维的好时机，无奈，中国千年酱缸文化的巨大传染性与巨大惯性，在中国最需要科学、需要逻辑思维能力的时候，不合时宜地又引进了德国黑格尔、马克思的辩证法。这辩证法本来建立在西方逻辑学的基础上，问题还不大，毕竟他们有着千年的逻辑基础，人们在使用辩证法的时候，不至于昏暗到分不清黑白，看不清天地。但是，来到中国就不同了。这种似是而非的辩证法思维，与中国传统的中庸之道，一拍即合，在中国的昏庸文化之上，再来一点和稀泥的西洋法术。因此，在中国由上至下，通过教育，世代相传的一套标准话语体系出现了。如既黑又白，既错又对,既上又下，既左又右,既这样，又那样，把这样与那样有机密切地结合起来。到处拉郎配，搞统一战线。弄得整个社会，你的就是我的，我的也就是你的，天就是地，地也是天，白就是黑，黑也就是白。即使罪恶滔天，那也是前进中的曲折。前途是光明的，道路是曲折的。犯再大的错误，也只是光明道路上的一小段曲折。一切都是相对的，一切都可以调和折中。先有党，后有国。党大于国，也大于人民。比如X的事业至上、人民利益至上、宪法法律至上。“至上”的本来意义就是“最上”的意思。比如，“至尊”，就是最尊，九五尊就是皇帝的意思，也就是没有更尊的了。但是，“三个至上”，在逻辑上就存在问题。如果按照“三个至上”的思维，奥运会就得在同一个项目上设三个金牌，银牌铜牌都取消算了。“坚持中国特色社会主义政治发展道路，坚持党的领导、人民当家作主、依法治国有机统一，积极稳妥推进政治体制改革，不断推进社会主义政治制度自我完善和发展。”这段话用逻辑规则来分析也会有问题。既是党的领导，人民又如何来当家作主？依法治国与党的领导怎样有机统一？既是党说了算，那么依法治国又怎样个治法？如果只是自己管理自己，监督自己，那么，又靠什么去约束权力，使权力不被滥用？因此，在中国富有逻辑思维能力的人，常常就是危险分子，难怪郑板桥总结自己的一生，得出活在中国必须要学会“难得糊涂”，才能够安全地生存下去的人生经验。其实，在辩证法教条下发展起来的教育也是同样一塌糊涂。所提出的口号常常是：育人为本，德育为先，智育为主，体劳结合，全面发展。说了半天不知道究竟要表达什么。德育为先了，智育又要为主，最后还要全面发展，干脆说全面发展不就是了？教学理论也是这样：教师是主体，学生也是主体，教师是教的主体，学生是学的主体。因此，教学理论是双主体论。就像教学理论突然变成了一条“双头蛇”一样，想起来真是滑天下之大稽。</p><p>　　这种思维的含糊不清，就是所谓的辩证法思维的产物。在这里难免讲一大堆全面、客观、发展与联系的空洞无用的废话。表面是面面俱到，客观全面，其实是等于什么都没有说，什么也都没有说清。但是，他又实实在在地说了，整天在这里玩文字游戏。</p><p>　　其实我们也不难明白， 世界上发展得好的国家，都不会用这一套辩证法教条来控制所有人的思想， 人们真正需要遵守的规则就是形式逻辑规则，特别是逻辑的三大规律：即矛盾律、同一律和排中律，除此之外都是在讲鬼话。所以，中国如果要发展，先得从亚里斯多德的形式逻辑学开始，在逻辑学的基础上，学会真正的审问、慎思、明辨与笃行。只有这样，中国才可能会真正发展起来，中华民族才会有复兴的希望。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;许锡良：中国的逻辑是怎样死亡的？&quot;&gt;&lt;a href=&quot;#许锡良：中国的逻辑是怎样死亡的？&quot; class=&quot;headerlink&quot; title=&quot;许锡良：中国的逻辑是怎样死亡的？&quot;&gt;&lt;/a&gt;许锡良：中国的逻辑是怎样死亡的？&lt;/h2&gt;&lt;p&gt;中国有术而无学，是一个不争的
      
    
    </summary>
    
      <category term="逻辑" scheme="http://yoursite.com/categories/%E9%80%BB%E8%BE%91/"/>
    
      <category term="心理" scheme="http://yoursite.com/categories/%E9%80%BB%E8%BE%91/%E5%BF%83%E7%90%86/"/>
    
    
      <category term="逻辑" scheme="http://yoursite.com/tags/%E9%80%BB%E8%BE%91/"/>
    
  </entry>
  
  <entry>
    <title>思维的误区：忽视沉默的大多数</title>
    <link href="http://yoursite.com/2019/05/14/%E6%80%9D%E7%BB%B4%E8%AF%AF%E5%8C%BA%EF%BC%8C%E5%BF%BD%E7%95%A5%E6%B2%89%E9%BB%98%E7%9A%84%E5%A4%A7%E5%A4%9A%E6%95%B0/"/>
    <id>http://yoursite.com/2019/05/14/思维误区，忽略沉默的大多数/</id>
    <published>2019-05-14T07:40:16.000Z</published>
    <updated>2019-05-13T07:29:03.649Z</updated>
    
    <content type="html"><![CDATA[<h2 id="思维的误区：忽视沉默的大多数"><a href="#思维的误区：忽视沉默的大多数" class="headerlink" title="思维的误区：忽视沉默的大多数"></a>思维的误区：忽视沉默的大多数</h2><p>文章目录<br>★误区1：把随机事件当作确定事件<br>★误区2：主次颠倒<br>★误区3：把沉默当成爱恨的中间态<br>★结尾<br>★后记<br>　　本文标题中的“沉默的大多数”一词，借用了王小波的一篇知名杂文（谨以此文向已故的王小波致敬）。不过俺今天要聊的内容和王小波无关、也和政治无关。今天的内容，是探讨某些思维的误区。这些误区的根源，都在于“忽视了沉默的证据”。</p><p>★误区1：把随机事件当作确定事件</p><p>　　在本届（2010）世界杯期间，各种“预言帝”纷纷出笼。从8条腿的章鱼到2条腿的人，都敢于指点未来。关键是这些“预言帝”还很有市场，连不少 IT 行业的开发人员，都被它们蒙住了。下面俺举其中的2个事例。</p><p>◇百度贴吧的未来客</p><p>　　在世界杯刚开打的6月13日，一个网名叫“X来自未来”的网友在百度的2012吧发了个帖子（在“这里”）。它声称自己来自未来，并给出了世界杯决赛的预言——荷兰对西班牙。等到世界杯半决赛打完，网友们发现果真是西班牙与荷兰争夺冠军。于是该帖自然就在网上疯传。看过此帖的网友中，有相当比例的人，居然信以为真！<br>　　不过这个把戏并不高明。<br>　　在世界杯的那32个球队中，有把握进决赛的，也就没几个。玩这个把戏的人，只要把各种排列组合都算出来（大概也就20多种）。然后每一种组合注册一个马甲，分别发到不同的论坛/贴吧。<br>　　随着比赛不断进行，那些错误的预测会被网友当成胡说，不会引起注意。而最终那个命中的预测，自然会引起很多网友（尤其是缺少判断力的网友）极大的崇拜，并因此吸引众多的眼球。而对于始作俑者，几乎没有什么成本。</p><p>◇神奇的章鱼保罗</p><p>　　戳穿“贴吧”的伎俩后，再来说一下名气更大的章鱼保罗（这家伙已经成了全球明星）。保罗的光辉事迹，想必大伙都听说了，俺就不再啰嗦（不了解的网友可以看“这里”）。可能很多人都在纳闷——为啥这只低等软体动物，能猜得这么准捏？其实也不奇怪。<br>　　从网上的资料看，保罗来自德国的奥伯豪森水族馆。显然，德国的水族馆，绝对不止奥伯豪森一家。像世界杯这么大的赛事，其它的那些水族馆或者动物园，也会拿一些小动物来搞搞预测，吸引人气。而且，除了德国，其它的一些国家（比如法国、美国、英国、等）也会有动物园、水族馆在进行这类预测。<br>　　预测的动物多了之后，总归有少数几只预测比较准确的——这完全符合统计学的规律。那些预测不太准的，自然就被新闻界忽略了；而预测比较准的，自然名声大噪（新闻记者需要这种题材来吸引眼球）。顺便提一下，除了德国的章鱼预测较准，新加坡的一只鹦鹉（马尼），听说预测也较准。</p><p>◇关于生物学的例子</p><p>　　说完预测的例子，再来看看生物学方面的例子。<br>　　在生物界，充满了各种看似神奇的物种。比如蜜蜂建造的蜂巢，可以用最少的蜂蜡构建最大的空间；白蚁也可以建造结构及其复杂的蚁巢；蜘蛛织出来的网，具有几何学的完美性……<br>　　很多人根据上述的事例，就断定这一切皆有赖于神创。认为自然界无法自发地产生如此精妙的物种。<br>　　但事实如何捏？实际上，每一个物种的基因，都会【随机地】（盲目地）发生突变。有【少数】变异对物种的繁衍有利，因此这种基因就保留了下来；反之，【绝大多数】差劲的突变，不利于生存竞争，导致生物个体被淘汰，该基因也就消亡了。<br>　　由于大量的不良基因都已经消亡，所以就被人们忽略了。而咱们现在看到的，都是那些优良的基因在发挥效果。</p><p>◇总结</p><p>　　请列位看官琢磨一下，上述几个小故事，是否具有内在的共同点？<br>　　了解统计学的网友，应该明白：对于一些随机事件，只要统计的样本足够大，也会碰到一些巧合。这些所谓的巧合，实际上完全符合正常的概率分布。<br>　　但是，由于很多人忽略了大量的样本这个前提。就把本来是随机发生的事情，误以为是预先安排好的、有一定内在规律的。<br>　　好比你找一堆人来玩抛硬币的游戏，每人抛10次。只要你找的人足够多，总会有人连续10次都是正面。如果你非要追究这10次连续抛出正面，是否有啥内在规律，岂不可笑？</p><p>★误区2：主次颠倒</p><p>　　第2类误区说的是：忽略沉默的证据，会使人做出主次颠倒的判断。</p><p>◇关于打仗的例子</p><p>　　为了说明这类误区，俺来举一个军事的例子。<br>　　话说二战时的英国空军，经常派轰炸机去袭击德国。由于德国的防空火力较猛，轰炸机损失较惨重。为了降低飞机的损失，空军的领导们决定给飞机的机身进行装甲加固。由于当时条件所限，只能用装甲加固飞机上的少数部位。<br>　　然后，英国皇家空军就着手进行研究调查。他们对执行完轰炸任务返航的飞机进行仔细的观察、分析、统计。发现一个现象：大多数的弹孔，都集中在飞机的机翼上；只有少数弹孔位于驾驶舱。<br>　　假如你负责此事，你会用装甲加固哪个部位呢？估计很多同学会想当然地说：加固机翼（因为机翼的弹孔最多）。但是答案恰恰相反，【最不需要】加固就是机翼。为啥捏？<br>　　驾驶舱的弹孔最少，说明驾驶舱一旦中弹，飞机就载了，再也回不来。所以，它才是最应该加固的部位。</p><p>◇总结</p><p>　　在某些场合下，被你忽略的沉默信息，恰恰是关键信息。很多人会忽视这类关键的沉默信息，反而重视一些显眼，但不关键的信息。<br>　　在上述这个例子里，很多人想当然地（先验地）认为返航的轰炸机就是全部的样本。当他们开始思索答案的时候，就已经把那些中弹坠毁的飞机忽略掉了。所以，最终得出了相反的结论。</p><p>★误区3：把沉默当成爱恨的中间态</p><p>　　考虑到大多数人是比较感性的，俺最后再说一下（和情感有关的）第三类误区。</p><p>◇关于网站的例子</p><p>　　假设有2家网站A和B，都经营类似的业务，都有相当多的用户群。再假设它们都进行了类似的网站界面改版。结果改版之后，网站A没有得到用户的赞扬，反而遭到很多用户的臭骂；而网站B捏，既没有用户夸它，也没有用户骂它。现在，请你来判断一下，哪个网站得人心？<br>　　估计又有不少同学会想当然地认为，网站B更受欢迎，毕竟用户没骂它。但事实并非如此。<br>　　网站A虽然遭到很多用户痛骂，但至少说明，还有很多用户在乎它；而对于网站B，用户对它已经心灰意冷，无所谓了，所以啥反应也没有。<br>　　末了，俺悄悄告诉大伙儿：网站A指的是 Facebook，网站B影射微软旗下的 Live Spaces。这俩都属于 SNS 类网站。想当初，Facebook 稍微改动了隐私条款，差点被用户的口水淹死；反观 Live Spaces，界面越改越土鳖，功能越改越差劲（俺曾经使用 Live Spaces 搭建过镜像博客，对此深有体会）。但又有多少 Live Spaces 的用户去找微软投诉呢？</p><p>◇引申到其它方面</p><p>　　虽然刚才是拿网站的用户举例，不过类似的场景在其它领域也很常见。<br>　　比如在管理方面，如果员工经常对公司的缺点提出批评，至少说明员工还比较在乎公司，希望公司能够改进。<br>　　比如在婚姻方面，如果夫妻俩经常吵架，说明情况还不是算糟糕。如果双方连吵架都懒得吵，只剩下冷漠以对，那问题才真是严重了。</p><p>◇总结</p><p>　　对于这类误区的总结，重点就是一句话：爱的反面不是恨，是漠然。很多时候，沉默/漠然/冷漠，是比“恨”更糟糕的反应。千万不要忽视了这种反应。</p><p>★结尾</p><p>　　难得今天比较有空，举了好几个案例，不晓得大伙儿是否能悟出一些道道来？</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;思维的误区：忽视沉默的大多数&quot;&gt;&lt;a href=&quot;#思维的误区：忽视沉默的大多数&quot; class=&quot;headerlink&quot; title=&quot;思维的误区：忽视沉默的大多数&quot;&gt;&lt;/a&gt;思维的误区：忽视沉默的大多数&lt;/h2&gt;&lt;p&gt;文章目录&lt;br&gt;★误区1：把随机事件当作确定
      
    
    </summary>
    
      <category term="逻辑" scheme="http://yoursite.com/categories/%E9%80%BB%E8%BE%91/"/>
    
      <category term="心理" scheme="http://yoursite.com/categories/%E9%80%BB%E8%BE%91/%E5%BF%83%E7%90%86/"/>
    
    
      <category term="逻辑" scheme="http://yoursite.com/tags/%E9%80%BB%E8%BE%91/"/>
    
  </entry>
  
  <entry>
    <title>函数作用域, 块级作用域和词法作用域</title>
    <link href="http://yoursite.com/2018/12/24/%E4%BD%9C%E7%94%A8%E5%9F%9F/"/>
    <id>http://yoursite.com/2018/12/24/作用域/</id>
    <published>2018-12-24T07:40:16.000Z</published>
    <updated>2018-12-27T13:12:32.846Z</updated>
    
    <content type="html"><![CDATA[<h2 id="函数作用域-块级作用域和词法作用域"><a href="#函数作用域-块级作用域和词法作用域" class="headerlink" title="函数作用域, 块级作用域和词法作用域"></a>函数作用域, 块级作用域和词法作用域</h2><blockquote><ul><li>javaScript的函数在查找变量时从自身函数定义开始，从“内”向“外”查找。如果内部函数定义了与外部函数重名的变量，则内部函数的变量将“屏蔽”外部函数的变量。</li><li>由于javascript有变量提升这一规则所以需要在函数内部首先声明所有变量</li><li>不在函数内部定义的变量就有全局作用域.实际该变量就是绑定到全局对象window上的一个属性。</li><li>将全局变量全部放入一个命名空间中会大大减少全局变量冲突的可能</li><li>为了解决块级作用域，ES6引入了新的关键字let，用let替代var可以申明一个块级作用域的变量</li><li>ES6标准引入了新的关键字const来定义常量，const与let都具有块级作用域.常量不可改变</li><li>词法作用域注重的是所谓的Write-Time，即编程时的上下文，而动态作用域以及常见的this的用法，都是Run-Time，即运行时上下文</li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;函数作用域-块级作用域和词法作用域&quot;&gt;&lt;a href=&quot;#函数作用域-块级作用域和词法作用域&quot; class=&quot;headerlink&quot; title=&quot;函数作用域, 块级作用域和词法作用域&quot;&gt;&lt;/a&gt;函数作用域, 块级作用域和词法作用域&lt;/h2&gt;&lt;blockquote
      
    
    </summary>
    
      <category term="javascript" scheme="http://yoursite.com/categories/javascript/"/>
    
      <category term="node.js" scheme="http://yoursite.com/categories/javascript/node-js/"/>
    
    
      <category term="node, javaScript底层" scheme="http://yoursite.com/tags/node-javaScript%E5%BA%95%E5%B1%82/"/>
    
  </entry>
  
  <entry>
    <title>call, apply和bind的实现</title>
    <link href="http://yoursite.com/2018/11/29/call%E3%80%81apply%E5%92%8Cbind%E7%9A%84%E5%AE%9E%E7%8E%B0/"/>
    <id>http://yoursite.com/2018/11/29/call、apply和bind的实现/</id>
    <published>2018-11-29T07:40:16.000Z</published>
    <updated>2019-05-13T01:59:48.802Z</updated>
    
    <content type="html"><![CDATA[<h2 id="call与apply"><a href="#call与apply" class="headerlink" title="call与apply"></a>call与apply</h2><h4 id="call与apply方法都是使用一个指定的this值和对应的参数前提下调用某个函数和方法。区别在于call是通过传多个参数的方式-而apply则是传入一个数组。"><a href="#call与apply方法都是使用一个指定的this值和对应的参数前提下调用某个函数和方法。区别在于call是通过传多个参数的方式-而apply则是传入一个数组。" class="headerlink" title="call与apply方法都是使用一个指定的this值和对应的参数前提下调用某个函数和方法。区别在于call是通过传多个参数的方式,而apply则是传入一个数组。"></a>call与apply方法都是使用一个指定的this值和对应的参数前提下调用某个函数和方法。区别在于call是通过传多个参数的方式,而apply则是传入一个数组。</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">  name: <span class="string">'linxin'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">func</span>(<span class="params">age, sex</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>.name,age,sex);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func.call(obj,<span class="number">12</span>,<span class="string">'女'</span>);         <span class="comment">// linxin 12 女</span></span><br><span class="line">func.apply(obj, [<span class="number">18</span>, <span class="string">'女'</span>]);        <span class="comment">//linxin 18 女</span></span><br></pre></td></tr></table></figure><h3 id="模拟实现"><a href="#模拟实现" class="headerlink" title="模拟实现"></a>模拟实现</h3><h4 id="简单实现-思路-在javascript中的this指向说到了-函数还可以作为某个对象的方法调用-这时this就指这个上级对象-也就是我们平时说的，谁调用，this指向谁。所以实现的方法就是在传入的对象中添加这么一个方法，然后再去执行这个方法。为了保持对象一致，在执行完之后再把这个对象删除。"><a href="#简单实现-思路-在javascript中的this指向说到了-函数还可以作为某个对象的方法调用-这时this就指这个上级对象-也就是我们平时说的，谁调用，this指向谁。所以实现的方法就是在传入的对象中添加这么一个方法，然后再去执行这个方法。为了保持对象一致，在执行完之后再把这个对象删除。" class="headerlink" title="(简单实现)思路: 在javascript中的this指向说到了:函数还可以作为某个对象的方法调用,这时this就指这个上级对象.也就是我们平时说的，谁调用，this指向谁。所以实现的方法就是在传入的对象中添加这么一个方法，然后再去执行这个方法。为了保持对象一致，在执行完之后再把这个对象删除。"></a>(简单实现)思路: 在javascript中的this指向说到了:函数还可以作为某个对象的方法调用,这时this就指这个上级对象.也就是我们平时说的，谁调用，this指向谁。所以实现的方法就是在传入的对象中添加这么一个方法，然后再去执行这个方法。为了保持对象一致，在执行完之后再把这个对象删除。</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">Function</span>.prototype.newCall = <span class="function"><span class="keyword">function</span>(<span class="params">context</span>) </span>&#123;</span><br><span class="line">  context.fn = <span class="keyword">this</span>;  <span class="comment">// 通过this获取call的函数</span></span><br><span class="line">  context.fn();</span><br><span class="line">  <span class="keyword">delete</span> context.fn;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> foo = &#123;</span><br><span class="line">  value: <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bar</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>.value);</span><br><span class="line">&#125;</span><br><span class="line">bar.newCall (foo);</span><br></pre></td></tr></table></figure><h4 id="eval版本-传入参数-思路-我们可以进行优化一下-因为传入的参数数量是不确定的，我们可以从Arguments对象去获取，这个比较简单。问题是参数是不确定的，我们可以通过eval拼接或者es6"><a href="#eval版本-传入参数-思路-我们可以进行优化一下-因为传入的参数数量是不确定的，我们可以从Arguments对象去获取，这个比较简单。问题是参数是不确定的，我们可以通过eval拼接或者es6" class="headerlink" title="(eval版本,传入参数)思路: 我们可以进行优化一下, 因为传入的参数数量是不确定的，我们可以从Arguments对象去获取，这个比较简单。问题是参数是不确定的，我们可以通过eval拼接或者es6"></a>(eval版本,传入参数)思路: 我们可以进行优化一下, 因为传入的参数数量是不确定的，我们可以从Arguments对象去获取，这个比较简单。问题是参数是不确定的，我们可以通过eval拼接或者es6</h4><h5 id="eval版本"><a href="#eval版本" class="headerlink" title="eval版本"></a>eval版本</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">Function</span>.prototype.newCall = <span class="function"><span class="keyword">function</span>(<span class="params">context</span>) </span>&#123;</span><br><span class="line">  context.fn = <span class="keyword">this</span>;  <span class="comment">// 通过this获取call的函数</span></span><br><span class="line">  <span class="keyword">var</span> args = []</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">1</span>, len = <span class="built_in">arguments</span>.length; i &lt; len; i++)&#123;</span><br><span class="line">      args.push(<span class="string">'arguments['</span> + i + <span class="string">']'</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">eval</span>(<span class="string">'context.fn('</span> + args + <span class="string">')'</span>)</span><br><span class="line">  <span class="keyword">delete</span> context.fn;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> person = &#123;</span><br><span class="line">  name: <span class="string">'Abiel'</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sayHi</span>(<span class="params">age,sex</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>.name, age, sex);</span><br><span class="line">&#125;</span><br><span class="line">sayHi.newCall (person, <span class="number">25</span>, <span class="string">'男'</span>); <span class="comment">// Abiel 25 男</span></span><br></pre></td></tr></table></figure><h5 id="es6版本"><a href="#es6版本" class="headerlink" title="es6版本"></a>es6版本</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">Function</span>.prototype.newCall = <span class="function"><span class="keyword">function</span>(<span class="params">context, ...parameter</span>) </span>&#123;</span><br><span class="line">  context.fn = <span class="keyword">this</span>; </span><br><span class="line">  context.fn(...parameter)</span><br><span class="line">  <span class="keyword">delete</span> context.fn;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> person = &#123;</span><br><span class="line">  name: <span class="string">'Abiel'</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sayHi</span>(<span class="params">age,sex</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>.name, age, sex);</span><br><span class="line">&#125;</span><br><span class="line">sayHi.newCall (person, <span class="number">25</span>, <span class="string">'男'</span>); <span class="comment">// Abiel 25 男</span></span><br></pre></td></tr></table></figure><h5 id="改进版本"><a href="#改进版本" class="headerlink" title="改进版本"></a>改进版本</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">Function</span>.prototype.newCall = <span class="function"><span class="keyword">function</span>(<span class="params">context, ...parameter</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">typeof</span> context === <span class="string">'object'</span>)&#123;</span><br><span class="line">        context = context || <span class="built_in">window</span></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        context = <span class="built_in">Object</span>.create(<span class="literal">null</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> fn = <span class="built_in">Symbol</span>()</span><br><span class="line">    context[fn] = <span class="keyword">this</span></span><br><span class="line">    context[fn](...parameter)</span><br><span class="line">    <span class="keyword">delete</span> context.[fn]</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> person = &#123;</span><br><span class="line">  name: <span class="string">'Abiel'</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sayHi</span>(<span class="params">age,sex</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>.name, age, sex);</span><br><span class="line">&#125;</span><br><span class="line">sayHi.newCall (person, <span class="number">25</span>, <span class="string">'男'</span>); <span class="comment">// Abiel 25 男</span></span><br></pre></td></tr></table></figure><h2 id="bind的实现"><a href="#bind的实现" class="headerlink" title="bind的实现"></a>bind的实现</h2><h4 id="bind也是函数的方法-作用也是改变this的执行-同时也是能传多个参数-与call和apply不同的是bind方法不会立即执行，而是会返回一个改变上下文this指向后的函数，原函数并没有被改变。并且如果函数本身是一个绑定了this对象的函数，那么apply和call不会立即执行。"><a href="#bind也是函数的方法-作用也是改变this的执行-同时也是能传多个参数-与call和apply不同的是bind方法不会立即执行，而是会返回一个改变上下文this指向后的函数，原函数并没有被改变。并且如果函数本身是一个绑定了this对象的函数，那么apply和call不会立即执行。" class="headerlink" title="bind也是函数的方法,作用也是改变this的执行, 同时也是能传多个参数, 与call和apply不同的是bind方法不会立即执行，而是会返回一个改变上下文this指向后的函数，原函数并没有被改变。并且如果函数本身是一个绑定了this对象的函数，那么apply和call不会立即执行。"></a>bind也是函数的方法,作用也是改变this的执行, 同时也是能传多个参数, 与call和apply不同的是bind方法不会立即执行，而是会返回一个改变上下文this指向后的函数，原函数并没有被改变。并且如果函数本身是一个绑定了this对象的函数，那么apply和call不会立即执行。</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">Function</span>.prototype.bind = <span class="function"><span class="keyword">function</span> (<span class="params">context,...innerArgs</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> me = <span class="keyword">this</span></span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params">...finnalyArgs</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> me.call(context,...innerArgs,...finnalyArgs)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> person = &#123;</span><br><span class="line">    name: <span class="string">'Abiel'</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sayHi</span>(<span class="params">age,sex</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.name, age, sex)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> personSayHi = sayHi.bind(person, <span class="number">25</span>)</span><br><span class="line">personSayHi(<span class="string">'男'</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;call与apply&quot;&gt;&lt;a href=&quot;#call与apply&quot; class=&quot;headerlink&quot; title=&quot;call与apply&quot;&gt;&lt;/a&gt;call与apply&lt;/h2&gt;&lt;h4 id=&quot;call与apply方法都是使用一个指定的this值和对应的参数前
      
    
    </summary>
    
      <category term="javascript" scheme="http://yoursite.com/categories/javascript/"/>
    
      <category term="node.js" scheme="http://yoursite.com/categories/javascript/node-js/"/>
    
    
      <category term="node, javaScript底层" scheme="http://yoursite.com/tags/node-javaScript%E5%BA%95%E5%B1%82/"/>
    
  </entry>
  
  <entry>
    <title>乌镇互联网大会与科技的阴暗面</title>
    <link href="http://yoursite.com/2018/11/10/%E4%B9%8C%E9%95%87%E4%BA%92%E8%81%94%E7%BD%91%E5%A4%A7%E4%BC%9A%E4%B8%8E%E7%A7%91%E6%8A%80%E7%9A%84%E9%98%B4%E6%9A%97%E9%9D%A2/"/>
    <id>http://yoursite.com/2018/11/10/乌镇互联网大会与科技的阴暗面/</id>
    <published>2018-11-10T07:47:33.000Z</published>
    <updated>2018-11-10T07:57:47.400Z</updated>
    
    <content type="html"><![CDATA[<h4 id="乌镇互联网大会与科技的阴暗面"><a href="#乌镇互联网大会与科技的阴暗面" class="headerlink" title="乌镇互联网大会与科技的阴暗面"></a>乌镇互联网大会与科技的阴暗面</h4><p>RAYMOND ZHONG<br>2018年11月9日<br><img src="\images\news\2018.11.10\3.jpg" alt=""></p><h5 id="面部识别是中国科技领域的一个热门领域，它进一步推动了有趣的视频自拍和智能监控摄像头的发展。"><a href="#面部识别是中国科技领域的一个热门领域，它进一步推动了有趣的视频自拍和智能监控摄像头的发展。" class="headerlink" title="面部识别是中国科技领域的一个热门领域，它进一步推动了有趣的视频自拍和智能监控摄像头的发展。"></a>面部识别是中国科技领域的一个热门领域，它进一步推动了有趣的视频自拍和智能监控摄像头的发展。</h5><p>中国乌镇——自2014年起，上海附近风景如画的运河城乌镇每年都会举行世界互联网大会，与会的公司和政府官员发出这样的信息：中国是一支不可忽视的高科技力量。<br>如今这个信息早已不成问题，今年的会议展示了一些不同的东西。中国的科技产业正在更加认真地对待其产品的意外后果——以及如何帮助政府。<br>在关于科技未来的讨论当中，其阴暗的副作用渐渐开始出现，例如欺诈和数据泄露。一个关于保护个人信息的论坛中，发言者包括中国最高检察机构以及强大的互联网监管机构的代表。一些科技公司承诺支持北京的反恐工作，尽管中国在西部新疆地区以打击恐怖主义的名义拘押穆斯林，对其进行灌输教育，因而面临国际批评。<br>“腾讯一直致力于处理网上恐怖信息和其他互联网犯罪，这符合政府的打击行动，”腾讯安全管理部门的高管陈勇在会上说。<br><img src="\images\news\2018.11.10\4.jpg" alt=""></p><h5 id="本周，在中国乌镇举行的世界互联网大会上，展示了一个能感知手部动作并在屏幕上与之匹配的机器人。"><a href="#本周，在中国乌镇举行的世界互联网大会上，展示了一个能感知手部动作并在屏幕上与之匹配的机器人。" class="headerlink" title="本周，在中国乌镇举行的世界互联网大会上，展示了一个能感知手部动作并在屏幕上与之匹配的机器人。"></a>本周，在中国乌镇举行的世界互联网大会上，展示了一个能感知手部动作并在屏幕上与之匹配的机器人。</h5><p>本次于周五结束的会议也反映了中国面临的一些新挑战。它与另一个大型活动同时举行：在上海举办、为期六天的中国国际进口博览会，旨在展示中国是外国商品的大买家。随着美国关税有可能令疲软的中国经济进一步减缓，该国领导人习近平周一该博览会上发表讲话，宣称中国可以是全球贸易的一股正面力量。<br>相比之下，在乌镇，习近平只是派遣代理人出场。共产党宣传部部长黄坤明转达了习近平的致谢信，然后发表了开场致辞，赞美互联网接入改变世界的力量。<br>来自硅谷的使者也出现了短缺。去年来乌镇发言的人包括苹果公司首席执行官蒂姆·库克(Tim Cook)以及谷歌的桑达·皮查伊(Sundar Pichai)。今年，唯一一位发表主题演讲的西方技术高管是芯片制造商高通公司(Qualcomm)的首席执行官史蒂夫·莫伦科夫(Steve Mollenkopf)。<br>他的出席令人想起美国公司在中国持续面临的困境，而这种情况还有可能会加深，因为这两个国家在高科技霸权问题上争斗不休。在遭中国反垄断机构拒绝批准后，高通公司今年取消了以440亿美元收购一家荷兰芯片制造商的协议，此举被广泛视为贸易战中的报复行为。<br><img src="\images\news\2018.11.10\5.jpg" alt=""></p><h5 id="中国的科技产业正在越来越认真地对待产品的意外后果——以及帮助政府。"><a href="#中国的科技产业正在越来越认真地对待产品的意外后果——以及帮助政府。" class="headerlink" title="中国的科技产业正在越来越认真地对待产品的意外后果——以及帮助政府。"></a>中国的科技产业正在越来越认真地对待产品的意外后果——以及帮助政府。</h5><p>在中国公司当中，私营企业本周展示了他们在增加政府支持与合作，而国有公司则证明他们在科技方面并不是注定落后。<br>腾讯高管陈勇在接受采访时描述了该公司与执法部门的关系。<br>据报道，政治活动人士因他们在微信上所说的内容而遭到跟踪。聊天记录已成为法庭上的证据，以至于人们在猜测，提供这些记录的也许是该应用的开发商腾讯。<br>陈勇表示，腾讯会向政府报告在其平台上发现的非法活动，之后当局可以要求提供具体的用户信息。他说，描述用户登录腾讯应用程序的时间和地点的元数据可以存储长达六个月。但陈勇否认公司给执法人员留了后门，供他们自由地浏览聊天记录和用户数据。<br><img src="\images\news\2018.11.10\6.jpg" alt=""></p><h5 id="中科虹霸公司在政府的大力支持下，研发出帮助在中国找到被拐卖儿童的工具。它还与新疆有关部门合作，建立一个所有居民的视网膜数据库。"><a href="#中科虹霸公司在政府的大力支持下，研发出帮助在中国找到被拐卖儿童的工具。它还与新疆有关部门合作，建立一个所有居民的视网膜数据库。" class="headerlink" title="中科虹霸公司在政府的大力支持下，研发出帮助在中国找到被拐卖儿童的工具。它还与新疆有关部门合作，建立一个所有居民的视网膜数据库。"></a>中科虹霸公司在政府的大力支持下，研发出帮助在中国找到被拐卖儿童的工具。它还与新疆有关部门合作，建立一个所有居民的视网膜数据库。</h5><p>“我们只存储法律规定的内容，”他说。 “法律规定存多久，我们就存多久。法律规定存什么，我们就存什么。”<br>在会议展厅里，可以找到更轻松的设施。一家叫做远传的公司展示了几个热情的、一走一顿的机器人，它们靠轮子移动，跟在人们后面，提供帮他们拿包的服务。广受欢迎的视频应用程序快手通过扫描访客的脸来展示面部识别能力，然后在几秒钟内显示出在其庞大的视频库里，谁和这些访客长得最像。（结果各不相同。）<br>面部识别是中国科技界的一个热门领域，它为有趣的视频自拍和智能监控摄像头提供技术支持。参加会议的一家公司在此基础上更进一步。<br>中科虹霸总部位于北京，受到国家大力支持，它最初是为煤矿开发视网膜识别软件。因为矿工的面孔和指尖被煤灰覆盖，矿工需要另一种上下班打卡的技术。<br>该公司市场推广经理王欣涛表示，现在，中科虹霸的工具还在帮助识别叙利亚的难民，并在中国找回被拐卖的儿童。<br>王欣涛说，该公司还开始与新疆有关部门合作。目标？他说，要在两年内建立所有新疆居民的视网膜数据库。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;乌镇互联网大会与科技的阴暗面&quot;&gt;&lt;a href=&quot;#乌镇互联网大会与科技的阴暗面&quot; class=&quot;headerlink&quot; title=&quot;乌镇互联网大会与科技的阴暗面&quot;&gt;&lt;/a&gt;乌镇互联网大会与科技的阴暗面&lt;/h4&gt;&lt;p&gt;RAYMOND ZHONG&lt;br&gt;2018年
      
    
    </summary>
    
      <category term="纽约时报" scheme="http://yoursite.com/categories/%E7%BA%BD%E7%BA%A6%E6%97%B6%E6%8A%A5/"/>
    
    
      <category term="new" scheme="http://yoursite.com/tags/new/"/>
    
  </entry>
  
  <entry>
    <title>谷歌员工大罢工，对硅谷个人主义说“不”</title>
    <link href="http://yoursite.com/2018/11/10/%E8%B0%B7%E6%AD%8C%E5%91%98%E5%B7%A5%E5%A4%A7%E7%BD%A2%E5%B7%A5%EF%BC%8C%E5%AF%B9%E7%A1%85%E8%B0%B7%E4%B8%AA%E4%BA%BA%E4%B8%BB%E4%B9%89%E8%AF%B4%E2%80%9C%E4%B8%8D%E2%80%9D/"/>
    <id>http://yoursite.com/2018/11/10/谷歌员工大罢工，对硅谷个人主义说“不”/</id>
    <published>2018-11-10T07:21:44.000Z</published>
    <updated>2018-11-10T07:48:12.559Z</updated>
    
    <content type="html"><![CDATA[<h4 id="谷歌员工大罢工，对硅谷个人主义说“不”"><a href="#谷歌员工大罢工，对硅谷个人主义说“不”" class="headerlink" title="谷歌员工大罢工，对硅谷个人主义说“不”"></a>谷歌员工大罢工，对硅谷个人主义说“不”</h4><p>上周谷歌员工罢工最引人瞩目的方面可能不是约两万的参加人数，也不是它的全球影响力，甚至不是它在不到一周的时间内就组织在一起。最引人瞩目的是，组织者将他们的行动与更广泛的工人斗争关联起来，他们使用的语言，是富裕的科技员工之前闻所未闻的。<br>“这是一个不断发展的运动的一部分，”组织者在新闻稿中写道，“不仅是在科技领域，而是在全国各地，包括教师、快餐工作者和其他正在用自己的力量做出真正改变的人。”<br>抗议在公司旧金山办事处附近开始时，组织者甚至表达了对在该市罢工的万豪国际(Marriott)工人的支持.<br>几十年来，硅谷一直是某种个人主义的模糊乌托邦的起点——一个拥有笔记本电脑和互联网连接的工程师可以改变世界，或者至少能改变一个历史悠久的行业。阶级意识已经过时了。工会是创新的敌人，是现状的支柱。<br>但导致谷歌罢工的问题——该公司与五角大楼合作在人工智能方面进行的争议性工作；为中国建立一个审查版搜索引擎的明显意愿；最重要的是公司对高级管理人员性骚扰指控的处理——证明它们太大了，任何工人都无法独自面对，即使这个工人拥有六位数的收入。他们需要一种团结一致的形式，它可以在20世纪最激进的劳工组织者身上看到。<br>“硅谷的神话是，你需要的所有权力都体现在你个人身上——如果你想要更多钱，就去其他地方，”加州大学伯克利分校的劳工专家哈莉·谢肯(Harley Shaiken)说。“而他们在这里说的是，作为个人，他们拥有的所有经济权力都是不够的。”<br>谢肯和其他劳工专家表示，这一觉醒的后果可能会影响到整个科技行业。<br>科技行业的高管长期坚持认为工会效率低下——英特尔联合创始人罗伯特·诺伊斯(Robert Noyce)曾将工会描述为生死攸关的威胁——娴熟的技术工人不需要正式保护，因为雇主离不开他们。许多科技公司也宣传自己天生亲近员工，因为他们比旧经济企业更少等级制度，运作时更民主。<br>例如，谷歌指出，它的工人与高级管理人员有无数沟通方式：员工可以在每月举行几次的TGIF（意为“感谢上帝，到周五了”。——译注）会议上向首席执行官发问。在会议之前，他们还在内部公司平台上提问，管理层将对那些获得最多“支持票”的问题做出回应。工人之间甚至可以传阅请愿书，那些被证明特别受欢迎的请愿的作者可以同管理层进行交流。<br><img src="\images\news\2018.11.10\1.jpg" alt=""></p><h5 id="谷歌罢工的组织者向旧金山万豪酒店罢工的员工表示支持。-BEN-MARGOT-ASSOCIATED-PRESS"><a href="#谷歌罢工的组织者向旧金山万豪酒店罢工的员工表示支持。-BEN-MARGOT-ASSOCIATED-PRESS" class="headerlink" title="谷歌罢工的组织者向旧金山万豪酒店罢工的员工表示支持。 BEN MARGOT/ASSOCIATED PRESS"></a>谷歌罢工的组织者向旧金山万豪酒店罢工的员工表示支持。 BEN MARGOT/ASSOCIATED PRESS</h5><p>这种反复交流的基础是一种信念，即真理会从不受管制的思想交流中涌现出来。但是一些员工抱怨它很少能带来持久的变化。<br>“说到表达情感的机制，这里有很多，”梅雷迪斯·韦特克(Meredith Whittaker)说，她是一位12年的谷歌资深员工，负责监督公司的一个研究小组，是这次罢工的组织者之一。“但就代理和权力——在决策上的真正权力——的机会而言，你看到的一些事情在告诉你，两者是不平等的。”<br>《纽约时报》于10月底报道称，谷歌在一名高管因性骚扰指控离开公司时，给了他一笔9000万美元的赔付金，组织者说，这点燃了人们心中酝酿的失望情绪。<br>问题是这种个人的无力感能在谷歌中传播多远。罢工组织者认为这种感觉非常普遍——从软件开发人员到硬件工程师，从员工到承包商。<br>一些观察者同意这一点。对科技和其他行业员工进行维护劳工权益教育的网站CoWorker.org的联合创始人米歇尔·米勒(Michelle Miller)表示，在去年一名员工发布备忘录声称女性天生就缺乏某些技术工作的能力后，谷歌员工就“不得不开始将自己视为某种集体”。<br>她说那些批评这份备忘录并在内部论坛上为多元化努力辩护的工作人员，受到了那些同情备忘录作者詹姆斯·达莫尔(James Damore)的人的威胁，并且不得不联合起来互相争辩。<br>米歇尔·米勒认为，自达莫尔被开除后，谷歌员工已经确信管理层只会留意集体行动。这包括在该公司有争议的五角大楼合同结束之前发生的临时工人抗议。<br>考虑到其表面上的进步价值观，包括该公司一直以来秉守的“不作恶”箴言，以及公司系统的开放性，谷歌可能特别容易受到员工反抗的影响。组织者提到他们使用谷歌内部平台和其他公司资源实行了整个罢工。<br>他们表示，如果首席执行官桑达尔·皮查伊(Sundar Pichai)和他的团队没有给出计划对他们的一些诉求采取行动，他们相信抗议只会升级。这些诉求包括在谷歌母公司Alphabet董事会中设置一名员工代表，以及终止那些阻止集体诉讼并要求对歧视和骚扰案件进行个人仲裁的雇佣合同。<br>“员工已就如何改进我们的政策和未来的进程提出了建设性意见，”皮查伊在一份声明中说。“我们正在吸纳他们的所有反馈，以便我们能够将这些想法变为行动。”<br>劳工专家表示，罢工引发的任何变化都可能在硅谷蔓延。<br><img src="\images\news\2018.11.10\2.jpg" alt=""></p><h5 id="梅雷迪斯·韦特克-Meredith-Whittaker-（图中使用扩音器者）参与了上周谷歌罢工的组织工作。她说，公司为员工提供了很多表达意见的方法，但员工对公司决策的影响力太小。"><a href="#梅雷迪斯·韦特克-Meredith-Whittaker-（图中使用扩音器者）参与了上周谷歌罢工的组织工作。她说，公司为员工提供了很多表达意见的方法，但员工对公司决策的影响力太小。" class="headerlink" title="梅雷迪斯·韦特克(Meredith Whittaker)（图中使用扩音器者）参与了上周谷歌罢工的组织工作。她说，公司为员工提供了很多表达意见的方法，但员工对公司决策的影响力太小。"></a>梅雷迪斯·韦特克(Meredith Whittaker)（图中使用扩音器者）参与了上周谷歌罢工的组织工作。她说，公司为员工提供了很多表达意见的方法，但员工对公司决策的影响力太小。</h5><p>“这些公司正在为员工竞争，”圣路易斯大学(St. Louis University)法学教授马修·博迪(Matthew Bodie)说，他是全国劳动关系委员会(National Labor Relations Board)的前律师。<br>“如果Facebook的员工正在关注这件事，并说‘哇，这真是令人钦佩’，”博迪说，那么Facebook可能不得不效仿。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;谷歌员工大罢工，对硅谷个人主义说“不”&quot;&gt;&lt;a href=&quot;#谷歌员工大罢工，对硅谷个人主义说“不”&quot; class=&quot;headerlink&quot; title=&quot;谷歌员工大罢工，对硅谷个人主义说“不”&quot;&gt;&lt;/a&gt;谷歌员工大罢工，对硅谷个人主义说“不”&lt;/h4&gt;&lt;p&gt;上周
      
    
    </summary>
    
      <category term="纽约时报" scheme="http://yoursite.com/categories/%E7%BA%BD%E7%BA%A6%E6%97%B6%E6%8A%A5/"/>
    
    
      <category term="new" scheme="http://yoursite.com/tags/new/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript代码片段练习</title>
    <link href="http://yoursite.com/2018/11/05/JavaScript%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5%E7%BB%83%E4%B9%A0/"/>
    <id>http://yoursite.com/2018/11/05/JavaScript代码片段练习/</id>
    <published>2018-11-05T00:39:17.000Z</published>
    <updated>2018-11-05T02:42:27.735Z</updated>
    
    <content type="html"><![CDATA[<p>#### </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#### &lt;/p&gt;

      
    
    </summary>
    
      <category term="JavaScript" scheme="http://yoursite.com/categories/JavaScript/"/>
    
      <category term="代码练习" scheme="http://yoursite.com/categories/JavaScript/%E4%BB%A3%E7%A0%81%E7%BB%83%E4%B9%A0/"/>
    
    
      <category term="个人" scheme="http://yoursite.com/tags/%E4%B8%AA%E4%BA%BA/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript开发底层原理-Call Stack(1)</title>
    <link href="http://yoursite.com/2018/10/27/JavaScript%E5%BC%80%E5%8F%91%E5%BA%95%E5%B1%82%E5%8E%9F%E7%90%86-1/"/>
    <id>http://yoursite.com/2018/10/27/JavaScript开发底层原理-1/</id>
    <published>2018-10-27T03:27:20.000Z</published>
    <updated>2018-10-27T03:57:24.093Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Call-Stack"><a href="#Call-Stack" class="headerlink" title="Call Stack"></a>Call Stack</h2><h4 id="调用栈是解析器-如浏览器中的的javascript解析器-的一种机制，可以在脚本调用多个函数时，跟踪每个函数在完成执行时应该返回控制的点。（如什么函数正在执行，什么函数被这个函数调用，下一个调用的函数是谁）"><a href="#调用栈是解析器-如浏览器中的的javascript解析器-的一种机制，可以在脚本调用多个函数时，跟踪每个函数在完成执行时应该返回控制的点。（如什么函数正在执行，什么函数被这个函数调用，下一个调用的函数是谁）" class="headerlink" title="调用栈是解析器(如浏览器中的的javascript解析器)的一种机制，可以在脚本调用多个函数时，跟踪每个函数在完成执行时应该返回控制的点。（如什么函数正在执行，什么函数被这个函数调用，下一个调用的函数是谁）"></a>调用栈是解析器(如浏览器中的的javascript解析器)的一种机制，可以在脚本调用多个函数时，跟踪每个函数在完成执行时应该返回控制的点。（如什么函数正在执行，什么函数被这个函数调用，下一个调用的函数是谁）</h4><blockquote><ul><li>当脚本要调用一个函数时，解析器把该函数添加到栈中并且执行这个函数</li><li>任何被这个函数调用的函数会进一步添加到调用栈中，并且运行到它们被上个程序调用的位置。</li><li>当函数运行结束后，解释器将它从堆栈中取出，并在主代码列表中继续执行代码。</li><li>如果栈占用的空间比分配给它的空间还大，那么则会导致“栈溢出”错误。</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">greeting</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    sayHi();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sayHi</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"Hi!"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用 `greeting` 方法</span></span><br><span class="line">greeting();</span><br></pre></td></tr></table></figure><h4 id="执行过程"><a href="#执行过程" class="headerlink" title="执行过程"></a>执行过程</h4><ul><li>1.忽略所有的方法, 直到到达 greeting()方法.</li><li>2.调用 greeting() 方法.</li><li>3.把 <code>greeting</code> 方法加入调用栈列表。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">调用栈列表:</span><br><span class="line">- greeting</span><br></pre></td></tr></table></figure><ul><li>4.执行 <code>greeting</code> 方法中的所有代码行。</li><li>5.到达 sayHi() 方法。</li><li>6.把 sayHi() 方法加入调用栈列表。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">调用栈列表:</span><br><span class="line">- greeting</span><br><span class="line">- sayHi</span><br></pre></td></tr></table></figure><ul><li>7.执行 sayHi() 函数中的所有代码行，直到结束。</li><li>8.将执行返回到调用 sayHi() 的行，并继续执行 greeting() 函数的其余部分。</li><li>9.把 sayHi() 方法从调用栈列表中删除。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">调用栈列表:</span><br><span class="line">- greeting</span><br></pre></td></tr></table></figure><ul><li>10.当 greeting() 函数中的所有内容都执行完之后，返回到它的调用行继续执行其余的JS代码。</li><li>11.把 greeting() 方法从调用栈列表中删除。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">调用栈列表:</span><br><span class="line">空</span><br></pre></td></tr></table></figure><h6 id="我们从一个空的调用栈开始，当我们调用一个函数时，它会自动添加到调用栈中，在执行完所有代码之后，它会自动从调用栈中删除。最后，我们也得到了一个空栈。"><a href="#我们从一个空的调用栈开始，当我们调用一个函数时，它会自动添加到调用栈中，在执行完所有代码之后，它会自动从调用栈中删除。最后，我们也得到了一个空栈。" class="headerlink" title="我们从一个空的调用栈开始，当我们调用一个函数时，它会自动添加到调用栈中，在执行完所有代码之后，它会自动从调用栈中删除。最后，我们也得到了一个空栈。"></a>我们从一个空的调用栈开始，当我们调用一个函数时，它会自动添加到调用栈中，在执行完所有代码之后，它会自动从调用栈中删除。最后，我们也得到了一个空栈。</h6>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Call-Stack&quot;&gt;&lt;a href=&quot;#Call-Stack&quot; class=&quot;headerlink&quot; title=&quot;Call Stack&quot;&gt;&lt;/a&gt;Call Stack&lt;/h2&gt;&lt;h4 id=&quot;调用栈是解析器-如浏览器中的的javascript解析器-的一种机
      
    
    </summary>
    
      <category term="javascript" scheme="http://yoursite.com/categories/javascript/"/>
    
      <category term="node.js" scheme="http://yoursite.com/categories/javascript/node-js/"/>
    
    
      <category term="node, javaScript底层" scheme="http://yoursite.com/tags/node-javaScript%E5%BA%95%E5%B1%82/"/>
    
  </entry>
  
  <entry>
    <title>手摸手教你用node.js写后台api(3)</title>
    <link href="http://yoursite.com/2018/07/27/%E6%89%8B%E6%91%B8%E6%89%8B%E6%95%99%E4%BD%A0%E7%94%A8node.js%E5%86%99%E5%90%8E%E5%8F%B0api-3/"/>
    <id>http://yoursite.com/2018/07/27/手摸手教你用node.js写后台api-3/</id>
    <published>2018-07-27T07:54:47.000Z</published>
    <updated>2018-07-27T09:25:44.583Z</updated>
    
    <content type="html"><![CDATA[<h2 id="文中代码github地址-nbsp-nbsp-文中代码github地址"><a href="#文中代码github地址-nbsp-nbsp-文中代码github地址" class="headerlink" title="文中代码github地址 &nbsp;&nbsp;[文中代码github地址]"></a>文中代码github地址 &nbsp;&nbsp;<a href="https://github.com/daniel-lij/write-the-api-interface-with-node/tree/master/node-rest-shop" target="_blank" rel="noopener">[文中代码github地址]</a></h2><h2 id="mongDB简单使用方法-nbsp-nbsp-mongDB简单使用方法"><a href="#mongDB简单使用方法-nbsp-nbsp-mongDB简单使用方法" class="headerlink" title="mongDB简单使用方法 &nbsp;&nbsp;[mongDB简单使用方法]"></a>mongDB简单使用方法 &nbsp;&nbsp;<a href="https://coding.net/u/daniel-lij/p/daniel-lij-xmind/git/blob/master/mongodb.xmind" target="_blank" rel="noopener">[mongDB简单使用方法]</a></h2><blockquote><ul><li>当然mongDB的使用还有很多,随便上百度查查都可以查出不少于几万篇文章。</li></ul></blockquote><h4 id="1-引入在app-js中引入mongoose"><a href="#1-引入在app-js中引入mongoose" class="headerlink" title="1.引入在app.js中引入mongoose"></a>1.引入在app.js中引入mongoose</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>)</span><br><span class="line"><span class="keyword">const</span> app = express()</span><br><span class="line"><span class="keyword">const</span> morgan = <span class="built_in">require</span>(<span class="string">'morgan'</span>)</span><br><span class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">'body-parser'</span>)</span><br><span class="line"><span class="comment">// 获得mongoose做数据库</span></span><br><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">'mongoose'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> productRoutes = <span class="built_in">require</span>(<span class="string">'./api/routes/products'</span>)</span><br><span class="line"><span class="keyword">const</span> ordersRoutes = <span class="built_in">require</span>(<span class="string">'./api/routes/orders'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 只需要自己启动mongdb之后创建一个shop的数据库就能连接上</span></span><br><span class="line">mongoose.connect(<span class="string">'mongodb://localhost/shop'</span>)</span><br><span class="line"></span><br><span class="line">mongoose.Promise = global.Promise</span><br><span class="line"></span><br><span class="line"><span class="comment">// 日志启动的名字dev</span></span><br><span class="line">app.use(morgan(<span class="string">'dev'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">// 对post请求进行解析</span></span><br><span class="line">app.use(bodyParser.urlencoded(&#123; <span class="attr">extended</span>: <span class="literal">false</span> &#125;));</span><br><span class="line">app.use(bodyParser.json());</span><br><span class="line"></span><br><span class="line">app.use(<span class="function">(<span class="params">req, res, next</span>) =&gt;</span>&#123;</span><br><span class="line">    res.header(<span class="string">'Access-Control-Allow-Origin'</span>, <span class="string">'*'</span>)</span><br><span class="line">    res.header(<span class="string">'Access-Control-Allow-Headers'</span>,</span><br><span class="line">    <span class="string">'Origin, x-Requested-With, Content-Type, Accept, Authorization'</span></span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">if</span>( req.method === <span class="string">'OPTIONS'</span>) &#123;</span><br><span class="line">        res.header(<span class="string">'Access-Control-Allow-Methods'</span>, <span class="string">'PUT, POST, PATCH, DELETE, GET'</span>)</span><br><span class="line">        <span class="keyword">return</span> res.status(<span class="number">200</span>).json(&#123;&#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    next()</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.use(<span class="string">'/products'</span>, productRoutes)</span><br><span class="line">app.use(<span class="string">'/orders'</span>, ordersRoutes)</span><br><span class="line"></span><br><span class="line">app.use(<span class="function">(<span class="params">req, res, next</span>) =&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> error = <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'Not Found'</span>)</span><br><span class="line">    error.status = <span class="number">404</span></span><br><span class="line">    next(error)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.use(<span class="function">(<span class="params">error, req, res, next</span>) =&gt;</span>&#123;</span><br><span class="line">    res.status(error.status || <span class="number">500</span>)</span><br><span class="line">    res.json(&#123;</span><br><span class="line">        error:&#123;</span><br><span class="line">            message: error.message</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = app</span><br></pre></td></tr></table></figure><h4 id="2-创建数据库之后-开始做数据模型api文件夹下models文件夹创建product数据模型"><a href="#2-创建数据库之后-开始做数据模型api文件夹下models文件夹创建product数据模型" class="headerlink" title="2.创建数据库之后,开始做数据模型api文件夹下models文件夹创建product数据模型"></a>2.创建数据库之后,开始做数据模型api文件夹下models文件夹创建product数据模型</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">'mongoose'</span>)</span><br><span class="line"><span class="keyword">const</span> productSchema = mongoose.Schema(&#123;</span><br><span class="line">    <span class="comment">// 创建唯一的id</span></span><br><span class="line">    _id: mongoose.Schema.Types.ObjectId,</span><br><span class="line">    <span class="comment">// 创建name属性为必需属性</span></span><br><span class="line">    name: &#123;<span class="attr">type</span>: <span class="built_in">String</span>, <span class="attr">require</span>: <span class="literal">true</span>&#125;,</span><br><span class="line">    <span class="comment">// 创建price属性为必需属性</span></span><br><span class="line">    price: &#123;<span class="attr">type</span>: <span class="built_in">Number</span>, <span class="attr">require</span>: <span class="literal">true</span>&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">module</span>.exports = mongoose.model(<span class="string">'Product'</span>, productSchema)</span><br></pre></td></tr></table></figure><h4 id="3-修改路由文件routes-products-js"><a href="#3-修改路由文件routes-products-js" class="headerlink" title="3.修改路由文件routes/products.js"></a>3.修改路由文件routes/products.js</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>)</span><br><span class="line"><span class="keyword">const</span> router = express.Router()</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">'mongoose'</span>)</span><br><span class="line"><span class="keyword">const</span> Product = <span class="built_in">require</span>(<span class="string">'../models/product'</span>) </span><br><span class="line"></span><br><span class="line">router.get(<span class="string">'/'</span>,(req, res, next)=&gt;&#123;</span><br><span class="line">    Product.find().select(<span class="string">'name , price , _id'</span>).exec().then(<span class="function"><span class="params">result</span> =&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(result.length &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">const</span> response =&#123;</span><br><span class="line">                count : result.length,</span><br><span class="line">                products: result.map(<span class="function"><span class="params">doc</span> =&gt;</span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> &#123;</span><br><span class="line">                        name: doc.name,</span><br><span class="line">                        price: doc.price,</span><br><span class="line">                        _id: doc._id,</span><br><span class="line">                        request:&#123;</span><br><span class="line">                            type:<span class="string">'GET'</span>,</span><br><span class="line">                            url: <span class="string">"https://localhost:3000/"</span> + doc._id</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">            res.status(<span class="number">201</span>).json(response)</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            res.status(<span class="number">201</span>).json(&#123;</span><br><span class="line">                message:<span class="string">'没有请求到数据'</span></span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;).catch(<span class="function"><span class="params">err</span> =&gt;</span>&#123;</span><br><span class="line">        res.status(<span class="number">500</span>).json(&#123;</span><br><span class="line">            error: err</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">router.post(<span class="string">'/'</span>,(req, res, next)=&gt;&#123;</span><br><span class="line">    <span class="comment">// 存储请求的数据</span></span><br><span class="line">    <span class="keyword">const</span> product = <span class="keyword">new</span> Product(&#123;</span><br><span class="line">        _id: <span class="keyword">new</span> mongoose.Types.ObjectId(),</span><br><span class="line">        name: req.body.name,</span><br><span class="line">        price: req.body.price</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将请求的数据存储到数据库</span></span><br><span class="line">    product.save().then(<span class="function"><span class="params">result</span> =&gt;</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(result)</span><br><span class="line">        res.status(<span class="number">201</span>).json(&#123;</span><br><span class="line">            message:<span class="string">'this is products post req'</span>,</span><br><span class="line">            content: &#123;</span><br><span class="line">                name: result.name,</span><br><span class="line">                price: result.price,</span><br><span class="line">                _id: result._id,</span><br><span class="line">                request:&#123;</span><br><span class="line">                    type:<span class="string">'POST'</span>,</span><br><span class="line">                    url: <span class="string">"https://localhost:3000/"</span> + doc._id</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;).catch(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(err)</span><br><span class="line">        res.status(<span class="number">500</span>).json(&#123;</span><br><span class="line">            error: err</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">router.get(<span class="string">'/:productId'</span>, (req, res, next)=&gt;&#123;</span><br><span class="line">    <span class="keyword">const</span> id = req.params.productId</span><br><span class="line">    Product.findById(id).exec().then(<span class="function"><span class="params">doc</span> =&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(doc)&#123;</span><br><span class="line">            res.status(<span class="number">200</span>).json(doc)</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            res.status(<span class="number">404</span>).json(&#123;</span><br><span class="line">                message: <span class="string">'没有找到有效Id'</span></span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;).catch(<span class="function"><span class="params">err</span> =&gt;</span>&#123;</span><br><span class="line">        res.status(<span class="number">500</span>).json(&#123;</span><br><span class="line">            error: err</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">router.patch(<span class="string">'/:productId'</span>, (req, res, next)=&gt;&#123;</span><br><span class="line">    <span class="keyword">const</span> id = req.params.productId</span><br><span class="line">    <span class="keyword">const</span> updateOps = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">const</span> ops <span class="keyword">of</span> req.body)&#123;</span><br><span class="line">        updateOps[ops.propName] = ops.value</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(updateOps)</span><br><span class="line">    Product.update(&#123;<span class="attr">_id</span>: id&#125;, &#123;<span class="attr">$set</span>: updateOps&#125;).exec().then(<span class="function"><span class="params">result</span> =&gt;</span>&#123;</span><br><span class="line">        res.status(<span class="number">200</span>).json(result)        </span><br><span class="line">    &#125;).catch(<span class="function"><span class="params">err</span> =&gt;</span>&#123;</span><br><span class="line">        res.status(<span class="number">500</span>).json(&#123;</span><br><span class="line">            error: err</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">router.delete(<span class="string">'/:productId'</span>, (req, res, next)=&gt;&#123;</span><br><span class="line">    <span class="keyword">const</span> id = req.params.productId</span><br><span class="line">    Product.remove(&#123; <span class="attr">_id</span>: id&#125;).exec().then(<span class="function"><span class="params">result</span> =&gt;</span>&#123;</span><br><span class="line">        res.status(<span class="number">200</span>).json(&#123;</span><br><span class="line">            message: <span class="string">'删除成功'</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;).catch(<span class="function"><span class="params">err</span> =&gt;</span>&#123;</span><br><span class="line">        res.status(<span class="number">500</span>).json(&#123;</span><br><span class="line">            error: err</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = router</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;文中代码github地址-nbsp-nbsp-文中代码github地址&quot;&gt;&lt;a href=&quot;#文中代码github地址-nbsp-nbsp-文中代码github地址&quot; class=&quot;headerlink&quot; title=&quot;文中代码github地址 &amp;nbsp;&amp;nb
      
    
    </summary>
    
      <category term="javascript" scheme="http://yoursite.com/categories/javascript/"/>
    
      <category term="node.js" scheme="http://yoursite.com/categories/javascript/node-js/"/>
    
      <category term="express" scheme="http://yoursite.com/categories/javascript/node-js/express/"/>
    
    
      <category term="node, express" scheme="http://yoursite.com/tags/node-express/"/>
    
  </entry>
  
  <entry>
    <title>手摸手教你用node.js写后台api(2)</title>
    <link href="http://yoursite.com/2018/07/26/%E6%89%8B%E6%91%B8%E6%89%8B%E6%95%99%E4%BD%A0%E7%94%A8node.js%E5%86%99%E5%90%8E%E5%8F%B0api-2/"/>
    <id>http://yoursite.com/2018/07/26/手摸手教你用node.js写后台api-2/</id>
    <published>2018-07-26T03:33:26.000Z</published>
    <updated>2018-07-26T09:30:47.675Z</updated>
    
    <content type="html"><![CDATA[<h2 id="文中代码github地址-nbsp-nbsp-文中代码github地址"><a href="#文中代码github地址-nbsp-nbsp-文中代码github地址" class="headerlink" title="文中代码github地址 &nbsp;&nbsp;[文中代码github地址]"></a>文中代码github地址 &nbsp;&nbsp;<a href="https://github.com/daniel-lij/write-the-api-interface-with-node/tree/master/node-rest-shop" target="_blank" rel="noopener">[文中代码github地址]</a></h2><h4 id="1-全局错误处理"><a href="#1-全局错误处理" class="headerlink" title="1.全局错误处理"></a>1.全局错误处理</h4><h6 id="在我们访问页面时有可能参数传递错误-或者未知页面都有可能出现后端服务错误-需要错误处理机制来处理这些问题。"><a href="#在我们访问页面时有可能参数传递错误-或者未知页面都有可能出现后端服务错误-需要错误处理机制来处理这些问题。" class="headerlink" title="在我们访问页面时有可能参数传递错误, 或者未知页面都有可能出现后端服务错误, 需要错误处理机制来处理这些问题。"></a>在我们访问页面时有可能参数传递错误, 或者未知页面都有可能出现后端服务错误, 需要错误处理机制来处理这些问题。</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>)</span><br><span class="line"><span class="keyword">const</span> app = express()</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> productRoutes = <span class="built_in">require</span>(<span class="string">'./api/routes/products'</span>)</span><br><span class="line"><span class="keyword">const</span> ordersRoutes = <span class="built_in">require</span>(<span class="string">'./api/routes/orders'</span>)</span><br><span class="line"></span><br><span class="line">app.use(<span class="string">'/products'</span>, productRoutes)</span><br><span class="line">app.use(<span class="string">'/orders'</span>, ordersRoutes)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加错误处理机制(express中use写的顺序很重要,如果错误处理写道api逻辑代码前面,错误处理就会提前执行)</span></span><br><span class="line">app.use(<span class="function">(<span class="params">req, res, next</span>) =&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> error = <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'Not Found'</span>)</span><br><span class="line">    error.status = <span class="number">404</span></span><br><span class="line">    next(error) </span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.use(<span class="function">(<span class="params">error, req, res, next</span>) =&gt;</span>&#123;</span><br><span class="line">    res.status(error.status || <span class="number">500</span>)</span><br><span class="line">    res.json(&#123;</span><br><span class="line">        error:&#123;</span><br><span class="line">            message: error.message</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = app</span><br></pre></td></tr></table></figure><h4 id="2-安装日志记录工具npm-install-–save-morgan"><a href="#2-安装日志记录工具npm-install-–save-morgan" class="headerlink" title="2.安装日志记录工具npm install –save morgan"></a>2.安装日志记录工具npm install –save morgan</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>)</span><br><span class="line"><span class="keyword">const</span> app = express()</span><br><span class="line"><span class="comment">// 记录日志中间件</span></span><br><span class="line"><span class="keyword">const</span> morgan = <span class="built_in">require</span>(<span class="string">'morgan'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> productRoutes = <span class="built_in">require</span>(<span class="string">'./api/routes/products'</span>)</span><br><span class="line"><span class="keyword">const</span> ordersRoutes = <span class="built_in">require</span>(<span class="string">'./api/routes/orders'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 日志启动的名字dev</span></span><br><span class="line">app.use(morgan(<span class="string">'dev'</span>))</span><br><span class="line"></span><br><span class="line">app.use(<span class="string">'/products'</span>, productRoutes)</span><br><span class="line">app.use(<span class="string">'/orders'</span>, ordersRoutes)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理错误</span></span><br><span class="line">app.use(<span class="function">(<span class="params">req, res, next</span>) =&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> error = <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'Not Found'</span>)</span><br><span class="line">    error.status = <span class="number">404</span></span><br><span class="line">    next(error)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.use(<span class="function">(<span class="params">error, req, res, next</span>) =&gt;</span>&#123;</span><br><span class="line">    res.status(error.status || <span class="number">500</span>)</span><br><span class="line">    res.json(&#123;</span><br><span class="line">        error:&#123;</span><br><span class="line">            message: error.message</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = app</span><br></pre></td></tr></table></figure><h4 id="3-安装body-parser处理post请求-npm-install-–save-body-parser"><a href="#3-安装body-parser处理post请求-npm-install-–save-body-parser" class="headerlink" title="3.安装body-parser处理post请求 npm install –save body-parser"></a>3.安装body-parser处理post请求 npm install –save body-parser</h4><blockquote><ul><li>在app.js中引入body-parser</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>)</span><br><span class="line"><span class="keyword">const</span> app = express()</span><br><span class="line"><span class="keyword">const</span> morgan = <span class="built_in">require</span>(<span class="string">'morgan'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 引入解析post请求中间件</span></span><br><span class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">'body-parser'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> productRoutes = <span class="built_in">require</span>(<span class="string">'./api/routes/products'</span>)</span><br><span class="line"><span class="keyword">const</span> ordersRoutes = <span class="built_in">require</span>(<span class="string">'./api/routes/orders'</span>)</span><br><span class="line"></span><br><span class="line">app.use(morgan(<span class="string">'dev'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">// 对post请求进行解析</span></span><br><span class="line">app.use(bodyParser.urlencoded(&#123; <span class="attr">extended</span>: <span class="literal">false</span> &#125;));</span><br><span class="line">app.use(bodyParser.json());</span><br><span class="line"></span><br><span class="line">app.use(<span class="string">'/products'</span>, productRoutes)</span><br><span class="line">app.use(<span class="string">'/orders'</span>, ordersRoutes)</span><br><span class="line"></span><br><span class="line">app.use(<span class="function">(<span class="params">req, res, next</span>) =&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> error = <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'Not Found'</span>)</span><br><span class="line">    error.status = <span class="number">404</span></span><br><span class="line">    next(error)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.use(<span class="function">(<span class="params">error, req, res, next</span>) =&gt;</span>&#123;</span><br><span class="line">    res.status(error.status || <span class="number">500</span>)</span><br><span class="line">    res.json(&#123;</span><br><span class="line">        error:&#123;</span><br><span class="line">            message: error.message</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = app</span><br></pre></td></tr></table></figure><blockquote><ul><li>修改products.js文件的post做测试<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改post文件</span></span><br><span class="line">router.post(<span class="string">'/'</span>,(req, res, next)=&gt;&#123;</span><br><span class="line">    <span class="keyword">var</span> product = &#123;</span><br><span class="line">        name: req.body.name,</span><br><span class="line">        weight: req.body.weight</span><br><span class="line">    &#125;</span><br><span class="line">    res.status(<span class="number">201</span>).json(&#123;</span><br><span class="line">        message:<span class="string">'this is products post req'</span>,</span><br><span class="line">        content: product</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ul></blockquote><blockquote><ul><li>postman测试图片</li></ul></blockquote><p><img src="/images/node/body-parser.png" alt=""></p><h4 id="4-设置一些res相关参数-支持跨域"><a href="#4-设置一些res相关参数-支持跨域" class="headerlink" title="4.设置一些res相关参数,支持跨域"></a>4.设置一些res相关参数,支持跨域</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>)</span><br><span class="line"><span class="keyword">const</span> app = express()</span><br><span class="line"><span class="keyword">const</span> morgan = <span class="built_in">require</span>(<span class="string">'morgan'</span>)</span><br><span class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">'body-parser'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> productRoutes = <span class="built_in">require</span>(<span class="string">'./api/routes/products'</span>)</span><br><span class="line"><span class="keyword">const</span> ordersRoutes = <span class="built_in">require</span>(<span class="string">'./api/routes/orders'</span>)</span><br><span class="line"></span><br><span class="line">app.use(morgan(<span class="string">'dev'</span>))</span><br><span class="line"></span><br><span class="line">app.use(bodyParser.urlencoded(&#123; <span class="attr">extended</span>: <span class="literal">false</span> &#125;));</span><br><span class="line">app.use(bodyParser.json());</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置res.header相关的设置(然后做具体的业务处理)</span></span><br><span class="line">app.use(<span class="function">(<span class="params">req, res, next</span>) =&gt;</span>&#123;</span><br><span class="line">    res.header(<span class="string">'Access-Control-Allow-Origin'</span>, <span class="string">'*'</span>)</span><br><span class="line">    res.header(<span class="string">'Access-Control-Allow-Headers'</span>,</span><br><span class="line">    <span class="string">'Origin, x-Requested-With, Content-Type, Accept, Authorization'</span></span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">if</span>( req.method === <span class="string">'OPTIONS'</span>) &#123;</span><br><span class="line">        res.header(<span class="string">'Access-Control-Allow-Methods'</span>, <span class="string">'PUT, POST, PATCH, DELETE, GET'</span>)</span><br><span class="line">        <span class="keyword">return</span> res.status(<span class="number">200</span>).json(&#123;&#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    next()</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.use(<span class="string">'/products'</span>, productRoutes)</span><br><span class="line">app.use(<span class="string">'/orders'</span>, ordersRoutes)</span><br><span class="line"></span><br><span class="line">app.use(<span class="function">(<span class="params">req, res, next</span>) =&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> error = <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'Not Found'</span>)</span><br><span class="line">    error.status = <span class="number">404</span></span><br><span class="line">    next(error)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.use(<span class="function">(<span class="params">error, req, res, next</span>) =&gt;</span>&#123;</span><br><span class="line">    res.status(error.status || <span class="number">500</span>)</span><br><span class="line">    res.json(&#123;</span><br><span class="line">        error:&#123;</span><br><span class="line">            message: error.message</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = app</span><br></pre></td></tr></table></figure><blockquote><ul><li>postman测试图片</li></ul></blockquote><p><img src="/images/node/body-parser.png" alt=""></p><blockquote><ul><li>postman测试响应参数</li></ul></blockquote><p><img src="/images/node/res-header.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;文中代码github地址-nbsp-nbsp-文中代码github地址&quot;&gt;&lt;a href=&quot;#文中代码github地址-nbsp-nbsp-文中代码github地址&quot; class=&quot;headerlink&quot; title=&quot;文中代码github地址 &amp;nbsp;&amp;nb
      
    
    </summary>
    
      <category term="javascript" scheme="http://yoursite.com/categories/javascript/"/>
    
      <category term="node.js" scheme="http://yoursite.com/categories/javascript/node-js/"/>
    
      <category term="express" scheme="http://yoursite.com/categories/javascript/node-js/express/"/>
    
    
      <category term="node, express" scheme="http://yoursite.com/tags/node-express/"/>
    
  </entry>
  
  <entry>
    <title>手摸手教你用node.js写后台api(1)</title>
    <link href="http://yoursite.com/2018/07/25/%E6%89%8B%E6%91%B8%E6%89%8B%E6%95%99%E4%BD%A0%E7%94%A8node.js%E5%86%99%E5%90%8E%E5%8F%B0api-1/"/>
    <id>http://yoursite.com/2018/07/25/手摸手教你用node.js写后台api-1/</id>
    <published>2018-07-25T07:40:16.000Z</published>
    <updated>2018-11-10T07:35:40.764Z</updated>
    
    <content type="html"><![CDATA[<h2 id="文中代码github地址-nbsp-nbsp-文中代码github地址"><a href="#文中代码github地址-nbsp-nbsp-文中代码github地址" class="headerlink" title="文中代码github地址 &nbsp;&nbsp;[文中代码github地址]"></a>文中代码github地址 &nbsp;&nbsp;<a href="https://github.com/daniel-lij/write-the-api-interface-with-node/tree/master/node-rest-shop" target="_blank" rel="noopener">[文中代码github地址]</a></h2><h2 id="restful风格编码简单流程图"><a href="#restful风格编码简单流程图" class="headerlink" title="restful风格编码简单流程图"></a>restful风格编码简单流程图</h2><p><img src="/images/node/流程图.png" alt=""></p><h4 id="1-在文件夹中用cmd中初始化一个项目-推荐使用Conemu"><a href="#1-在文件夹中用cmd中初始化一个项目-推荐使用Conemu" class="headerlink" title="1.在文件夹中用cmd中初始化一个项目(推荐使用Conemu)"></a>1.在文件夹中用cmd中初始化一个项目(推荐使用Conemu)</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 产生一个package.json文件 --&gt;</span><br><span class="line">npm init</span><br></pre></td></tr></table></figure><h4 id="2-安装express-在根目录下创建一个server-js文件"><a href="#2-安装express-在根目录下创建一个server-js文件" class="headerlink" title="2.安装express,在根目录下创建一个server.js文件"></a>2.安装express,在根目录下创建一个server.js文件</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install express</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 引入node内置http中间件 --&gt;</span><br><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>)</span><br><span class="line">&lt;!-- 导入app.js文件 --&gt;</span><br><span class="line"><span class="keyword">const</span> app = <span class="built_in">require</span>(<span class="string">'./app'</span>)</span><br><span class="line"></span><br><span class="line">&lt;!-- 设置端口号, 环境变量中端口号 或者 自己设置的端口号 --&gt;</span><br><span class="line"><span class="keyword">const</span> port = process.env.PORT || <span class="number">3000</span></span><br><span class="line"></span><br><span class="line">&lt;!-- 用内置http中间件创造一个服务器,将app文件跑在node服务器上 --&gt;</span><br><span class="line"><span class="keyword">const</span> server = http.createServer(app)</span><br><span class="line"></span><br><span class="line">&lt;!-- 监听端口 --&gt;</span><br><span class="line">server.listen(port, ()=&gt;&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`数据库连接成功, 端口: <span class="subst">$&#123;port&#125;</span>`</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="2-在根目录下创建一个app-js文件"><a href="#2-在根目录下创建一个app-js文件" class="headerlink" title="2.在根目录下创建一个app.js文件"></a>2.在根目录下创建一个app.js文件</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入express后端框架</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>)</span><br><span class="line"><span class="keyword">const</span> app = express()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 引入后端构造的商品products文件 </span></span><br><span class="line"><span class="keyword">const</span> productRoutes = <span class="built_in">require</span>(<span class="string">'./api/routes/products'</span>)</span><br><span class="line"><span class="comment">// 引入后端构造的订单orders文件</span></span><br><span class="line"><span class="keyword">const</span> ordersRoutes = <span class="built_in">require</span>(<span class="string">'./api/routes/orders'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// app中使用products和orders,并指定路径</span></span><br><span class="line">app.use(<span class="string">'/products'</span>, productRoutes)</span><br><span class="line">app.use(<span class="string">'/orders'</span>, ordersRoutes)</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = app</span><br></pre></td></tr></table></figure><h4 id="2-在根目录下创建一个api文件夹-api文件夹下创建routes文件夹-这是后端路由-创建products-js-orders-js文件"><a href="#2-在根目录下创建一个api文件夹-api文件夹下创建routes文件夹-这是后端路由-创建products-js-orders-js文件" class="headerlink" title="2.在根目录下创建一个api文件夹,api文件夹下创建routes文件夹(这是后端路由),创建products.js,orders.js文件"></a>2.在根目录下创建一个api文件夹,api文件夹下创建routes文件夹(这是后端路由),创建products.js,orders.js文件</h4><blockquote><ul><li>创建products.js文件,进行一些常规操作</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入express文件</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>)</span><br><span class="line"><span class="comment">// 使用express的路由方法</span></span><br><span class="line"><span class="keyword">const</span> router = express.Router()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 比如获得商品</span></span><br><span class="line">router.get(<span class="string">'/'</span>,(req, res, next)=&gt;&#123;</span><br><span class="line">    res.status(<span class="number">200</span>).json(&#123;</span><br><span class="line">        message:<span class="string">'this is products get req'</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 比如创建商品</span></span><br><span class="line">router.post(<span class="string">'/'</span>,(req, res, next)=&gt;&#123;</span><br><span class="line">    res.status(<span class="number">201</span>).json(&#123;</span><br><span class="line">        message:<span class="string">'this is products post req'</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 比如获取商品的id</span></span><br><span class="line">router.post(<span class="string">'/:productId'</span>, (req, res, next)=&gt;&#123;</span><br><span class="line">    <span class="keyword">const</span> id = req.params.productId</span><br><span class="line">    <span class="keyword">if</span>(id === <span class="string">"special"</span>)&#123;</span><br><span class="line">        res.status(<span class="number">200</span>).json(&#123;</span><br><span class="line">            message: <span class="string">'this is products true id'</span>,</span><br><span class="line">            id: id</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        res.status(<span class="number">200</span>).json(&#123;</span><br><span class="line">            message: <span class="string">'this is products error id'</span>,</span><br><span class="line">            id: <span class="number">-1</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 比如修改商品id</span></span><br><span class="line">router.patch(<span class="string">'/:productId'</span>, (req, res, next)=&gt;&#123;</span><br><span class="line">    res.status(<span class="number">200</span>).json(&#123;</span><br><span class="line">        message: <span class="string">'this is products patch'</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 比如删除商品</span></span><br><span class="line">router.delete(<span class="string">'/:productId'</span>, (req, res, next)=&gt;&#123;</span><br><span class="line">    res.status(<span class="number">200</span>).json(&#123;</span><br><span class="line">        message: <span class="string">'this is products delete'</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 导出router</span></span><br><span class="line"><span class="built_in">module</span>.exports = router</span><br></pre></td></tr></table></figure><blockquote><ul><li>创建orders.js文件,进行一些常规操作,意图同上</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>)</span><br><span class="line"><span class="keyword">const</span> router = express.Router()</span><br><span class="line"></span><br><span class="line">router.get(<span class="string">'/'</span>,(req, res, next)=&gt;&#123;</span><br><span class="line">    res.status(<span class="number">200</span>).json(&#123;</span><br><span class="line">        message:<span class="string">'this is orders get req'</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">router.post(<span class="string">'/'</span>,(req, res, next)=&gt;&#123;</span><br><span class="line">    res.status(<span class="number">201</span>).json(&#123;</span><br><span class="line">        message:<span class="string">'this is orders post req'</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">router.post(<span class="string">'/:orderId'</span>, (req, res, next)=&gt;&#123;</span><br><span class="line">    <span class="keyword">const</span> id = req.params.orderId</span><br><span class="line">    <span class="built_in">console</span>.log(id)</span><br><span class="line">    <span class="keyword">if</span>(id === <span class="string">"123"</span>)&#123;</span><br><span class="line">        res.status(<span class="number">200</span>).json(&#123;</span><br><span class="line">            message: <span class="string">'this is orders true id'</span>,</span><br><span class="line">            id: id</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        res.status(<span class="number">200</span>).json(&#123;</span><br><span class="line">            message: <span class="string">'this is orders error id'</span>,</span><br><span class="line">            id: <span class="number">-1</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">router.delete(<span class="string">'/:orderId'</span>, (req, res, next)=&gt;&#123;</span><br><span class="line">    res.status(<span class="number">200</span>).json(&#123;</span><br><span class="line">        message: <span class="string">'this is orders delete'</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = router</span><br></pre></td></tr></table></figure><h4 id="3-在cmd中node-server-js运行后台服务进行测试"><a href="#3-在cmd中node-server-js运行后台服务进行测试" class="headerlink" title="3.在cmd中node server.js运行后台服务进行测试"></a>3.在cmd中node server.js运行后台服务进行测试</h4><blockquote><ul><li>在浏览器中进行测试 </li></ul></blockquote><h5 id="http-localhost-3000-products"><a href="#http-localhost-3000-products" class="headerlink" title="http://localhost:3000/products"></a><a href="http://localhost:3000/products" target="_blank" rel="noopener">http://localhost:3000/products</a></h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 20180725165116</span></span><br><span class="line"><span class="comment">// http://localhost:3000/products</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="string">"message"</span>: <span class="string">"this is get req"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="但是很不幸的是浏览器只能测试get方法-不能测试post以及其他的方法所以测试后台api写的正确与否-一般使用postman进行测试"><a href="#但是很不幸的是浏览器只能测试get方法-不能测试post以及其他的方法所以测试后台api写的正确与否-一般使用postman进行测试" class="headerlink" title="但是很不幸的是浏览器只能测试get方法,不能测试post以及其他的方法所以测试后台api写的正确与否,一般使用postman进行测试"></a>但是很不幸的是浏览器只能测试get方法,不能测试post以及其他的方法所以测试后台api写的正确与否,一般使用postman进行测试</h5><h5 id="postman下载地址-nbsp-nbsp-postman下载地址"><a href="#postman下载地址-nbsp-nbsp-postman下载地址" class="headerlink" title="postman下载地址 &nbsp;&nbsp;[postman下载地址]"></a>postman下载地址 &nbsp;&nbsp;<a href="https://www.getpostman.com/apps" target="_blank" rel="noopener">[postman下载地址]</a></h5><blockquote><ul><li>在postman中测试</li></ul></blockquote><h5 id="GET-http-localhost-3000-products"><a href="#GET-http-localhost-3000-products" class="headerlink" title="GET http://localhost:3000/products"></a>GET <a href="http://localhost:3000/products" target="_blank" rel="noopener">http://localhost:3000/products</a></h5><p><img src="/images/node/get.png" alt=""></p><h5 id="POST-http-localhost-3000-products"><a href="#POST-http-localhost-3000-products" class="headerlink" title="POST http://localhost:3000/products"></a>POST <a href="http://localhost:3000/products" target="_blank" rel="noopener">http://localhost:3000/products</a></h5><p><img src="/images/node/post.png" alt=""></p><h5 id="带正确id-POST-http-localhost-3000-products-special"><a href="#带正确id-POST-http-localhost-3000-products-special" class="headerlink" title="带正确id POST http://localhost:3000/products/special"></a>带正确id POST <a href="http://localhost:3000/products/special" target="_blank" rel="noopener">http://localhost:3000/products/special</a></h5><p><img src="/images/node/带正确id.png" alt=""></p><h5 id="修改-PATCH-http-localhost-3000-products-special"><a href="#修改-PATCH-http-localhost-3000-products-special" class="headerlink" title="修改 PATCH http://localhost:3000/products/special"></a>修改 PATCH <a href="http://localhost:3000/products/special" target="_blank" rel="noopener">http://localhost:3000/products/special</a></h5><p><img src="/images/node/patch.png" alt=""></p><h5 id="删除-DELETE-http-localhost-3000-products-special"><a href="#删除-DELETE-http-localhost-3000-products-special" class="headerlink" title="删除 DELETE http://localhost:3000/products/special"></a>删除 DELETE <a href="http://localhost:3000/products/special" target="_blank" rel="noopener">http://localhost:3000/products/special</a></h5><p><img src="/images/node/delete.png" alt=""></p><h4 id="3-后端服务器进行热跟新-安装nodemon-npm-install-–save-dev-nodemon（–save-dev安装开发时依赖文件）"><a href="#3-后端服务器进行热跟新-安装nodemon-npm-install-–save-dev-nodemon（–save-dev安装开发时依赖文件）" class="headerlink" title="3.后端服务器进行热跟新,安装nodemon npm install –save-dev nodemon（–save-dev安装开发时依赖文件）"></a>3.后端服务器进行热跟新,安装nodemon npm install –save-dev nodemon（–save-dev安装开发时依赖文件）</h4><h5 id="修改package-json文件修改启动方式"><a href="#修改package-json文件修改启动方式" class="headerlink" title="修改package.json文件修改启动方式"></a>修改package.json文件修改启动方式</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="string">"name"</span>: <span class="string">"rest-shop"</span>,</span><br><span class="line"><span class="string">"version"</span>: <span class="string">"1.0.0"</span>,</span><br><span class="line"><span class="string">"description"</span>: <span class="string">"a describe"</span>,</span><br><span class="line"><span class="string">"main"</span>: <span class="string">"index.js"</span>,</span><br><span class="line"><span class="string">"scripts"</span>: &#123;</span><br><span class="line">    <span class="string">"test"</span>: <span class="string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span>,</span><br><span class="line">    <span class="comment">// 增加这一句启动方式就可以了</span></span><br><span class="line">    <span class="string">"start"</span>: <span class="string">"nodemon server.js"</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">"author"</span>: <span class="string">"daniel-lij"</span>,</span><br><span class="line"><span class="string">"license"</span>: <span class="string">"MIT"</span>,</span><br><span class="line"><span class="string">"dependencies"</span>: &#123;</span><br><span class="line">    <span class="string">"express"</span>: <span class="string">"^4.16.3"</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">"devDependencies"</span>: &#123;</span><br><span class="line">    <span class="string">"nodemon"</span>: <span class="string">"^1.18.3"</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="在cmd中运行npm-start后修改代码会从新启动服务"><a href="#在cmd中运行npm-start后修改代码会从新启动服务" class="headerlink" title="在cmd中运行npm start后修改代码会从新启动服务"></a>在cmd中运行npm start后修改代码会从新启动服务</h5>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;文中代码github地址-nbsp-nbsp-文中代码github地址&quot;&gt;&lt;a href=&quot;#文中代码github地址-nbsp-nbsp-文中代码github地址&quot; class=&quot;headerlink&quot; title=&quot;文中代码github地址 &amp;nbsp;&amp;nb
      
    
    </summary>
    
      <category term="javascript" scheme="http://yoursite.com/categories/javascript/"/>
    
      <category term="node.js" scheme="http://yoursite.com/categories/javascript/node-js/"/>
    
    
      <category term="node" scheme="http://yoursite.com/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>一些自己常用的网站</title>
    <link href="http://yoursite.com/2018/04/19/%E4%B8%80%E4%BA%9B%E8%87%AA%E5%B7%B1%E5%B8%B8%E7%94%A8%E7%9A%84%E7%BD%91%E7%AB%99/"/>
    <id>http://yoursite.com/2018/04/19/一些自己常用的网站/</id>
    <published>2018-04-19T02:11:16.000Z</published>
    <updated>2019-05-14T02:29:22.884Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一些自己常用的网站"><a href="#一些自己常用的网站" class="headerlink" title="一些自己常用的网站"></a>一些自己常用的网站</h2><h4 id="公司工作常用"><a href="#公司工作常用" class="headerlink" title="公司工作常用"></a>公司工作常用</h4><blockquote><ul><li>腾讯企业邮箱 &nbsp;&nbsp;<a href="https://exmail.qq.com/cgi-bin/loginpage?s=session_timeout&amp;from=&amp;r=cdcbb0879d0f165ddcb34f1954bbee84" target="_blank" rel="noopener">[腾讯企业邮箱地址]</a></li><li>彩程设计 &nbsp;&nbsp;<a href="https://tower.im/users/sign_in" target="_blank" rel="noopener">[彩程设计地址]</a></li><li>Coding &nbsp;&nbsp; <a href="https://coding.net/login" target="_blank" rel="noopener">[Coding地址]</a></li><li>Mantis &nbsp;&nbsp; <a href="http://www.yoteam.net:81/login_page.php" target="_blank" rel="noopener">[mantis地址]</a> <!-- > * 服务地址 &nbsp;&nbsp; [[服务地址]](http://39.106.110.130:1014/) --></li><li>ArcGIS Server 管理器 &nbsp;&nbsp; <a href="http://192.168.2.9:6080/arcgis/manager/index.html#f=System" target="_blank" rel="noopener">[ArcGIS Server 管理器地址]</a></li><li>MDN WEB &nbsp;&nbsp; <a href="https://developer.mozilla.org/zh-CN/" target="_blank" rel="noopener">[MDN WEB地址]</a> </li><li>google图片 &nbsp;&nbsp; <a href="https://images.google.com/" target="_blank" rel="noopener">[google图片地址]</a></li><li>印象笔记 &nbsp;&nbsp; <a href="https://app.yinxiang.com/Login.action?targetUrl=%2FHome.action#n=19d767f0-19f2-411c-aada-9e9a1555a5dd&amp;s=s6&amp;b=c54eee78-ac3e-47af-ad8e-eb061a956c59&amp;ses=4&amp;sh=1&amp;sds=5&amp;" target="_blank" rel="noopener">[印象笔记地址]</a></li><li>vue官网 &nbsp;&nbsp; <a href="https://cn.vuejs.org/" target="_blank" rel="noopener">[vue地址]</a></li><li>vue测试 &nbsp;&nbsp; <a href="http://jsfiddle.net/chrisvfritz/50wL7mdz/" target="_blank" rel="noopener">[vue测试地址]</a></li><li>css3参考手册 &nbsp;&nbsp; <a href="http://css.doyoe.com/" target="_blank" rel="noopener">[css3参考手册地址]</a></li><li>htmltojade &nbsp;&nbsp; <a href="http://www.html2jade.org/" target="_blank" rel="noopener">[htmltojade地址]</a></li><li>谷歌的devtools文档中文 &nbsp;&nbsp; <a href="http://www.css88.com/doc/chrome-devtools/" target="_blank" rel="noopener">[谷歌的devtools文档中文地址]</a></li><li>node版本下载地址 &nbsp;&nbsp; <a href="https://nodejs.org/zh-cn/download/releases/" target="_blank" rel="noopener">[node版本下载地址]</a></li><li>流程图设计 &nbsp;&nbsp; <a href="https://www.draw.io/" target="_blank" rel="noopener">[流程图设计]</a></li></ul></blockquote><h4 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h4><blockquote><ul><li>Github上最热门的项目 &nbsp;&nbsp;<a href="https://github.com/trending" target="_blank" rel="noopener">[Github趋势地址]</a></li><li>HelloGitHub &nbsp;&nbsp;<a href="https://github.com/521xueweihan/HelloGitHub" target="_blank" rel="noopener">[HelloGitHub]</a></li><li>现代Javascript教程 &nbsp;&nbsp;<a href="https://javascript.info/" target="_blank" rel="noopener">[现代Javascript教程地址]</a></li><li>ECharts &nbsp;&nbsp;<a href="https://github.com/ecomfe/echarts" target="_blank" rel="noopener">[ECharts地址]</a></li><li>开发人员路线图 &nbsp;&nbsp; <a href="https://github.com/kamranahmedse/developer-roadmap" target="_blank" rel="noopener">[开发人员路线图地址]</a></li><li>所有程序开发工具集合 &nbsp;&nbsp; <a href="https://github.com/sindresorhus/awesome#gaming" target="_blank" rel="noopener">[awesome地址]</a></li><li>中国独立开发者项目列表 &nbsp;&nbsp; <a href="https://github.com/1c7/chinese-independent-developer" target="_blank" rel="noopener">[中国独立开发者项目列表]</a></li><li>技术面试基础 &nbsp;&nbsp; <a href="https://github.com/CyC2018/Interview-Notebook" target="_blank" rel="noopener">[技术面试基础]</a></li><li>基于bootStrap的tablerUI &nbsp;&nbsp; <a href="https://tabler.github.io/tabler/" target="_blank" rel="noopener">[tablerUI地址]</a></li><li>30秒的javaScript代码 &nbsp;&nbsp; <a href="https://30secondsofcode.org/" target="_blank" rel="noopener">[30秒的javaScript代码]</a></li><li>vue的富文本编辑器 &nbsp;&nbsp; <a href="https://github.com/heyscrumpy/tiptap" target="_blank" rel="noopener">[vue的富文本编辑器]</a></li><li>JavaScript开发者应懂的33个概念 &nbsp;&nbsp; <a href="https://github.com/stephentian/33-js-concepts" target="_blank" rel="noopener">[JavaScript开发者应懂的33个概念]</a></li></ul></blockquote><h4 id="Ember"><a href="#Ember" class="headerlink" title="Ember"></a>Ember</h4><blockquote><ul><li>EmberTruthHelpers &nbsp;&nbsp;<a href="https://github.com/jmurphyau/ember-truth-helpers" target="_blank" rel="noopener">[Ember Truth Helpers]</a></li></ul></blockquote><h4 id="系统下载网站"><a href="#系统下载网站" class="headerlink" title="系统下载网站"></a>系统下载网站</h4><blockquote><ul><li>Linux下载 &nbsp;&nbsp;<a href="https://www.linux.org/pages/download/" target="_blank" rel="noopener">[Linux下载地址1]</a>&nbsp;&nbsp;&nbsp;<a href="https://distrowatch.com/" target="_blank" rel="noopener">[Linux下载地址2]</a></li><li>Windows下载 &nbsp;&nbsp;<a href="https://msdn.itellyou.cn/" target="_blank" rel="noopener">[Windows下载地址]</a></li><li>Macos下载 &nbsp;&nbsp; <a href="https://support.apple.com/en_US/downloads/macos" target="_blank" rel="noopener">[Macos下载地址]</a></li><li>Unix下载 &nbsp;&nbsp; <a href="http://www.unixdownload.net/" target="_blank" rel="noopener">[Unix下载地址]</a></li></ul></blockquote><h4 id="Youtube视屏下载"><a href="#Youtube视屏下载" class="headerlink" title="Youtube视屏下载"></a>Youtube视屏下载</h4><blockquote><ul><li>Findyoutube &nbsp;&nbsp; <a href="https://www.findyoutube.net/" target="_blank" rel="noopener">[Findyoutube地址]</a></li><li>Savefrom &nbsp;&nbsp; <a href="https://en.savefrom.net/" target="_blank" rel="noopener">[Savefrom地址]</a></li></ul></blockquote><h4 id="工具网站"><a href="#工具网站" class="headerlink" title="工具网站"></a>工具网站</h4><blockquote><ul><li>颜色转换网站 &nbsp;&nbsp;<a href="http://www.sioe.cn/yingyong/yanse-rgb-16/" target="_blank" rel="noopener">[颜色转换网站地址1]</a>&nbsp;&nbsp;&nbsp;<a href="http://gavin-yyc.github.io/colorconvert/" target="_blank" rel="noopener">[颜色转换网站地址2]</a></li><li>检测CSS兼容性网站 &nbsp;&nbsp;<a href="https://caniuse.com/" target="_blank" rel="noopener">[检测CSS兼容性网站]</a></li><li>数据可视化工具集合 &nbsp;&nbsp;<a href="https://www.zhihu.com/question/19929609/answer/133825589" target="_blank" rel="noopener">[数据可视化工具集合]</a></li><li>pugToHtml &nbsp;&nbsp;<a href="https://html2jade.org/" target="_blank" rel="noopener">[pugToHtml]</a></li><li>在线工具 &nbsp;&nbsp; <a href="http://tool.oschina.net/" target="_blank" rel="noopener">[在线工具]</a></li><li>git可视化工具 &nbsp;&nbsp; <a href="https://pcottle.github.com/learnGitBranching/" target="_blank" rel="noopener">[git可视化工具]</a></li><li>js测试网站 &nbsp;&nbsp; <a href="http://jsbin.com" target="_blank" rel="noopener">[js测试网站]</a></li><li>youtube视屏下载 &nbsp;&nbsp; <a href="https://en.savefrom.net/?rmode=false" target="_blank" rel="noopener">[youtube视屏下载]</a></li></ul></blockquote><h4 id="图片类网站"><a href="#图片类网站" class="headerlink" title="图片类网站"></a>图片类网站</h4><blockquote><ul><li>FIND ICONS &nbsp;&nbsp;<a href="https://findicons.com/" target="_blank" rel="noopener">[免费图表和矢量文件]</a></li><li>ICONFONT &nbsp;&nbsp;<a href="https://www.iconfont.cn/" target="_blank" rel="noopener">[阿里巴巴矢量图库]</a></li><li>ICONS8 &nbsp;&nbsp;<a href="https://icons8.com" target="_blank" rel="noopener">[谷歌图片库]</a></li></ul></blockquote><h4 id="新闻类网站"><a href="#新闻类网站" class="headerlink" title="新闻类网站"></a>新闻类网站</h4><blockquote><ul><li>纽约时报官网 &nbsp;&nbsp;<a href="https://cn.nytimes.com/" target="_blank" rel="noopener">[纽约时报官网地址]</a></li><li>路透社中文网 &nbsp;&nbsp; <a href="https://cn.reuters.com/" target="_blank" rel="noopener">[路透社中文网地址]</a></li><li>BBC中文网 &nbsp;&nbsp; <a href="http://www.bbc.com/zhongwen/simp" target="_blank" rel="noopener">[BBC中文网地址]</a></li></ul></blockquote><h4 id="其他网站"><a href="#其他网站" class="headerlink" title="其他网站"></a>其他网站</h4><blockquote><ul><li>留声十年-绝版青春 &nbsp;&nbsp;<a href="http://www.kugou.com/album/557656.html" target="_blank" rel="noopener">[留声十年-绝版青春]</a></li><li>人体3D解剖 &nbsp;&nbsp;<a href="https://human.biodigital.com/signin.html" target="_blank" rel="noopener">[人体3D解剖]</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一些自己常用的网站&quot;&gt;&lt;a href=&quot;#一些自己常用的网站&quot; class=&quot;headerlink&quot; title=&quot;一些自己常用的网站&quot;&gt;&lt;/a&gt;一些自己常用的网站&lt;/h2&gt;&lt;h4 id=&quot;公司工作常用&quot;&gt;&lt;a href=&quot;#公司工作常用&quot; class=&quot;head
      
    
    </summary>
    
      <category term="个人" scheme="http://yoursite.com/categories/%E4%B8%AA%E4%BA%BA/"/>
    
      <category term="网站集合" scheme="http://yoursite.com/categories/%E4%B8%AA%E4%BA%BA/%E7%BD%91%E7%AB%99%E9%9B%86%E5%90%88/"/>
    
    
      <category term="个人" scheme="http://yoursite.com/tags/%E4%B8%AA%E4%BA%BA/"/>
    
  </entry>
  
  <entry>
    <title>初识简单的grid</title>
    <link href="http://yoursite.com/2018/04/19/%E5%88%9D%E8%AF%86%E7%AE%80%E5%8D%95%E7%9A%84grid/"/>
    <id>http://yoursite.com/2018/04/19/初识简单的grid/</id>
    <published>2018-04-19T01:11:16.000Z</published>
    <updated>2018-04-24T01:01:18.165Z</updated>
    
    <content type="html"><![CDATA[<h2 id="文中代码测试网站-nbsp-nbsp-文中代码测试网站地址"><a href="#文中代码测试网站-nbsp-nbsp-文中代码测试网站地址" class="headerlink" title="文中代码测试网站 &nbsp;&nbsp;[文中代码测试网站地址]"></a>文中代码测试网站 &nbsp;&nbsp;<a href="https://codepen.io/pen/" target="_blank" rel="noopener">[文中代码测试网站地址]</a></h2><h2 id="grid布局概述"><a href="#grid布局概述" class="headerlink" title="grid布局概述"></a>grid布局概述</h2><h4 id="网格是一组相交的水平线和垂直线，它定义了网格的列和行。我们可以将网格元素放置在与这些行和列相关的位置上"><a href="#网格是一组相交的水平线和垂直线，它定义了网格的列和行。我们可以将网格元素放置在与这些行和列相关的位置上" class="headerlink" title="网格是一组相交的水平线和垂直线，它定义了网格的列和行。我们可以将网格元素放置在与这些行和列相关的位置上"></a>网格是一组相交的水平线和垂直线，它定义了网格的列和行。我们可以将网格元素放置在与这些行和列相关的位置上</h4><blockquote><ul><li>固定的位置和弹性的轨道的大小:你可以使用固定的轨道尺寸创建网格，比如使用像素单位。你也可以使用比如百分比或者专门为此目的创建的新单位 fr来创建有弹性尺寸的网格</li><li>元素位置:你可以使用行号、行名或者标定一个网格区域来精确定位元素。网格同时还使用一种算法来控制未给出明确网格位置的元素</li><li>创建额外的轨道来包含元素:可以使用网格布局定义一个显式网格，但是根据规范它会处理你加在网格外面的内容，当必要时它会自动增加行和列，它会尽可能多的容纳所有的列</li><li>对齐控制:网格包含对齐特点，以便我们可以控制一旦放置到网格区域中的物体对齐，以及整个网格如何对齐。</li><li>控制重叠内容:多个元素可以放置在网格单元格中，或者区域可以部分地彼此重叠。然后可以CSS中的z-index属性来控制重叠区域显示的优先级</li></ul></blockquote><h2 id="简单的grid布局"><a href="#简单的grid布局" class="headerlink" title="简单的grid布局"></a>简单的grid布局</h2><h4 id="我们通过在元素上声明-display：grid-或-display：inline-grid-来创建一个网格容器。一旦我们这样做，这个元素的所有直系子元素将成为网格元素"><a href="#我们通过在元素上声明-display：grid-或-display：inline-grid-来创建一个网格容器。一旦我们这样做，这个元素的所有直系子元素将成为网格元素" class="headerlink" title="我们通过在元素上声明  display：grid  或   display：inline-grid  来创建一个网格容器。一旦我们这样做，这个元素的所有直系子元素将成为网格元素"></a>我们通过在元素上声明 <strong><em> display：grid </em></strong> 或 <strong><em>  display：inline-grid </em></strong> 来创建一个网格容器。一旦我们这样做，这个元素的所有直系子元素将成为网格元素</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrapper"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span>&gt;</span>One<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span>&gt;</span>Two<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span>&gt;</span>Three<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span>&gt;</span>Four<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span>&gt;</span>Five<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* CSS */</span></span><br><span class="line">* &#123;<span class="attribute">box-sizing</span>: border-box;&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.wrapper</span> &#123;</span><br><span class="line">    <span class="comment">/* 重点是这一句代码 */</span></span><br><span class="line">    <span class="attribute">display</span>: grid;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.wrapper</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#f76707</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff4e6</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.wrapper</span> &gt; <span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#ffa94d</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ffd8a8</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">1em</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#d9480f</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="网格轨道"><a href="#网格轨道" class="headerlink" title="网格轨道"></a>网格轨道</h2><h4 id="在grid中我们通过-grid-template-columns-和-grid-template-rows-属性来定义网格中的行和列"><a href="#在grid中我们通过-grid-template-columns-和-grid-template-rows-属性来定义网格中的行和列" class="headerlink" title="在grid中我们通过 grid-template-columns 和 grid-template-rows 属性来定义网格中的行和列\"></a>在grid中我们通过 grid-template-columns 和 grid-template-rows 属性来定义网格中的行和列\</h4><h4 id="先固定宽度"><a href="#先固定宽度" class="headerlink" title="先固定宽度"></a>先固定宽度</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrapper"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span>&gt;</span>One<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span>&gt;</span>Two<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span>&gt;</span>Three<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span>&gt;</span>Four<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span>&gt;</span>Five<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* CSS */</span></span><br><span class="line">* &#123;<span class="attribute">box-sizing</span>: border-box;&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.wrapper</span> &#123;</span><br><span class="line">    <span class="comment">/* 重点是这一句代码 */</span></span><br><span class="line">    <span class="attribute">display</span>: grid;</span><br><span class="line">    <span class="comment">/* 固定宽度可以写多个属性值,你可以写一个属性值也可以像我一样写4个,总之写多少个一行中显示多少个 */</span> </span><br><span class="line">    <span class="attribute">grid-template-columns</span>: <span class="number">200px</span> <span class="number">200px</span> <span class="number">200px</span> <span class="number">200px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.wrapper</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#f76707</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff4e6</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.wrapper</span> &gt; <span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#ffa94d</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ffd8a8</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">1em</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#d9480f</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="网格还引入了一个另外的长度单位来帮助我们创建灵活的网格轨道。"><a href="#网格还引入了一个另外的长度单位来帮助我们创建灵活的网格轨道。" class="headerlink" title="网格还引入了一个另外的长度单位来帮助我们创建灵活的网格轨道。"></a>网格还引入了一个另外的长度单位来帮助我们创建灵活的网格轨道。</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrapper"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span>&gt;</span>一<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>二<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>三<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>四<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>五<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>六<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>七<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>八<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>九<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>十<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>十一<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>十二<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>十三<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>十四<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>十五<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>十六<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>一<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>二<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>三<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>四<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>五<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>六<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>七<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>八<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>九<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>十<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>十一<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>十二<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>十三<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>十四<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>十五<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>十六<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* CSS */</span></span><br><span class="line">* &#123;<span class="attribute">box-sizing</span>: border-box;&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.wrapper</span> &#123;</span><br><span class="line">    <span class="comment">/* 重点是这一句代码 */</span></span><br><span class="line">    <span class="attribute">display</span>: grid;</span><br><span class="line">    <span class="comment">/* 使用fr也可以写多个属性值,你可以写一个属性值也可以像我一样写4个,总之写多少个一行中显示多少个,而且是等比例进行均分 */</span> </span><br><span class="line">    <span class="attribute">grid-template-columns</span>: <span class="number">1</span>fr <span class="number">2</span>fr <span class="number">1</span>fr <span class="number">1</span>fr;</span><br><span class="line">    &lt;!-- 有着多轨道的大型网格可使用 repeat() 标记来重复部分或整个轨道列表,我写的意思是一行均分4个--&gt;</span><br><span class="line">    <span class="selector-tag">grid-template-columns</span>: <span class="selector-tag">repeat</span>(4, 1<span class="selector-tag">fr</span>);</span><br><span class="line">    &lt;!<span class="selector-tag">--</span> 有着多轨道的大型网格可使用 <span class="selector-tag">repeat</span>() 网格将有共计10个轨道，为1个1<span class="selector-tag">fr</span>轨道后面跟着1个2<span class="selector-tag">fr</span>轨道，该模式重复5次<span class="selector-tag">--</span>&gt;</span><br><span class="line">    <span class="selector-tag">grid-template-columns</span>: <span class="selector-tag">repeat</span>(4, 1<span class="selector-tag">fr</span>, 2<span class="selector-tag">fr</span>);</span><br><span class="line">    &lt;!<span class="selector-tag">--</span> 网格中每一行的高度 第一行高度25% 第二行高度100<span class="selector-tag">px</span> 第三行高度200<span class="selector-tag">px</span> 其他是<span class="selector-tag">auto--</span>&gt;</span><br><span class="line">    <span class="selector-tag">grid-template-rows</span>: 25% 100<span class="selector-tag">px</span> 200<span class="selector-tag">px</span> <span class="selector-tag">auto</span>;</span><br><span class="line">    &lt;!<span class="selector-tag">--</span> <span class="selector-tag">grid-auto-rows</span>的属性值是能够影响<span class="selector-tag">grid-template-rows</span>中的<span class="selector-tag">auto</span>的<span class="selector-tag">--</span>&gt;</span><br><span class="line">    <span class="selector-tag">grid-auto-rows</span>: 200<span class="selector-tag">px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.wrapper</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#f76707</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff4e6</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.wrapper</span> &gt; <span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#ffa94d</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ffd8a8</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">1em</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#d9480f</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="网格高度的最大最小值"><a href="#网格高度的最大最小值" class="headerlink" title="网格高度的最大最小值"></a>网格高度的最大最小值</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrapper"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>One<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>Two</span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>I have some more content in.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>This makes me taller than 100 pixels.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span>&gt;</span>Three<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span>&gt;</span>Four<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span>&gt;</span>Five<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* CSS */</span></span><br><span class="line">* &#123;<span class="attribute">box-sizing</span>: border-box;&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.wrapper</span> &#123;</span><br><span class="line">    <span class="comment">/* 重点是这一句代码 */</span></span><br><span class="line">    <span class="attribute">display</span>: grid;</span><br><span class="line">    <span class="attribute">grid-template-columns</span>: <span class="built_in">repeat</span>(4, 1fr, 2fr);</span><br><span class="line">    <span class="attribute">grid-auto-rows</span>: <span class="built_in">minmax</span>(200px,auto);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.wrapper</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#f76707</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff4e6</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.wrapper</span> &gt; <span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#ffa94d</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ffd8a8</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">1em</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#d9480f</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="当我们定义网格时，我们定义的是网格轨道，而不是网格线。Grid-会为我们创建编号的网格线来让我们来定位每一个网格元素-三列两行的网格中，就拥有四条纵向的网格线-三条横向的网格线"><a href="#当我们定义网格时，我们定义的是网格轨道，而不是网格线。Grid-会为我们创建编号的网格线来让我们来定位每一个网格元素-三列两行的网格中，就拥有四条纵向的网格线-三条横向的网格线" class="headerlink" title="当我们定义网格时，我们定义的是网格轨道，而不是网格线。Grid 会为我们创建编号的网格线来让我们来定位每一个网格元素,三列两行的网格中，就拥有四条纵向的网格线,三条横向的网格线"></a>当我们定义网格时，我们定义的是网格轨道，而不是网格线。Grid 会为我们创建编号的网格线来让我们来定位每一个网格元素,三列两行的网格中，就拥有四条纵向的网格线,三条横向的网格线</h4><p><img src="/images/文章图片/flex-start.png" alt=""></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrapper"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box1"</span>&gt;</span>One<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box2"</span>&gt;</span>Two<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box3"</span>&gt;</span>Three<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box4"</span>&gt;</span>Four<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box5"</span>&gt;</span>Five<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* CSS */</span></span><br><span class="line">* &#123;<span class="attribute">box-sizing</span>: border-box;&#125;</span><br><span class="line"><span class="selector-class">.wrapper</span>&#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#f76707</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff4e6</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.wrapper</span> <span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#ffa94d</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ffd8a8</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">1em</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#d9480f</span>;</span><br><span class="line">&#125;</span><br><span class="line">&lt;!<span class="selector-tag">--</span> 以下代码需要多次尝试 反复试验才能很好的运用 <span class="selector-tag">--</span>&gt;</span><br><span class="line"><span class="selector-class">.wrapper</span> &#123; </span><br><span class="line">    <span class="attribute">display</span>: grid; </span><br><span class="line">    <span class="attribute">grid-template-columns</span>: <span class="built_in">repeat</span>(3, 1fr); </span><br><span class="line">    <span class="attribute">grid-auto-rows</span>: <span class="number">100px</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-class">.box1</span> &#123; </span><br><span class="line">    <span class="attribute">grid-column-start</span>: <span class="number">1</span>; </span><br><span class="line">    <span class="attribute">grid-column-end</span>: <span class="number">3</span>; </span><br><span class="line">    <span class="attribute">grid-row-start</span>: <span class="number">1</span>; </span><br><span class="line">    <span class="attribute">grid-row-end</span>: <span class="number">3</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-class">.box2</span> &#123; </span><br><span class="line">    <span class="attribute">grid-column-start</span>: <span class="number">3</span>; </span><br><span class="line">    <span class="attribute">grid-column-end</span>: <span class="number">4</span>;</span><br><span class="line">    <span class="attribute">grid-row-start</span>: <span class="number">1</span>; </span><br><span class="line">    <span class="attribute">grid-row-end</span>: <span class="number">3</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="网格间距-在两个网格单元之间的-网格横向间距-或-网格纵向间距-可使用-grid-column-gap-和-grid-row-gap-属性来创建，或者直接使用两个合并的缩写形式-grid-gap"><a href="#网格间距-在两个网格单元之间的-网格横向间距-或-网格纵向间距-可使用-grid-column-gap-和-grid-row-gap-属性来创建，或者直接使用两个合并的缩写形式-grid-gap" class="headerlink" title="网格间距:在两个网格单元之间的 网格横向间距  或 网格纵向间距  可使用 grid-column-gap 和 grid-row-gap 属性来创建，或者直接使用两个合并的缩写形式 grid-gap"></a>网格间距:在两个网格单元之间的 网格横向间距  或 网格纵向间距  可使用 grid-column-gap 和 grid-row-gap 属性来创建，或者直接使用两个合并的缩写形式 grid-gap</h4><p><img src="/images/文章图片/grid-gap.png" alt=""></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrapper"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>One<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>Two<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>Three<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>Four<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>Five<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* CSS */</span></span><br><span class="line">* &#123;<span class="attribute">box-sizing</span>: border-box;&#125;</span><br><span class="line"><span class="selector-class">.wrapper</span>&#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#f76707</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff4e6</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.wrapper</span> <span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#ffa94d</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ffd8a8</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">1em</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#d9480f</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.wrapper</span> &#123; </span><br><span class="line">    <span class="attribute">display</span>: grid;</span><br><span class="line">    <span class="attribute">grid-template-columns</span>: <span class="built_in">repeat</span>(3, 1fr);</span><br><span class="line">    <span class="attribute">grid-column-gap</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">grid-row-gap</span>: <span class="number">1em</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="嵌套网格-一个网格元素可以也成为一个网格容器-当这些元素不是网格容器的直接子级元素时，它们不会参与到网格布局中，并显示为正常的文档流"><a href="#嵌套网格-一个网格元素可以也成为一个网格容器-当这些元素不是网格容器的直接子级元素时，它们不会参与到网格布局中，并显示为正常的文档流" class="headerlink" title="嵌套网格: 一个网格元素可以也成为一个网格容器,当这些元素不是网格容器的直接子级元素时，它们不会参与到网格布局中，并显示为正常的文档流"></a>嵌套网格: 一个网格元素可以也成为一个网格容器,当这些元素不是网格容器的直接子级元素时，它们不会参与到网格布局中，并显示为正常的文档流</h4><p><img src="/images/文章图片/flex-z-index.png" alt=""></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrapper"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box box1"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"nested"</span>&gt;</span>a<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"nested"</span>&gt;</span>b<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"nested"</span>&gt;</span>c<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box box2"</span>&gt;</span>Two<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box box3"</span>&gt;</span>Three<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box box4"</span>&gt;</span>Four<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box box5"</span>&gt;</span>Five<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* CSS */</span></span><br><span class="line">* &#123;<span class="attribute">box-sizing</span>: border-box;&#125;</span><br><span class="line"><span class="selector-class">.wrapper</span>&#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#f76707</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff4e6</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.wrapper</span> <span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#ffa94d</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ffd8a8</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">1em</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#d9480f</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.wrapper</span> &#123;</span><br><span class="line">   <span class="attribute">display</span>: grid;</span><br><span class="line">   <span class="attribute">grid-template-columns</span>: <span class="built_in">repeat</span>(3, 1fr);</span><br><span class="line">   <span class="attribute">grid-auto-rows</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.box1</span> &#123;</span><br><span class="line">   <span class="attribute">grid-column-start</span>: <span class="number">1</span>;</span><br><span class="line">   <span class="attribute">grid-column-end</span>: <span class="number">4</span>;</span><br><span class="line">   <span class="attribute">grid-row-start</span>: <span class="number">1</span>;</span><br><span class="line">   <span class="attribute">grid-row-end</span>: <span class="number">3</span>;</span><br><span class="line">   <span class="attribute">display</span>: grid;</span><br><span class="line">   <span class="attribute">grid-template-columns</span>: <span class="built_in">repeat</span>(3, 1fr);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="使用z-index控制层级-多个网格项目可以占用同一个网格单位。如果我们回到之前根据网格线编号放置网格项目的话，我们可以更改此项来使两个网格项目重叠。"><a href="#使用z-index控制层级-多个网格项目可以占用同一个网格单位。如果我们回到之前根据网格线编号放置网格项目的话，我们可以更改此项来使两个网格项目重叠。" class="headerlink" title="使用z-index控制层级:多个网格项目可以占用同一个网格单位。如果我们回到之前根据网格线编号放置网格项目的话，我们可以更改此项来使两个网格项目重叠。"></a>使用z-index控制层级:多个网格项目可以占用同一个网格单位。如果我们回到之前根据网格线编号放置网格项目的话，我们可以更改此项来使两个网格项目重叠。</h4><p><img src="/images/文章图片/flex-z-index.png" alt=""></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrapper"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box box1"</span>&gt;</span>One<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box box2"</span>&gt;</span>Two<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box box3"</span>&gt;</span>Three<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box box4"</span>&gt;</span>Four<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box box5"</span>&gt;</span>Five<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>`</code>css<br>/<em> CSS </em>/</p><ul><li>{box-sizing: border-box;}<br>.wrapper{<br>  border: 2px solid #f76707;<br>  border-radius: 5px;<br>  background-color: #fff4e6;<br>}<br>.wrapper div{<br>  border: 2px solid #ffa94d;<br>  border-radius: 5px;<br>  background-color: #ffd8a8;<br>  padding: 1em;<br>  color: #d9480f;<br>}</li></ul><p>.wrapper {<br>   display: grid;<br>   grid-template-columns: repeat(3, 1fr);<br>   grid-auto-rows: 100px;<br>}<br>.box1 {<br>   grid-column-start: 1;<br>   grid-column-end: 4;<br>   grid-row-start: 1;<br>   grid-row-end: 3;<br>   z-index: 2;<br>}<br>.box2 {<br>   grid-column-start: 1;<br>   grid-row-start: 2;<br>   grid-row-end: 4;<br>   z-index: 1;<br>}</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;文中代码测试网站-nbsp-nbsp-文中代码测试网站地址&quot;&gt;&lt;a href=&quot;#文中代码测试网站-nbsp-nbsp-文中代码测试网站地址&quot; class=&quot;headerlink&quot; title=&quot;文中代码测试网站 &amp;nbsp;&amp;nbsp;[文中代码测试网站地址]&quot;
      
    
    </summary>
    
      <category term="CSS" scheme="http://yoursite.com/categories/CSS/"/>
    
      <category term="grid布局" scheme="http://yoursite.com/categories/CSS/grid%E5%B8%83%E5%B1%80/"/>
    
    
      <category term="CSS" scheme="http://yoursite.com/tags/CSS/"/>
    
  </entry>
  
</feed>
