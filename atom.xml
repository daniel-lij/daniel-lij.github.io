<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Illusory</title>
  
  <subtitle>随便点点吧</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-05-13T07:20:49.005Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>daniel-lij</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>思维的误区：忽视沉默的大多数</title>
    <link href="http://yoursite.com/2019/05/14/%E6%80%9D%E7%BB%B4%E8%AF%AF%E5%8C%BA%EF%BC%8C%E5%BF%BD%E7%95%A5%E6%B2%89%E9%BB%98%E7%9A%84%E5%A4%A7%E5%A4%9A%E6%95%B0/"/>
    <id>http://yoursite.com/2019/05/14/思维误区，忽略沉默的大多数/</id>
    <published>2019-05-14T07:40:16.000Z</published>
    <updated>2019-05-13T07:20:49.005Z</updated>
    
    <content type="html"><![CDATA[<p>##思维的误区：忽视沉默的大多数<br>文章目录<br>★误区1：把随机事件当作确定事件<br>★误区2：主次颠倒<br>★误区3：把沉默当成爱恨的中间态<br>★结尾<br>★后记<br>　　本文标题中的“沉默的大多数”一词，借用了王小波的一篇知名杂文（谨以此文向已故的王小波致敬）。不过俺今天要聊的内容和王小波无关、也和政治无关。今天的内容，是探讨某些思维的误区。这些误区的根源，都在于“忽视了沉默的证据”。</p><p>★误区1：把随机事件当作确定事件</p><p>　　在本届（2010）世界杯期间，各种“预言帝”纷纷出笼。从8条腿的章鱼到2条腿的人，都敢于指点未来。关键是这些“预言帝”还很有市场，连不少 IT 行业的开发人员，都被它们蒙住了。下面俺举其中的2个事例。</p><p>◇百度贴吧的未来客</p><p>　　在世界杯刚开打的6月13日，一个网名叫“X来自未来”的网友在百度的2012吧发了个帖子（在“这里”）。它声称自己来自未来，并给出了世界杯决赛的预言——荷兰对西班牙。等到世界杯半决赛打完，网友们发现果真是西班牙与荷兰争夺冠军。于是该帖自然就在网上疯传。看过此帖的网友中，有相当比例的人，居然信以为真！<br>　　不过这个把戏并不高明。<br>　　在世界杯的那32个球队中，有把握进决赛的，也就没几个。玩这个把戏的人，只要把各种排列组合都算出来（大概也就20多种）。然后每一种组合注册一个马甲，分别发到不同的论坛/贴吧。<br>　　随着比赛不断进行，那些错误的预测会被网友当成胡说，不会引起注意。而最终那个命中的预测，自然会引起很多网友（尤其是缺少判断力的网友）极大的崇拜，并因此吸引众多的眼球。而对于始作俑者，几乎没有什么成本。</p><p>◇神奇的章鱼保罗</p><p>　　戳穿“贴吧”的伎俩后，再来说一下名气更大的章鱼保罗（这家伙已经成了全球明星）。保罗的光辉事迹，想必大伙都听说了，俺就不再啰嗦（不了解的网友可以看“这里”）。可能很多人都在纳闷——为啥这只低等软体动物，能猜得这么准捏？其实也不奇怪。<br>　　从网上的资料看，保罗来自德国的奥伯豪森水族馆。显然，德国的水族馆，绝对不止奥伯豪森一家。像世界杯这么大的赛事，其它的那些水族馆或者动物园，也会拿一些小动物来搞搞预测，吸引人气。而且，除了德国，其它的一些国家（比如法国、美国、英国、等）也会有动物园、水族馆在进行这类预测。<br>　　预测的动物多了之后，总归有少数几只预测比较准确的——这完全符合统计学的规律。那些预测不太准的，自然就被新闻界忽略了；而预测比较准的，自然名声大噪（新闻记者需要这种题材来吸引眼球）。顺便提一下，除了德国的章鱼预测较准，新加坡的一只鹦鹉（马尼），听说预测也较准。</p><p>◇关于生物学的例子</p><p>　　说完预测的例子，再来看看生物学方面的例子。<br>　　在生物界，充满了各种看似神奇的物种。比如蜜蜂建造的蜂巢，可以用最少的蜂蜡构建最大的空间；白蚁也可以建造结构及其复杂的蚁巢；蜘蛛织出来的网，具有几何学的完美性……<br>　　很多人根据上述的事例，就断定这一切皆有赖于神创。认为自然界无法自发地产生如此精妙的物种。<br>　　但事实如何捏？实际上，每一个物种的基因，都会【随机地】（盲目地）发生突变。有【少数】变异对物种的繁衍有利，因此这种基因就保留了下来；反之，【绝大多数】差劲的突变，不利于生存竞争，导致生物个体被淘汰，该基因也就消亡了。<br>　　由于大量的不良基因都已经消亡，所以就被人们忽略了。而咱们现在看到的，都是那些优良的基因在发挥效果。</p><p>◇总结</p><p>　　请列位看官琢磨一下，上述几个小故事，是否具有内在的共同点？<br>　　了解统计学的网友，应该明白：对于一些随机事件，只要统计的样本足够大，也会碰到一些巧合。这些所谓的巧合，实际上完全符合正常的概率分布。<br>　　但是，由于很多人忽略了大量的样本这个前提。就把本来是随机发生的事情，误以为是预先安排好的、有一定内在规律的。<br>　　好比你找一堆人来玩抛硬币的游戏，每人抛10次。只要你找的人足够多，总会有人连续10次都是正面。如果你非要追究这10次连续抛出正面，是否有啥内在规律，岂不可笑？</p><p>★误区2：主次颠倒</p><p>　　第2类误区说的是：忽略沉默的证据，会使人做出主次颠倒的判断。</p><p>◇关于打仗的例子</p><p>　　为了说明这类误区，俺来举一个军事的例子。<br>　　话说二战时的英国空军，经常派轰炸机去袭击德国。由于德国的防空火力较猛，轰炸机损失较惨重。为了降低飞机的损失，空军的领导们决定给飞机的机身进行装甲加固。由于当时条件所限，只能用装甲加固飞机上的少数部位。<br>　　然后，英国皇家空军就着手进行研究调查。他们对执行完轰炸任务返航的飞机进行仔细的观察、分析、统计。发现一个现象：大多数的弹孔，都集中在飞机的机翼上；只有少数弹孔位于驾驶舱。<br>　　假如你负责此事，你会用装甲加固哪个部位呢？估计很多同学会想当然地说：加固机翼（因为机翼的弹孔最多）。但是答案恰恰相反，【最不需要】加固就是机翼。为啥捏？<br>　　驾驶舱的弹孔最少，说明驾驶舱一旦中弹，飞机就载了，再也回不来。所以，它才是最应该加固的部位。</p><p>◇总结</p><p>　　在某些场合下，被你忽略的沉默信息，恰恰是关键信息。很多人会忽视这类关键的沉默信息，反而重视一些显眼，但不关键的信息。<br>　　在上述这个例子里，很多人想当然地（先验地）认为返航的轰炸机就是全部的样本。当他们开始思索答案的时候，就已经把那些中弹坠毁的飞机忽略掉了。所以，最终得出了相反的结论。</p><p>★误区3：把沉默当成爱恨的中间态</p><p>　　考虑到大多数人是比较感性的，俺最后再说一下（和情感有关的）第三类误区。</p><p>◇关于网站的例子</p><p>　　假设有2家网站A和B，都经营类似的业务，都有相当多的用户群。再假设它们都进行了类似的网站界面改版。结果改版之后，网站A没有得到用户的赞扬，反而遭到很多用户的臭骂；而网站B捏，既没有用户夸它，也没有用户骂它。现在，请你来判断一下，哪个网站得人心？<br>　　估计又有不少同学会想当然地认为，网站B更受欢迎，毕竟用户没骂它。但事实并非如此。<br>　　网站A虽然遭到很多用户痛骂，但至少说明，还有很多用户在乎它；而对于网站B，用户对它已经心灰意冷，无所谓了，所以啥反应也没有。<br>　　末了，俺悄悄告诉大伙儿：网站A指的是 Facebook，网站B影射微软旗下的 Live Spaces。这俩都属于 SNS 类网站。想当初，Facebook 稍微改动了隐私条款，差点被用户的口水淹死；反观 Live Spaces，界面越改越土鳖，功能越改越差劲（俺曾经使用 Live Spaces 搭建过镜像博客，对此深有体会）。但又有多少 Live Spaces 的用户去找微软投诉呢？</p><p>◇引申到其它方面</p><p>　　虽然刚才是拿网站的用户举例，不过类似的场景在其它领域也很常见。<br>　　比如在管理方面，如果员工经常对公司的缺点提出批评，至少说明员工还比较在乎公司，希望公司能够改进。<br>　　比如在婚姻方面，如果夫妻俩经常吵架，说明情况还不是算糟糕。如果双方连吵架都懒得吵，只剩下冷漠以对，那问题才真是严重了。</p><p>◇总结</p><p>　　对于这类误区的总结，重点就是一句话：爱的反面不是恨，是漠然。很多时候，沉默/漠然/冷漠，是比“恨”更糟糕的反应。千万不要忽视了这种反应。</p><p>★结尾</p><p>　　难得今天比较有空，举了好几个案例，不晓得大伙儿是否能悟出一些道道来？</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;##思维的误区：忽视沉默的大多数&lt;br&gt;文章目录&lt;br&gt;★误区1：把随机事件当作确定事件&lt;br&gt;★误区2：主次颠倒&lt;br&gt;★误区3：把沉默当成爱恨的中间态&lt;br&gt;★结尾&lt;br&gt;★后记&lt;br&gt;　　本文标题中的“沉默的大多数”一词，借用了王小波的一篇知名杂文（谨以此文向已故的王
      
    
    </summary>
    
      <category term="逻辑" scheme="http://yoursite.com/categories/%E9%80%BB%E8%BE%91/"/>
    
      <category term="心理" scheme="http://yoursite.com/categories/%E9%80%BB%E8%BE%91/%E5%BF%83%E7%90%86/"/>
    
    
      <category term="逻辑" scheme="http://yoursite.com/tags/%E9%80%BB%E8%BE%91/"/>
    
  </entry>
  
  <entry>
    <title>函数作用域, 块级作用域和词法作用域</title>
    <link href="http://yoursite.com/2018/12/24/%E4%BD%9C%E7%94%A8%E5%9F%9F/"/>
    <id>http://yoursite.com/2018/12/24/作用域/</id>
    <published>2018-12-24T07:40:16.000Z</published>
    <updated>2018-12-27T13:12:32.846Z</updated>
    
    <content type="html"><![CDATA[<h2 id="函数作用域-块级作用域和词法作用域"><a href="#函数作用域-块级作用域和词法作用域" class="headerlink" title="函数作用域, 块级作用域和词法作用域"></a>函数作用域, 块级作用域和词法作用域</h2><blockquote><ul><li>javaScript的函数在查找变量时从自身函数定义开始，从“内”向“外”查找。如果内部函数定义了与外部函数重名的变量，则内部函数的变量将“屏蔽”外部函数的变量。</li><li>由于javascript有变量提升这一规则所以需要在函数内部首先声明所有变量</li><li>不在函数内部定义的变量就有全局作用域.实际该变量就是绑定到全局对象window上的一个属性。</li><li>将全局变量全部放入一个命名空间中会大大减少全局变量冲突的可能</li><li>为了解决块级作用域，ES6引入了新的关键字let，用let替代var可以申明一个块级作用域的变量</li><li>ES6标准引入了新的关键字const来定义常量，const与let都具有块级作用域.常量不可改变</li><li>词法作用域注重的是所谓的Write-Time，即编程时的上下文，而动态作用域以及常见的this的用法，都是Run-Time，即运行时上下文</li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;函数作用域-块级作用域和词法作用域&quot;&gt;&lt;a href=&quot;#函数作用域-块级作用域和词法作用域&quot; class=&quot;headerlink&quot; title=&quot;函数作用域, 块级作用域和词法作用域&quot;&gt;&lt;/a&gt;函数作用域, 块级作用域和词法作用域&lt;/h2&gt;&lt;blockquote
      
    
    </summary>
    
      <category term="javascript" scheme="http://yoursite.com/categories/javascript/"/>
    
      <category term="node.js" scheme="http://yoursite.com/categories/javascript/node-js/"/>
    
    
      <category term="node, javaScript底层" scheme="http://yoursite.com/tags/node-javaScript%E5%BA%95%E5%B1%82/"/>
    
  </entry>
  
  <entry>
    <title>call, apply和bind的实现</title>
    <link href="http://yoursite.com/2018/11/29/call%E3%80%81apply%E5%92%8Cbind%E7%9A%84%E5%AE%9E%E7%8E%B0/"/>
    <id>http://yoursite.com/2018/11/29/call、apply和bind的实现/</id>
    <published>2018-11-29T07:40:16.000Z</published>
    <updated>2019-05-13T01:59:48.802Z</updated>
    
    <content type="html"><![CDATA[<h2 id="call与apply"><a href="#call与apply" class="headerlink" title="call与apply"></a>call与apply</h2><h4 id="call与apply方法都是使用一个指定的this值和对应的参数前提下调用某个函数和方法。区别在于call是通过传多个参数的方式-而apply则是传入一个数组。"><a href="#call与apply方法都是使用一个指定的this值和对应的参数前提下调用某个函数和方法。区别在于call是通过传多个参数的方式-而apply则是传入一个数组。" class="headerlink" title="call与apply方法都是使用一个指定的this值和对应的参数前提下调用某个函数和方法。区别在于call是通过传多个参数的方式,而apply则是传入一个数组。"></a>call与apply方法都是使用一个指定的this值和对应的参数前提下调用某个函数和方法。区别在于call是通过传多个参数的方式,而apply则是传入一个数组。</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">  name: <span class="string">'linxin'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">func</span>(<span class="params">age, sex</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>.name,age,sex);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func.call(obj,<span class="number">12</span>,<span class="string">'女'</span>);         <span class="comment">// linxin 12 女</span></span><br><span class="line">func.apply(obj, [<span class="number">18</span>, <span class="string">'女'</span>]);        <span class="comment">//linxin 18 女</span></span><br></pre></td></tr></table></figure><h3 id="模拟实现"><a href="#模拟实现" class="headerlink" title="模拟实现"></a>模拟实现</h3><h4 id="简单实现-思路-在javascript中的this指向说到了-函数还可以作为某个对象的方法调用-这时this就指这个上级对象-也就是我们平时说的，谁调用，this指向谁。所以实现的方法就是在传入的对象中添加这么一个方法，然后再去执行这个方法。为了保持对象一致，在执行完之后再把这个对象删除。"><a href="#简单实现-思路-在javascript中的this指向说到了-函数还可以作为某个对象的方法调用-这时this就指这个上级对象-也就是我们平时说的，谁调用，this指向谁。所以实现的方法就是在传入的对象中添加这么一个方法，然后再去执行这个方法。为了保持对象一致，在执行完之后再把这个对象删除。" class="headerlink" title="(简单实现)思路: 在javascript中的this指向说到了:函数还可以作为某个对象的方法调用,这时this就指这个上级对象.也就是我们平时说的，谁调用，this指向谁。所以实现的方法就是在传入的对象中添加这么一个方法，然后再去执行这个方法。为了保持对象一致，在执行完之后再把这个对象删除。"></a>(简单实现)思路: 在javascript中的this指向说到了:函数还可以作为某个对象的方法调用,这时this就指这个上级对象.也就是我们平时说的，谁调用，this指向谁。所以实现的方法就是在传入的对象中添加这么一个方法，然后再去执行这个方法。为了保持对象一致，在执行完之后再把这个对象删除。</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">Function</span>.prototype.newCall = <span class="function"><span class="keyword">function</span>(<span class="params">context</span>) </span>&#123;</span><br><span class="line">  context.fn = <span class="keyword">this</span>;  <span class="comment">// 通过this获取call的函数</span></span><br><span class="line">  context.fn();</span><br><span class="line">  <span class="keyword">delete</span> context.fn;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> foo = &#123;</span><br><span class="line">  value: <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bar</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>.value);</span><br><span class="line">&#125;</span><br><span class="line">bar.newCall (foo);</span><br></pre></td></tr></table></figure><h4 id="eval版本-传入参数-思路-我们可以进行优化一下-因为传入的参数数量是不确定的，我们可以从Arguments对象去获取，这个比较简单。问题是参数是不确定的，我们可以通过eval拼接或者es6"><a href="#eval版本-传入参数-思路-我们可以进行优化一下-因为传入的参数数量是不确定的，我们可以从Arguments对象去获取，这个比较简单。问题是参数是不确定的，我们可以通过eval拼接或者es6" class="headerlink" title="(eval版本,传入参数)思路: 我们可以进行优化一下, 因为传入的参数数量是不确定的，我们可以从Arguments对象去获取，这个比较简单。问题是参数是不确定的，我们可以通过eval拼接或者es6"></a>(eval版本,传入参数)思路: 我们可以进行优化一下, 因为传入的参数数量是不确定的，我们可以从Arguments对象去获取，这个比较简单。问题是参数是不确定的，我们可以通过eval拼接或者es6</h4><h5 id="eval版本"><a href="#eval版本" class="headerlink" title="eval版本"></a>eval版本</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">Function</span>.prototype.newCall = <span class="function"><span class="keyword">function</span>(<span class="params">context</span>) </span>&#123;</span><br><span class="line">  context.fn = <span class="keyword">this</span>;  <span class="comment">// 通过this获取call的函数</span></span><br><span class="line">  <span class="keyword">var</span> args = []</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">1</span>, len = <span class="built_in">arguments</span>.length; i &lt; len; i++)&#123;</span><br><span class="line">      args.push(<span class="string">'arguments['</span> + i + <span class="string">']'</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">eval</span>(<span class="string">'context.fn('</span> + args + <span class="string">')'</span>)</span><br><span class="line">  <span class="keyword">delete</span> context.fn;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> person = &#123;</span><br><span class="line">  name: <span class="string">'Abiel'</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sayHi</span>(<span class="params">age,sex</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>.name, age, sex);</span><br><span class="line">&#125;</span><br><span class="line">sayHi.newCall (person, <span class="number">25</span>, <span class="string">'男'</span>); <span class="comment">// Abiel 25 男</span></span><br></pre></td></tr></table></figure><h5 id="es6版本"><a href="#es6版本" class="headerlink" title="es6版本"></a>es6版本</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">Function</span>.prototype.newCall = <span class="function"><span class="keyword">function</span>(<span class="params">context, ...parameter</span>) </span>&#123;</span><br><span class="line">  context.fn = <span class="keyword">this</span>; </span><br><span class="line">  context.fn(...parameter)</span><br><span class="line">  <span class="keyword">delete</span> context.fn;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> person = &#123;</span><br><span class="line">  name: <span class="string">'Abiel'</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sayHi</span>(<span class="params">age,sex</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>.name, age, sex);</span><br><span class="line">&#125;</span><br><span class="line">sayHi.newCall (person, <span class="number">25</span>, <span class="string">'男'</span>); <span class="comment">// Abiel 25 男</span></span><br></pre></td></tr></table></figure><h5 id="改进版本"><a href="#改进版本" class="headerlink" title="改进版本"></a>改进版本</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">Function</span>.prototype.newCall = <span class="function"><span class="keyword">function</span>(<span class="params">context, ...parameter</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">typeof</span> context === <span class="string">'object'</span>)&#123;</span><br><span class="line">        context = context || <span class="built_in">window</span></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        context = <span class="built_in">Object</span>.create(<span class="literal">null</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> fn = <span class="built_in">Symbol</span>()</span><br><span class="line">    context[fn] = <span class="keyword">this</span></span><br><span class="line">    context[fn](...parameter)</span><br><span class="line">    <span class="keyword">delete</span> context.[fn]</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> person = &#123;</span><br><span class="line">  name: <span class="string">'Abiel'</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sayHi</span>(<span class="params">age,sex</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>.name, age, sex);</span><br><span class="line">&#125;</span><br><span class="line">sayHi.newCall (person, <span class="number">25</span>, <span class="string">'男'</span>); <span class="comment">// Abiel 25 男</span></span><br></pre></td></tr></table></figure><h2 id="bind的实现"><a href="#bind的实现" class="headerlink" title="bind的实现"></a>bind的实现</h2><h4 id="bind也是函数的方法-作用也是改变this的执行-同时也是能传多个参数-与call和apply不同的是bind方法不会立即执行，而是会返回一个改变上下文this指向后的函数，原函数并没有被改变。并且如果函数本身是一个绑定了this对象的函数，那么apply和call不会立即执行。"><a href="#bind也是函数的方法-作用也是改变this的执行-同时也是能传多个参数-与call和apply不同的是bind方法不会立即执行，而是会返回一个改变上下文this指向后的函数，原函数并没有被改变。并且如果函数本身是一个绑定了this对象的函数，那么apply和call不会立即执行。" class="headerlink" title="bind也是函数的方法,作用也是改变this的执行, 同时也是能传多个参数, 与call和apply不同的是bind方法不会立即执行，而是会返回一个改变上下文this指向后的函数，原函数并没有被改变。并且如果函数本身是一个绑定了this对象的函数，那么apply和call不会立即执行。"></a>bind也是函数的方法,作用也是改变this的执行, 同时也是能传多个参数, 与call和apply不同的是bind方法不会立即执行，而是会返回一个改变上下文this指向后的函数，原函数并没有被改变。并且如果函数本身是一个绑定了this对象的函数，那么apply和call不会立即执行。</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">Function</span>.prototype.bind = <span class="function"><span class="keyword">function</span> (<span class="params">context,...innerArgs</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> me = <span class="keyword">this</span></span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params">...finnalyArgs</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> me.call(context,...innerArgs,...finnalyArgs)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> person = &#123;</span><br><span class="line">    name: <span class="string">'Abiel'</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sayHi</span>(<span class="params">age,sex</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.name, age, sex)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> personSayHi = sayHi.bind(person, <span class="number">25</span>)</span><br><span class="line">personSayHi(<span class="string">'男'</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;call与apply&quot;&gt;&lt;a href=&quot;#call与apply&quot; class=&quot;headerlink&quot; title=&quot;call与apply&quot;&gt;&lt;/a&gt;call与apply&lt;/h2&gt;&lt;h4 id=&quot;call与apply方法都是使用一个指定的this值和对应的参数前
      
    
    </summary>
    
      <category term="javascript" scheme="http://yoursite.com/categories/javascript/"/>
    
      <category term="node.js" scheme="http://yoursite.com/categories/javascript/node-js/"/>
    
    
      <category term="node, javaScript底层" scheme="http://yoursite.com/tags/node-javaScript%E5%BA%95%E5%B1%82/"/>
    
  </entry>
  
  <entry>
    <title>乌镇互联网大会与科技的阴暗面</title>
    <link href="http://yoursite.com/2018/11/10/%E4%B9%8C%E9%95%87%E4%BA%92%E8%81%94%E7%BD%91%E5%A4%A7%E4%BC%9A%E4%B8%8E%E7%A7%91%E6%8A%80%E7%9A%84%E9%98%B4%E6%9A%97%E9%9D%A2/"/>
    <id>http://yoursite.com/2018/11/10/乌镇互联网大会与科技的阴暗面/</id>
    <published>2018-11-10T07:47:33.000Z</published>
    <updated>2018-11-10T07:57:47.400Z</updated>
    
    <content type="html"><![CDATA[<h4 id="乌镇互联网大会与科技的阴暗面"><a href="#乌镇互联网大会与科技的阴暗面" class="headerlink" title="乌镇互联网大会与科技的阴暗面"></a>乌镇互联网大会与科技的阴暗面</h4><p>RAYMOND ZHONG<br>2018年11月9日<br><img src="\images\news\2018.11.10\3.jpg" alt=""></p><h5 id="面部识别是中国科技领域的一个热门领域，它进一步推动了有趣的视频自拍和智能监控摄像头的发展。"><a href="#面部识别是中国科技领域的一个热门领域，它进一步推动了有趣的视频自拍和智能监控摄像头的发展。" class="headerlink" title="面部识别是中国科技领域的一个热门领域，它进一步推动了有趣的视频自拍和智能监控摄像头的发展。"></a>面部识别是中国科技领域的一个热门领域，它进一步推动了有趣的视频自拍和智能监控摄像头的发展。</h5><p>中国乌镇——自2014年起，上海附近风景如画的运河城乌镇每年都会举行世界互联网大会，与会的公司和政府官员发出这样的信息：中国是一支不可忽视的高科技力量。<br>如今这个信息早已不成问题，今年的会议展示了一些不同的东西。中国的科技产业正在更加认真地对待其产品的意外后果——以及如何帮助政府。<br>在关于科技未来的讨论当中，其阴暗的副作用渐渐开始出现，例如欺诈和数据泄露。一个关于保护个人信息的论坛中，发言者包括中国最高检察机构以及强大的互联网监管机构的代表。一些科技公司承诺支持北京的反恐工作，尽管中国在西部新疆地区以打击恐怖主义的名义拘押穆斯林，对其进行灌输教育，因而面临国际批评。<br>“腾讯一直致力于处理网上恐怖信息和其他互联网犯罪，这符合政府的打击行动，”腾讯安全管理部门的高管陈勇在会上说。<br><img src="\images\news\2018.11.10\4.jpg" alt=""></p><h5 id="本周，在中国乌镇举行的世界互联网大会上，展示了一个能感知手部动作并在屏幕上与之匹配的机器人。"><a href="#本周，在中国乌镇举行的世界互联网大会上，展示了一个能感知手部动作并在屏幕上与之匹配的机器人。" class="headerlink" title="本周，在中国乌镇举行的世界互联网大会上，展示了一个能感知手部动作并在屏幕上与之匹配的机器人。"></a>本周，在中国乌镇举行的世界互联网大会上，展示了一个能感知手部动作并在屏幕上与之匹配的机器人。</h5><p>本次于周五结束的会议也反映了中国面临的一些新挑战。它与另一个大型活动同时举行：在上海举办、为期六天的中国国际进口博览会，旨在展示中国是外国商品的大买家。随着美国关税有可能令疲软的中国经济进一步减缓，该国领导人习近平周一该博览会上发表讲话，宣称中国可以是全球贸易的一股正面力量。<br>相比之下，在乌镇，习近平只是派遣代理人出场。共产党宣传部部长黄坤明转达了习近平的致谢信，然后发表了开场致辞，赞美互联网接入改变世界的力量。<br>来自硅谷的使者也出现了短缺。去年来乌镇发言的人包括苹果公司首席执行官蒂姆·库克(Tim Cook)以及谷歌的桑达·皮查伊(Sundar Pichai)。今年，唯一一位发表主题演讲的西方技术高管是芯片制造商高通公司(Qualcomm)的首席执行官史蒂夫·莫伦科夫(Steve Mollenkopf)。<br>他的出席令人想起美国公司在中国持续面临的困境，而这种情况还有可能会加深，因为这两个国家在高科技霸权问题上争斗不休。在遭中国反垄断机构拒绝批准后，高通公司今年取消了以440亿美元收购一家荷兰芯片制造商的协议，此举被广泛视为贸易战中的报复行为。<br><img src="\images\news\2018.11.10\5.jpg" alt=""></p><h5 id="中国的科技产业正在越来越认真地对待产品的意外后果——以及帮助政府。"><a href="#中国的科技产业正在越来越认真地对待产品的意外后果——以及帮助政府。" class="headerlink" title="中国的科技产业正在越来越认真地对待产品的意外后果——以及帮助政府。"></a>中国的科技产业正在越来越认真地对待产品的意外后果——以及帮助政府。</h5><p>在中国公司当中，私营企业本周展示了他们在增加政府支持与合作，而国有公司则证明他们在科技方面并不是注定落后。<br>腾讯高管陈勇在接受采访时描述了该公司与执法部门的关系。<br>据报道，政治活动人士因他们在微信上所说的内容而遭到跟踪。聊天记录已成为法庭上的证据，以至于人们在猜测，提供这些记录的也许是该应用的开发商腾讯。<br>陈勇表示，腾讯会向政府报告在其平台上发现的非法活动，之后当局可以要求提供具体的用户信息。他说，描述用户登录腾讯应用程序的时间和地点的元数据可以存储长达六个月。但陈勇否认公司给执法人员留了后门，供他们自由地浏览聊天记录和用户数据。<br><img src="\images\news\2018.11.10\6.jpg" alt=""></p><h5 id="中科虹霸公司在政府的大力支持下，研发出帮助在中国找到被拐卖儿童的工具。它还与新疆有关部门合作，建立一个所有居民的视网膜数据库。"><a href="#中科虹霸公司在政府的大力支持下，研发出帮助在中国找到被拐卖儿童的工具。它还与新疆有关部门合作，建立一个所有居民的视网膜数据库。" class="headerlink" title="中科虹霸公司在政府的大力支持下，研发出帮助在中国找到被拐卖儿童的工具。它还与新疆有关部门合作，建立一个所有居民的视网膜数据库。"></a>中科虹霸公司在政府的大力支持下，研发出帮助在中国找到被拐卖儿童的工具。它还与新疆有关部门合作，建立一个所有居民的视网膜数据库。</h5><p>“我们只存储法律规定的内容，”他说。 “法律规定存多久，我们就存多久。法律规定存什么，我们就存什么。”<br>在会议展厅里，可以找到更轻松的设施。一家叫做远传的公司展示了几个热情的、一走一顿的机器人，它们靠轮子移动，跟在人们后面，提供帮他们拿包的服务。广受欢迎的视频应用程序快手通过扫描访客的脸来展示面部识别能力，然后在几秒钟内显示出在其庞大的视频库里，谁和这些访客长得最像。（结果各不相同。）<br>面部识别是中国科技界的一个热门领域，它为有趣的视频自拍和智能监控摄像头提供技术支持。参加会议的一家公司在此基础上更进一步。<br>中科虹霸总部位于北京，受到国家大力支持，它最初是为煤矿开发视网膜识别软件。因为矿工的面孔和指尖被煤灰覆盖，矿工需要另一种上下班打卡的技术。<br>该公司市场推广经理王欣涛表示，现在，中科虹霸的工具还在帮助识别叙利亚的难民，并在中国找回被拐卖的儿童。<br>王欣涛说，该公司还开始与新疆有关部门合作。目标？他说，要在两年内建立所有新疆居民的视网膜数据库。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;乌镇互联网大会与科技的阴暗面&quot;&gt;&lt;a href=&quot;#乌镇互联网大会与科技的阴暗面&quot; class=&quot;headerlink&quot; title=&quot;乌镇互联网大会与科技的阴暗面&quot;&gt;&lt;/a&gt;乌镇互联网大会与科技的阴暗面&lt;/h4&gt;&lt;p&gt;RAYMOND ZHONG&lt;br&gt;2018年
      
    
    </summary>
    
      <category term="纽约时报" scheme="http://yoursite.com/categories/%E7%BA%BD%E7%BA%A6%E6%97%B6%E6%8A%A5/"/>
    
    
      <category term="new" scheme="http://yoursite.com/tags/new/"/>
    
  </entry>
  
  <entry>
    <title>谷歌员工大罢工，对硅谷个人主义说“不”</title>
    <link href="http://yoursite.com/2018/11/10/%E8%B0%B7%E6%AD%8C%E5%91%98%E5%B7%A5%E5%A4%A7%E7%BD%A2%E5%B7%A5%EF%BC%8C%E5%AF%B9%E7%A1%85%E8%B0%B7%E4%B8%AA%E4%BA%BA%E4%B8%BB%E4%B9%89%E8%AF%B4%E2%80%9C%E4%B8%8D%E2%80%9D/"/>
    <id>http://yoursite.com/2018/11/10/谷歌员工大罢工，对硅谷个人主义说“不”/</id>
    <published>2018-11-10T07:21:44.000Z</published>
    <updated>2018-11-10T07:48:12.559Z</updated>
    
    <content type="html"><![CDATA[<h4 id="谷歌员工大罢工，对硅谷个人主义说“不”"><a href="#谷歌员工大罢工，对硅谷个人主义说“不”" class="headerlink" title="谷歌员工大罢工，对硅谷个人主义说“不”"></a>谷歌员工大罢工，对硅谷个人主义说“不”</h4><p>上周谷歌员工罢工最引人瞩目的方面可能不是约两万的参加人数，也不是它的全球影响力，甚至不是它在不到一周的时间内就组织在一起。最引人瞩目的是，组织者将他们的行动与更广泛的工人斗争关联起来，他们使用的语言，是富裕的科技员工之前闻所未闻的。<br>“这是一个不断发展的运动的一部分，”组织者在新闻稿中写道，“不仅是在科技领域，而是在全国各地，包括教师、快餐工作者和其他正在用自己的力量做出真正改变的人。”<br>抗议在公司旧金山办事处附近开始时，组织者甚至表达了对在该市罢工的万豪国际(Marriott)工人的支持.<br>几十年来，硅谷一直是某种个人主义的模糊乌托邦的起点——一个拥有笔记本电脑和互联网连接的工程师可以改变世界，或者至少能改变一个历史悠久的行业。阶级意识已经过时了。工会是创新的敌人，是现状的支柱。<br>但导致谷歌罢工的问题——该公司与五角大楼合作在人工智能方面进行的争议性工作；为中国建立一个审查版搜索引擎的明显意愿；最重要的是公司对高级管理人员性骚扰指控的处理——证明它们太大了，任何工人都无法独自面对，即使这个工人拥有六位数的收入。他们需要一种团结一致的形式，它可以在20世纪最激进的劳工组织者身上看到。<br>“硅谷的神话是，你需要的所有权力都体现在你个人身上——如果你想要更多钱，就去其他地方，”加州大学伯克利分校的劳工专家哈莉·谢肯(Harley Shaiken)说。“而他们在这里说的是，作为个人，他们拥有的所有经济权力都是不够的。”<br>谢肯和其他劳工专家表示，这一觉醒的后果可能会影响到整个科技行业。<br>科技行业的高管长期坚持认为工会效率低下——英特尔联合创始人罗伯特·诺伊斯(Robert Noyce)曾将工会描述为生死攸关的威胁——娴熟的技术工人不需要正式保护，因为雇主离不开他们。许多科技公司也宣传自己天生亲近员工，因为他们比旧经济企业更少等级制度，运作时更民主。<br>例如，谷歌指出，它的工人与高级管理人员有无数沟通方式：员工可以在每月举行几次的TGIF（意为“感谢上帝，到周五了”。——译注）会议上向首席执行官发问。在会议之前，他们还在内部公司平台上提问，管理层将对那些获得最多“支持票”的问题做出回应。工人之间甚至可以传阅请愿书，那些被证明特别受欢迎的请愿的作者可以同管理层进行交流。<br><img src="\images\news\2018.11.10\1.jpg" alt=""></p><h5 id="谷歌罢工的组织者向旧金山万豪酒店罢工的员工表示支持。-BEN-MARGOT-ASSOCIATED-PRESS"><a href="#谷歌罢工的组织者向旧金山万豪酒店罢工的员工表示支持。-BEN-MARGOT-ASSOCIATED-PRESS" class="headerlink" title="谷歌罢工的组织者向旧金山万豪酒店罢工的员工表示支持。 BEN MARGOT/ASSOCIATED PRESS"></a>谷歌罢工的组织者向旧金山万豪酒店罢工的员工表示支持。 BEN MARGOT/ASSOCIATED PRESS</h5><p>这种反复交流的基础是一种信念，即真理会从不受管制的思想交流中涌现出来。但是一些员工抱怨它很少能带来持久的变化。<br>“说到表达情感的机制，这里有很多，”梅雷迪斯·韦特克(Meredith Whittaker)说，她是一位12年的谷歌资深员工，负责监督公司的一个研究小组，是这次罢工的组织者之一。“但就代理和权力——在决策上的真正权力——的机会而言，你看到的一些事情在告诉你，两者是不平等的。”<br>《纽约时报》于10月底报道称，谷歌在一名高管因性骚扰指控离开公司时，给了他一笔9000万美元的赔付金，组织者说，这点燃了人们心中酝酿的失望情绪。<br>问题是这种个人的无力感能在谷歌中传播多远。罢工组织者认为这种感觉非常普遍——从软件开发人员到硬件工程师，从员工到承包商。<br>一些观察者同意这一点。对科技和其他行业员工进行维护劳工权益教育的网站CoWorker.org的联合创始人米歇尔·米勒(Michelle Miller)表示，在去年一名员工发布备忘录声称女性天生就缺乏某些技术工作的能力后，谷歌员工就“不得不开始将自己视为某种集体”。<br>她说那些批评这份备忘录并在内部论坛上为多元化努力辩护的工作人员，受到了那些同情备忘录作者詹姆斯·达莫尔(James Damore)的人的威胁，并且不得不联合起来互相争辩。<br>米歇尔·米勒认为，自达莫尔被开除后，谷歌员工已经确信管理层只会留意集体行动。这包括在该公司有争议的五角大楼合同结束之前发生的临时工人抗议。<br>考虑到其表面上的进步价值观，包括该公司一直以来秉守的“不作恶”箴言，以及公司系统的开放性，谷歌可能特别容易受到员工反抗的影响。组织者提到他们使用谷歌内部平台和其他公司资源实行了整个罢工。<br>他们表示，如果首席执行官桑达尔·皮查伊(Sundar Pichai)和他的团队没有给出计划对他们的一些诉求采取行动，他们相信抗议只会升级。这些诉求包括在谷歌母公司Alphabet董事会中设置一名员工代表，以及终止那些阻止集体诉讼并要求对歧视和骚扰案件进行个人仲裁的雇佣合同。<br>“员工已就如何改进我们的政策和未来的进程提出了建设性意见，”皮查伊在一份声明中说。“我们正在吸纳他们的所有反馈，以便我们能够将这些想法变为行动。”<br>劳工专家表示，罢工引发的任何变化都可能在硅谷蔓延。<br><img src="\images\news\2018.11.10\2.jpg" alt=""></p><h5 id="梅雷迪斯·韦特克-Meredith-Whittaker-（图中使用扩音器者）参与了上周谷歌罢工的组织工作。她说，公司为员工提供了很多表达意见的方法，但员工对公司决策的影响力太小。"><a href="#梅雷迪斯·韦特克-Meredith-Whittaker-（图中使用扩音器者）参与了上周谷歌罢工的组织工作。她说，公司为员工提供了很多表达意见的方法，但员工对公司决策的影响力太小。" class="headerlink" title="梅雷迪斯·韦特克(Meredith Whittaker)（图中使用扩音器者）参与了上周谷歌罢工的组织工作。她说，公司为员工提供了很多表达意见的方法，但员工对公司决策的影响力太小。"></a>梅雷迪斯·韦特克(Meredith Whittaker)（图中使用扩音器者）参与了上周谷歌罢工的组织工作。她说，公司为员工提供了很多表达意见的方法，但员工对公司决策的影响力太小。</h5><p>“这些公司正在为员工竞争，”圣路易斯大学(St. Louis University)法学教授马修·博迪(Matthew Bodie)说，他是全国劳动关系委员会(National Labor Relations Board)的前律师。<br>“如果Facebook的员工正在关注这件事，并说‘哇，这真是令人钦佩’，”博迪说，那么Facebook可能不得不效仿。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;谷歌员工大罢工，对硅谷个人主义说“不”&quot;&gt;&lt;a href=&quot;#谷歌员工大罢工，对硅谷个人主义说“不”&quot; class=&quot;headerlink&quot; title=&quot;谷歌员工大罢工，对硅谷个人主义说“不”&quot;&gt;&lt;/a&gt;谷歌员工大罢工，对硅谷个人主义说“不”&lt;/h4&gt;&lt;p&gt;上周
      
    
    </summary>
    
      <category term="纽约时报" scheme="http://yoursite.com/categories/%E7%BA%BD%E7%BA%A6%E6%97%B6%E6%8A%A5/"/>
    
    
      <category term="new" scheme="http://yoursite.com/tags/new/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript代码片段练习</title>
    <link href="http://yoursite.com/2018/11/05/JavaScript%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5%E7%BB%83%E4%B9%A0/"/>
    <id>http://yoursite.com/2018/11/05/JavaScript代码片段练习/</id>
    <published>2018-11-05T00:39:17.000Z</published>
    <updated>2018-11-05T02:42:27.735Z</updated>
    
    <content type="html"><![CDATA[<p>#### </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#### &lt;/p&gt;

      
    
    </summary>
    
      <category term="JavaScript" scheme="http://yoursite.com/categories/JavaScript/"/>
    
      <category term="代码练习" scheme="http://yoursite.com/categories/JavaScript/%E4%BB%A3%E7%A0%81%E7%BB%83%E4%B9%A0/"/>
    
    
      <category term="个人" scheme="http://yoursite.com/tags/%E4%B8%AA%E4%BA%BA/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript开发底层原理-Call Stack(1)</title>
    <link href="http://yoursite.com/2018/10/27/JavaScript%E5%BC%80%E5%8F%91%E5%BA%95%E5%B1%82%E5%8E%9F%E7%90%86-1/"/>
    <id>http://yoursite.com/2018/10/27/JavaScript开发底层原理-1/</id>
    <published>2018-10-27T03:27:20.000Z</published>
    <updated>2018-10-27T03:57:24.093Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Call-Stack"><a href="#Call-Stack" class="headerlink" title="Call Stack"></a>Call Stack</h2><h4 id="调用栈是解析器-如浏览器中的的javascript解析器-的一种机制，可以在脚本调用多个函数时，跟踪每个函数在完成执行时应该返回控制的点。（如什么函数正在执行，什么函数被这个函数调用，下一个调用的函数是谁）"><a href="#调用栈是解析器-如浏览器中的的javascript解析器-的一种机制，可以在脚本调用多个函数时，跟踪每个函数在完成执行时应该返回控制的点。（如什么函数正在执行，什么函数被这个函数调用，下一个调用的函数是谁）" class="headerlink" title="调用栈是解析器(如浏览器中的的javascript解析器)的一种机制，可以在脚本调用多个函数时，跟踪每个函数在完成执行时应该返回控制的点。（如什么函数正在执行，什么函数被这个函数调用，下一个调用的函数是谁）"></a>调用栈是解析器(如浏览器中的的javascript解析器)的一种机制，可以在脚本调用多个函数时，跟踪每个函数在完成执行时应该返回控制的点。（如什么函数正在执行，什么函数被这个函数调用，下一个调用的函数是谁）</h4><blockquote><ul><li>当脚本要调用一个函数时，解析器把该函数添加到栈中并且执行这个函数</li><li>任何被这个函数调用的函数会进一步添加到调用栈中，并且运行到它们被上个程序调用的位置。</li><li>当函数运行结束后，解释器将它从堆栈中取出，并在主代码列表中继续执行代码。</li><li>如果栈占用的空间比分配给它的空间还大，那么则会导致“栈溢出”错误。</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">greeting</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    sayHi();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sayHi</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"Hi!"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用 `greeting` 方法</span></span><br><span class="line">greeting();</span><br></pre></td></tr></table></figure><h4 id="执行过程"><a href="#执行过程" class="headerlink" title="执行过程"></a>执行过程</h4><ul><li>1.忽略所有的方法, 直到到达 greeting()方法.</li><li>2.调用 greeting() 方法.</li><li>3.把 <code>greeting</code> 方法加入调用栈列表。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">调用栈列表:</span><br><span class="line">- greeting</span><br></pre></td></tr></table></figure><ul><li>4.执行 <code>greeting</code> 方法中的所有代码行。</li><li>5.到达 sayHi() 方法。</li><li>6.把 sayHi() 方法加入调用栈列表。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">调用栈列表:</span><br><span class="line">- greeting</span><br><span class="line">- sayHi</span><br></pre></td></tr></table></figure><ul><li>7.执行 sayHi() 函数中的所有代码行，直到结束。</li><li>8.将执行返回到调用 sayHi() 的行，并继续执行 greeting() 函数的其余部分。</li><li>9.把 sayHi() 方法从调用栈列表中删除。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">调用栈列表:</span><br><span class="line">- greeting</span><br></pre></td></tr></table></figure><ul><li>10.当 greeting() 函数中的所有内容都执行完之后，返回到它的调用行继续执行其余的JS代码。</li><li>11.把 greeting() 方法从调用栈列表中删除。</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">调用栈列表:</span><br><span class="line">空</span><br></pre></td></tr></table></figure><h6 id="我们从一个空的调用栈开始，当我们调用一个函数时，它会自动添加到调用栈中，在执行完所有代码之后，它会自动从调用栈中删除。最后，我们也得到了一个空栈。"><a href="#我们从一个空的调用栈开始，当我们调用一个函数时，它会自动添加到调用栈中，在执行完所有代码之后，它会自动从调用栈中删除。最后，我们也得到了一个空栈。" class="headerlink" title="我们从一个空的调用栈开始，当我们调用一个函数时，它会自动添加到调用栈中，在执行完所有代码之后，它会自动从调用栈中删除。最后，我们也得到了一个空栈。"></a>我们从一个空的调用栈开始，当我们调用一个函数时，它会自动添加到调用栈中，在执行完所有代码之后，它会自动从调用栈中删除。最后，我们也得到了一个空栈。</h6>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Call-Stack&quot;&gt;&lt;a href=&quot;#Call-Stack&quot; class=&quot;headerlink&quot; title=&quot;Call Stack&quot;&gt;&lt;/a&gt;Call Stack&lt;/h2&gt;&lt;h4 id=&quot;调用栈是解析器-如浏览器中的的javascript解析器-的一种机
      
    
    </summary>
    
      <category term="javascript" scheme="http://yoursite.com/categories/javascript/"/>
    
      <category term="node.js" scheme="http://yoursite.com/categories/javascript/node-js/"/>
    
    
      <category term="node, javaScript底层" scheme="http://yoursite.com/tags/node-javaScript%E5%BA%95%E5%B1%82/"/>
    
  </entry>
  
  <entry>
    <title>手摸手教你用node.js写后台api(3)</title>
    <link href="http://yoursite.com/2018/07/27/%E6%89%8B%E6%91%B8%E6%89%8B%E6%95%99%E4%BD%A0%E7%94%A8node.js%E5%86%99%E5%90%8E%E5%8F%B0api-3/"/>
    <id>http://yoursite.com/2018/07/27/手摸手教你用node.js写后台api-3/</id>
    <published>2018-07-27T07:54:47.000Z</published>
    <updated>2018-07-27T09:25:44.583Z</updated>
    
    <content type="html"><![CDATA[<h2 id="文中代码github地址-nbsp-nbsp-文中代码github地址"><a href="#文中代码github地址-nbsp-nbsp-文中代码github地址" class="headerlink" title="文中代码github地址 &nbsp;&nbsp;[文中代码github地址]"></a>文中代码github地址 &nbsp;&nbsp;<a href="https://github.com/daniel-lij/write-the-api-interface-with-node/tree/master/node-rest-shop" target="_blank" rel="noopener">[文中代码github地址]</a></h2><h2 id="mongDB简单使用方法-nbsp-nbsp-mongDB简单使用方法"><a href="#mongDB简单使用方法-nbsp-nbsp-mongDB简单使用方法" class="headerlink" title="mongDB简单使用方法 &nbsp;&nbsp;[mongDB简单使用方法]"></a>mongDB简单使用方法 &nbsp;&nbsp;<a href="https://coding.net/u/daniel-lij/p/daniel-lij-xmind/git/blob/master/mongodb.xmind" target="_blank" rel="noopener">[mongDB简单使用方法]</a></h2><blockquote><ul><li>当然mongDB的使用还有很多,随便上百度查查都可以查出不少于几万篇文章。</li></ul></blockquote><h4 id="1-引入在app-js中引入mongoose"><a href="#1-引入在app-js中引入mongoose" class="headerlink" title="1.引入在app.js中引入mongoose"></a>1.引入在app.js中引入mongoose</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>)</span><br><span class="line"><span class="keyword">const</span> app = express()</span><br><span class="line"><span class="keyword">const</span> morgan = <span class="built_in">require</span>(<span class="string">'morgan'</span>)</span><br><span class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">'body-parser'</span>)</span><br><span class="line"><span class="comment">// 获得mongoose做数据库</span></span><br><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">'mongoose'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> productRoutes = <span class="built_in">require</span>(<span class="string">'./api/routes/products'</span>)</span><br><span class="line"><span class="keyword">const</span> ordersRoutes = <span class="built_in">require</span>(<span class="string">'./api/routes/orders'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 只需要自己启动mongdb之后创建一个shop的数据库就能连接上</span></span><br><span class="line">mongoose.connect(<span class="string">'mongodb://localhost/shop'</span>)</span><br><span class="line"></span><br><span class="line">mongoose.Promise = global.Promise</span><br><span class="line"></span><br><span class="line"><span class="comment">// 日志启动的名字dev</span></span><br><span class="line">app.use(morgan(<span class="string">'dev'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">// 对post请求进行解析</span></span><br><span class="line">app.use(bodyParser.urlencoded(&#123; <span class="attr">extended</span>: <span class="literal">false</span> &#125;));</span><br><span class="line">app.use(bodyParser.json());</span><br><span class="line"></span><br><span class="line">app.use(<span class="function">(<span class="params">req, res, next</span>) =&gt;</span>&#123;</span><br><span class="line">    res.header(<span class="string">'Access-Control-Allow-Origin'</span>, <span class="string">'*'</span>)</span><br><span class="line">    res.header(<span class="string">'Access-Control-Allow-Headers'</span>,</span><br><span class="line">    <span class="string">'Origin, x-Requested-With, Content-Type, Accept, Authorization'</span></span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">if</span>( req.method === <span class="string">'OPTIONS'</span>) &#123;</span><br><span class="line">        res.header(<span class="string">'Access-Control-Allow-Methods'</span>, <span class="string">'PUT, POST, PATCH, DELETE, GET'</span>)</span><br><span class="line">        <span class="keyword">return</span> res.status(<span class="number">200</span>).json(&#123;&#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    next()</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.use(<span class="string">'/products'</span>, productRoutes)</span><br><span class="line">app.use(<span class="string">'/orders'</span>, ordersRoutes)</span><br><span class="line"></span><br><span class="line">app.use(<span class="function">(<span class="params">req, res, next</span>) =&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> error = <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'Not Found'</span>)</span><br><span class="line">    error.status = <span class="number">404</span></span><br><span class="line">    next(error)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.use(<span class="function">(<span class="params">error, req, res, next</span>) =&gt;</span>&#123;</span><br><span class="line">    res.status(error.status || <span class="number">500</span>)</span><br><span class="line">    res.json(&#123;</span><br><span class="line">        error:&#123;</span><br><span class="line">            message: error.message</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = app</span><br></pre></td></tr></table></figure><h4 id="2-创建数据库之后-开始做数据模型api文件夹下models文件夹创建product数据模型"><a href="#2-创建数据库之后-开始做数据模型api文件夹下models文件夹创建product数据模型" class="headerlink" title="2.创建数据库之后,开始做数据模型api文件夹下models文件夹创建product数据模型"></a>2.创建数据库之后,开始做数据模型api文件夹下models文件夹创建product数据模型</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">'mongoose'</span>)</span><br><span class="line"><span class="keyword">const</span> productSchema = mongoose.Schema(&#123;</span><br><span class="line">    <span class="comment">// 创建唯一的id</span></span><br><span class="line">    _id: mongoose.Schema.Types.ObjectId,</span><br><span class="line">    <span class="comment">// 创建name属性为必需属性</span></span><br><span class="line">    name: &#123;<span class="attr">type</span>: <span class="built_in">String</span>, <span class="attr">require</span>: <span class="literal">true</span>&#125;,</span><br><span class="line">    <span class="comment">// 创建price属性为必需属性</span></span><br><span class="line">    price: &#123;<span class="attr">type</span>: <span class="built_in">Number</span>, <span class="attr">require</span>: <span class="literal">true</span>&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">module</span>.exports = mongoose.model(<span class="string">'Product'</span>, productSchema)</span><br></pre></td></tr></table></figure><h4 id="3-修改路由文件routes-products-js"><a href="#3-修改路由文件routes-products-js" class="headerlink" title="3.修改路由文件routes/products.js"></a>3.修改路由文件routes/products.js</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>)</span><br><span class="line"><span class="keyword">const</span> router = express.Router()</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">'mongoose'</span>)</span><br><span class="line"><span class="keyword">const</span> Product = <span class="built_in">require</span>(<span class="string">'../models/product'</span>) </span><br><span class="line"></span><br><span class="line">router.get(<span class="string">'/'</span>,(req, res, next)=&gt;&#123;</span><br><span class="line">    Product.find().select(<span class="string">'name , price , _id'</span>).exec().then(<span class="function"><span class="params">result</span> =&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(result.length &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">const</span> response =&#123;</span><br><span class="line">                count : result.length,</span><br><span class="line">                products: result.map(<span class="function"><span class="params">doc</span> =&gt;</span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> &#123;</span><br><span class="line">                        name: doc.name,</span><br><span class="line">                        price: doc.price,</span><br><span class="line">                        _id: doc._id,</span><br><span class="line">                        request:&#123;</span><br><span class="line">                            type:<span class="string">'GET'</span>,</span><br><span class="line">                            url: <span class="string">"https://localhost:3000/"</span> + doc._id</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">            res.status(<span class="number">201</span>).json(response)</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            res.status(<span class="number">201</span>).json(&#123;</span><br><span class="line">                message:<span class="string">'没有请求到数据'</span></span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;).catch(<span class="function"><span class="params">err</span> =&gt;</span>&#123;</span><br><span class="line">        res.status(<span class="number">500</span>).json(&#123;</span><br><span class="line">            error: err</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">router.post(<span class="string">'/'</span>,(req, res, next)=&gt;&#123;</span><br><span class="line">    <span class="comment">// 存储请求的数据</span></span><br><span class="line">    <span class="keyword">const</span> product = <span class="keyword">new</span> Product(&#123;</span><br><span class="line">        _id: <span class="keyword">new</span> mongoose.Types.ObjectId(),</span><br><span class="line">        name: req.body.name,</span><br><span class="line">        price: req.body.price</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将请求的数据存储到数据库</span></span><br><span class="line">    product.save().then(<span class="function"><span class="params">result</span> =&gt;</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(result)</span><br><span class="line">        res.status(<span class="number">201</span>).json(&#123;</span><br><span class="line">            message:<span class="string">'this is products post req'</span>,</span><br><span class="line">            content: &#123;</span><br><span class="line">                name: result.name,</span><br><span class="line">                price: result.price,</span><br><span class="line">                _id: result._id,</span><br><span class="line">                request:&#123;</span><br><span class="line">                    type:<span class="string">'POST'</span>,</span><br><span class="line">                    url: <span class="string">"https://localhost:3000/"</span> + doc._id</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;).catch(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(err)</span><br><span class="line">        res.status(<span class="number">500</span>).json(&#123;</span><br><span class="line">            error: err</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">router.get(<span class="string">'/:productId'</span>, (req, res, next)=&gt;&#123;</span><br><span class="line">    <span class="keyword">const</span> id = req.params.productId</span><br><span class="line">    Product.findById(id).exec().then(<span class="function"><span class="params">doc</span> =&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(doc)&#123;</span><br><span class="line">            res.status(<span class="number">200</span>).json(doc)</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            res.status(<span class="number">404</span>).json(&#123;</span><br><span class="line">                message: <span class="string">'没有找到有效Id'</span></span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;).catch(<span class="function"><span class="params">err</span> =&gt;</span>&#123;</span><br><span class="line">        res.status(<span class="number">500</span>).json(&#123;</span><br><span class="line">            error: err</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">router.patch(<span class="string">'/:productId'</span>, (req, res, next)=&gt;&#123;</span><br><span class="line">    <span class="keyword">const</span> id = req.params.productId</span><br><span class="line">    <span class="keyword">const</span> updateOps = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">const</span> ops <span class="keyword">of</span> req.body)&#123;</span><br><span class="line">        updateOps[ops.propName] = ops.value</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(updateOps)</span><br><span class="line">    Product.update(&#123;<span class="attr">_id</span>: id&#125;, &#123;<span class="attr">$set</span>: updateOps&#125;).exec().then(<span class="function"><span class="params">result</span> =&gt;</span>&#123;</span><br><span class="line">        res.status(<span class="number">200</span>).json(result)        </span><br><span class="line">    &#125;).catch(<span class="function"><span class="params">err</span> =&gt;</span>&#123;</span><br><span class="line">        res.status(<span class="number">500</span>).json(&#123;</span><br><span class="line">            error: err</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">router.delete(<span class="string">'/:productId'</span>, (req, res, next)=&gt;&#123;</span><br><span class="line">    <span class="keyword">const</span> id = req.params.productId</span><br><span class="line">    Product.remove(&#123; <span class="attr">_id</span>: id&#125;).exec().then(<span class="function"><span class="params">result</span> =&gt;</span>&#123;</span><br><span class="line">        res.status(<span class="number">200</span>).json(&#123;</span><br><span class="line">            message: <span class="string">'删除成功'</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;).catch(<span class="function"><span class="params">err</span> =&gt;</span>&#123;</span><br><span class="line">        res.status(<span class="number">500</span>).json(&#123;</span><br><span class="line">            error: err</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = router</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;文中代码github地址-nbsp-nbsp-文中代码github地址&quot;&gt;&lt;a href=&quot;#文中代码github地址-nbsp-nbsp-文中代码github地址&quot; class=&quot;headerlink&quot; title=&quot;文中代码github地址 &amp;nbsp;&amp;nb
      
    
    </summary>
    
      <category term="javascript" scheme="http://yoursite.com/categories/javascript/"/>
    
      <category term="node.js" scheme="http://yoursite.com/categories/javascript/node-js/"/>
    
      <category term="express" scheme="http://yoursite.com/categories/javascript/node-js/express/"/>
    
    
      <category term="node, express" scheme="http://yoursite.com/tags/node-express/"/>
    
  </entry>
  
  <entry>
    <title>手摸手教你用node.js写后台api(2)</title>
    <link href="http://yoursite.com/2018/07/26/%E6%89%8B%E6%91%B8%E6%89%8B%E6%95%99%E4%BD%A0%E7%94%A8node.js%E5%86%99%E5%90%8E%E5%8F%B0api-2/"/>
    <id>http://yoursite.com/2018/07/26/手摸手教你用node.js写后台api-2/</id>
    <published>2018-07-26T03:33:26.000Z</published>
    <updated>2018-07-26T09:30:47.675Z</updated>
    
    <content type="html"><![CDATA[<h2 id="文中代码github地址-nbsp-nbsp-文中代码github地址"><a href="#文中代码github地址-nbsp-nbsp-文中代码github地址" class="headerlink" title="文中代码github地址 &nbsp;&nbsp;[文中代码github地址]"></a>文中代码github地址 &nbsp;&nbsp;<a href="https://github.com/daniel-lij/write-the-api-interface-with-node/tree/master/node-rest-shop" target="_blank" rel="noopener">[文中代码github地址]</a></h2><h4 id="1-全局错误处理"><a href="#1-全局错误处理" class="headerlink" title="1.全局错误处理"></a>1.全局错误处理</h4><h6 id="在我们访问页面时有可能参数传递错误-或者未知页面都有可能出现后端服务错误-需要错误处理机制来处理这些问题。"><a href="#在我们访问页面时有可能参数传递错误-或者未知页面都有可能出现后端服务错误-需要错误处理机制来处理这些问题。" class="headerlink" title="在我们访问页面时有可能参数传递错误, 或者未知页面都有可能出现后端服务错误, 需要错误处理机制来处理这些问题。"></a>在我们访问页面时有可能参数传递错误, 或者未知页面都有可能出现后端服务错误, 需要错误处理机制来处理这些问题。</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>)</span><br><span class="line"><span class="keyword">const</span> app = express()</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> productRoutes = <span class="built_in">require</span>(<span class="string">'./api/routes/products'</span>)</span><br><span class="line"><span class="keyword">const</span> ordersRoutes = <span class="built_in">require</span>(<span class="string">'./api/routes/orders'</span>)</span><br><span class="line"></span><br><span class="line">app.use(<span class="string">'/products'</span>, productRoutes)</span><br><span class="line">app.use(<span class="string">'/orders'</span>, ordersRoutes)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加错误处理机制(express中use写的顺序很重要,如果错误处理写道api逻辑代码前面,错误处理就会提前执行)</span></span><br><span class="line">app.use(<span class="function">(<span class="params">req, res, next</span>) =&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> error = <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'Not Found'</span>)</span><br><span class="line">    error.status = <span class="number">404</span></span><br><span class="line">    next(error) </span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.use(<span class="function">(<span class="params">error, req, res, next</span>) =&gt;</span>&#123;</span><br><span class="line">    res.status(error.status || <span class="number">500</span>)</span><br><span class="line">    res.json(&#123;</span><br><span class="line">        error:&#123;</span><br><span class="line">            message: error.message</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = app</span><br></pre></td></tr></table></figure><h4 id="2-安装日志记录工具npm-install-–save-morgan"><a href="#2-安装日志记录工具npm-install-–save-morgan" class="headerlink" title="2.安装日志记录工具npm install –save morgan"></a>2.安装日志记录工具npm install –save morgan</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>)</span><br><span class="line"><span class="keyword">const</span> app = express()</span><br><span class="line"><span class="comment">// 记录日志中间件</span></span><br><span class="line"><span class="keyword">const</span> morgan = <span class="built_in">require</span>(<span class="string">'morgan'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> productRoutes = <span class="built_in">require</span>(<span class="string">'./api/routes/products'</span>)</span><br><span class="line"><span class="keyword">const</span> ordersRoutes = <span class="built_in">require</span>(<span class="string">'./api/routes/orders'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 日志启动的名字dev</span></span><br><span class="line">app.use(morgan(<span class="string">'dev'</span>))</span><br><span class="line"></span><br><span class="line">app.use(<span class="string">'/products'</span>, productRoutes)</span><br><span class="line">app.use(<span class="string">'/orders'</span>, ordersRoutes)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理错误</span></span><br><span class="line">app.use(<span class="function">(<span class="params">req, res, next</span>) =&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> error = <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'Not Found'</span>)</span><br><span class="line">    error.status = <span class="number">404</span></span><br><span class="line">    next(error)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.use(<span class="function">(<span class="params">error, req, res, next</span>) =&gt;</span>&#123;</span><br><span class="line">    res.status(error.status || <span class="number">500</span>)</span><br><span class="line">    res.json(&#123;</span><br><span class="line">        error:&#123;</span><br><span class="line">            message: error.message</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = app</span><br></pre></td></tr></table></figure><h4 id="3-安装body-parser处理post请求-npm-install-–save-body-parser"><a href="#3-安装body-parser处理post请求-npm-install-–save-body-parser" class="headerlink" title="3.安装body-parser处理post请求 npm install –save body-parser"></a>3.安装body-parser处理post请求 npm install –save body-parser</h4><blockquote><ul><li>在app.js中引入body-parser</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>)</span><br><span class="line"><span class="keyword">const</span> app = express()</span><br><span class="line"><span class="keyword">const</span> morgan = <span class="built_in">require</span>(<span class="string">'morgan'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 引入解析post请求中间件</span></span><br><span class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">'body-parser'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> productRoutes = <span class="built_in">require</span>(<span class="string">'./api/routes/products'</span>)</span><br><span class="line"><span class="keyword">const</span> ordersRoutes = <span class="built_in">require</span>(<span class="string">'./api/routes/orders'</span>)</span><br><span class="line"></span><br><span class="line">app.use(morgan(<span class="string">'dev'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">// 对post请求进行解析</span></span><br><span class="line">app.use(bodyParser.urlencoded(&#123; <span class="attr">extended</span>: <span class="literal">false</span> &#125;));</span><br><span class="line">app.use(bodyParser.json());</span><br><span class="line"></span><br><span class="line">app.use(<span class="string">'/products'</span>, productRoutes)</span><br><span class="line">app.use(<span class="string">'/orders'</span>, ordersRoutes)</span><br><span class="line"></span><br><span class="line">app.use(<span class="function">(<span class="params">req, res, next</span>) =&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> error = <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'Not Found'</span>)</span><br><span class="line">    error.status = <span class="number">404</span></span><br><span class="line">    next(error)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.use(<span class="function">(<span class="params">error, req, res, next</span>) =&gt;</span>&#123;</span><br><span class="line">    res.status(error.status || <span class="number">500</span>)</span><br><span class="line">    res.json(&#123;</span><br><span class="line">        error:&#123;</span><br><span class="line">            message: error.message</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = app</span><br></pre></td></tr></table></figure><blockquote><ul><li>修改products.js文件的post做测试<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 修改post文件</span></span><br><span class="line">router.post(<span class="string">'/'</span>,(req, res, next)=&gt;&#123;</span><br><span class="line">    <span class="keyword">var</span> product = &#123;</span><br><span class="line">        name: req.body.name,</span><br><span class="line">        weight: req.body.weight</span><br><span class="line">    &#125;</span><br><span class="line">    res.status(<span class="number">201</span>).json(&#123;</span><br><span class="line">        message:<span class="string">'this is products post req'</span>,</span><br><span class="line">        content: product</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ul></blockquote><blockquote><ul><li>postman测试图片</li></ul></blockquote><p><img src="/images/node/body-parser.png" alt=""></p><h4 id="4-设置一些res相关参数-支持跨域"><a href="#4-设置一些res相关参数-支持跨域" class="headerlink" title="4.设置一些res相关参数,支持跨域"></a>4.设置一些res相关参数,支持跨域</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>)</span><br><span class="line"><span class="keyword">const</span> app = express()</span><br><span class="line"><span class="keyword">const</span> morgan = <span class="built_in">require</span>(<span class="string">'morgan'</span>)</span><br><span class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">'body-parser'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> productRoutes = <span class="built_in">require</span>(<span class="string">'./api/routes/products'</span>)</span><br><span class="line"><span class="keyword">const</span> ordersRoutes = <span class="built_in">require</span>(<span class="string">'./api/routes/orders'</span>)</span><br><span class="line"></span><br><span class="line">app.use(morgan(<span class="string">'dev'</span>))</span><br><span class="line"></span><br><span class="line">app.use(bodyParser.urlencoded(&#123; <span class="attr">extended</span>: <span class="literal">false</span> &#125;));</span><br><span class="line">app.use(bodyParser.json());</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置res.header相关的设置(然后做具体的业务处理)</span></span><br><span class="line">app.use(<span class="function">(<span class="params">req, res, next</span>) =&gt;</span>&#123;</span><br><span class="line">    res.header(<span class="string">'Access-Control-Allow-Origin'</span>, <span class="string">'*'</span>)</span><br><span class="line">    res.header(<span class="string">'Access-Control-Allow-Headers'</span>,</span><br><span class="line">    <span class="string">'Origin, x-Requested-With, Content-Type, Accept, Authorization'</span></span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">if</span>( req.method === <span class="string">'OPTIONS'</span>) &#123;</span><br><span class="line">        res.header(<span class="string">'Access-Control-Allow-Methods'</span>, <span class="string">'PUT, POST, PATCH, DELETE, GET'</span>)</span><br><span class="line">        <span class="keyword">return</span> res.status(<span class="number">200</span>).json(&#123;&#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    next()</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.use(<span class="string">'/products'</span>, productRoutes)</span><br><span class="line">app.use(<span class="string">'/orders'</span>, ordersRoutes)</span><br><span class="line"></span><br><span class="line">app.use(<span class="function">(<span class="params">req, res, next</span>) =&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> error = <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'Not Found'</span>)</span><br><span class="line">    error.status = <span class="number">404</span></span><br><span class="line">    next(error)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.use(<span class="function">(<span class="params">error, req, res, next</span>) =&gt;</span>&#123;</span><br><span class="line">    res.status(error.status || <span class="number">500</span>)</span><br><span class="line">    res.json(&#123;</span><br><span class="line">        error:&#123;</span><br><span class="line">            message: error.message</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = app</span><br></pre></td></tr></table></figure><blockquote><ul><li>postman测试图片</li></ul></blockquote><p><img src="/images/node/body-parser.png" alt=""></p><blockquote><ul><li>postman测试响应参数</li></ul></blockquote><p><img src="/images/node/res-header.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;文中代码github地址-nbsp-nbsp-文中代码github地址&quot;&gt;&lt;a href=&quot;#文中代码github地址-nbsp-nbsp-文中代码github地址&quot; class=&quot;headerlink&quot; title=&quot;文中代码github地址 &amp;nbsp;&amp;nb
      
    
    </summary>
    
      <category term="javascript" scheme="http://yoursite.com/categories/javascript/"/>
    
      <category term="node.js" scheme="http://yoursite.com/categories/javascript/node-js/"/>
    
      <category term="express" scheme="http://yoursite.com/categories/javascript/node-js/express/"/>
    
    
      <category term="node, express" scheme="http://yoursite.com/tags/node-express/"/>
    
  </entry>
  
  <entry>
    <title>手摸手教你用node.js写后台api(1)</title>
    <link href="http://yoursite.com/2018/07/25/%E6%89%8B%E6%91%B8%E6%89%8B%E6%95%99%E4%BD%A0%E7%94%A8node.js%E5%86%99%E5%90%8E%E5%8F%B0api-1/"/>
    <id>http://yoursite.com/2018/07/25/手摸手教你用node.js写后台api-1/</id>
    <published>2018-07-25T07:40:16.000Z</published>
    <updated>2018-11-10T07:35:40.764Z</updated>
    
    <content type="html"><![CDATA[<h2 id="文中代码github地址-nbsp-nbsp-文中代码github地址"><a href="#文中代码github地址-nbsp-nbsp-文中代码github地址" class="headerlink" title="文中代码github地址 &nbsp;&nbsp;[文中代码github地址]"></a>文中代码github地址 &nbsp;&nbsp;<a href="https://github.com/daniel-lij/write-the-api-interface-with-node/tree/master/node-rest-shop" target="_blank" rel="noopener">[文中代码github地址]</a></h2><h2 id="restful风格编码简单流程图"><a href="#restful风格编码简单流程图" class="headerlink" title="restful风格编码简单流程图"></a>restful风格编码简单流程图</h2><p><img src="/images/node/流程图.png" alt=""></p><h4 id="1-在文件夹中用cmd中初始化一个项目-推荐使用Conemu"><a href="#1-在文件夹中用cmd中初始化一个项目-推荐使用Conemu" class="headerlink" title="1.在文件夹中用cmd中初始化一个项目(推荐使用Conemu)"></a>1.在文件夹中用cmd中初始化一个项目(推荐使用Conemu)</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 产生一个package.json文件 --&gt;</span><br><span class="line">npm init</span><br></pre></td></tr></table></figure><h4 id="2-安装express-在根目录下创建一个server-js文件"><a href="#2-安装express-在根目录下创建一个server-js文件" class="headerlink" title="2.安装express,在根目录下创建一个server.js文件"></a>2.安装express,在根目录下创建一个server.js文件</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install express</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 引入node内置http中间件 --&gt;</span><br><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>)</span><br><span class="line">&lt;!-- 导入app.js文件 --&gt;</span><br><span class="line"><span class="keyword">const</span> app = <span class="built_in">require</span>(<span class="string">'./app'</span>)</span><br><span class="line"></span><br><span class="line">&lt;!-- 设置端口号, 环境变量中端口号 或者 自己设置的端口号 --&gt;</span><br><span class="line"><span class="keyword">const</span> port = process.env.PORT || <span class="number">3000</span></span><br><span class="line"></span><br><span class="line">&lt;!-- 用内置http中间件创造一个服务器,将app文件跑在node服务器上 --&gt;</span><br><span class="line"><span class="keyword">const</span> server = http.createServer(app)</span><br><span class="line"></span><br><span class="line">&lt;!-- 监听端口 --&gt;</span><br><span class="line">server.listen(port, ()=&gt;&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`数据库连接成功, 端口: <span class="subst">$&#123;port&#125;</span>`</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="2-在根目录下创建一个app-js文件"><a href="#2-在根目录下创建一个app-js文件" class="headerlink" title="2.在根目录下创建一个app.js文件"></a>2.在根目录下创建一个app.js文件</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入express后端框架</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>)</span><br><span class="line"><span class="keyword">const</span> app = express()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 引入后端构造的商品products文件 </span></span><br><span class="line"><span class="keyword">const</span> productRoutes = <span class="built_in">require</span>(<span class="string">'./api/routes/products'</span>)</span><br><span class="line"><span class="comment">// 引入后端构造的订单orders文件</span></span><br><span class="line"><span class="keyword">const</span> ordersRoutes = <span class="built_in">require</span>(<span class="string">'./api/routes/orders'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// app中使用products和orders,并指定路径</span></span><br><span class="line">app.use(<span class="string">'/products'</span>, productRoutes)</span><br><span class="line">app.use(<span class="string">'/orders'</span>, ordersRoutes)</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = app</span><br></pre></td></tr></table></figure><h4 id="2-在根目录下创建一个api文件夹-api文件夹下创建routes文件夹-这是后端路由-创建products-js-orders-js文件"><a href="#2-在根目录下创建一个api文件夹-api文件夹下创建routes文件夹-这是后端路由-创建products-js-orders-js文件" class="headerlink" title="2.在根目录下创建一个api文件夹,api文件夹下创建routes文件夹(这是后端路由),创建products.js,orders.js文件"></a>2.在根目录下创建一个api文件夹,api文件夹下创建routes文件夹(这是后端路由),创建products.js,orders.js文件</h4><blockquote><ul><li>创建products.js文件,进行一些常规操作</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入express文件</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>)</span><br><span class="line"><span class="comment">// 使用express的路由方法</span></span><br><span class="line"><span class="keyword">const</span> router = express.Router()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 比如获得商品</span></span><br><span class="line">router.get(<span class="string">'/'</span>,(req, res, next)=&gt;&#123;</span><br><span class="line">    res.status(<span class="number">200</span>).json(&#123;</span><br><span class="line">        message:<span class="string">'this is products get req'</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 比如创建商品</span></span><br><span class="line">router.post(<span class="string">'/'</span>,(req, res, next)=&gt;&#123;</span><br><span class="line">    res.status(<span class="number">201</span>).json(&#123;</span><br><span class="line">        message:<span class="string">'this is products post req'</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 比如获取商品的id</span></span><br><span class="line">router.post(<span class="string">'/:productId'</span>, (req, res, next)=&gt;&#123;</span><br><span class="line">    <span class="keyword">const</span> id = req.params.productId</span><br><span class="line">    <span class="keyword">if</span>(id === <span class="string">"special"</span>)&#123;</span><br><span class="line">        res.status(<span class="number">200</span>).json(&#123;</span><br><span class="line">            message: <span class="string">'this is products true id'</span>,</span><br><span class="line">            id: id</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        res.status(<span class="number">200</span>).json(&#123;</span><br><span class="line">            message: <span class="string">'this is products error id'</span>,</span><br><span class="line">            id: <span class="number">-1</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 比如修改商品id</span></span><br><span class="line">router.patch(<span class="string">'/:productId'</span>, (req, res, next)=&gt;&#123;</span><br><span class="line">    res.status(<span class="number">200</span>).json(&#123;</span><br><span class="line">        message: <span class="string">'this is products patch'</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 比如删除商品</span></span><br><span class="line">router.delete(<span class="string">'/:productId'</span>, (req, res, next)=&gt;&#123;</span><br><span class="line">    res.status(<span class="number">200</span>).json(&#123;</span><br><span class="line">        message: <span class="string">'this is products delete'</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 导出router</span></span><br><span class="line"><span class="built_in">module</span>.exports = router</span><br></pre></td></tr></table></figure><blockquote><ul><li>创建orders.js文件,进行一些常规操作,意图同上</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>)</span><br><span class="line"><span class="keyword">const</span> router = express.Router()</span><br><span class="line"></span><br><span class="line">router.get(<span class="string">'/'</span>,(req, res, next)=&gt;&#123;</span><br><span class="line">    res.status(<span class="number">200</span>).json(&#123;</span><br><span class="line">        message:<span class="string">'this is orders get req'</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">router.post(<span class="string">'/'</span>,(req, res, next)=&gt;&#123;</span><br><span class="line">    res.status(<span class="number">201</span>).json(&#123;</span><br><span class="line">        message:<span class="string">'this is orders post req'</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">router.post(<span class="string">'/:orderId'</span>, (req, res, next)=&gt;&#123;</span><br><span class="line">    <span class="keyword">const</span> id = req.params.orderId</span><br><span class="line">    <span class="built_in">console</span>.log(id)</span><br><span class="line">    <span class="keyword">if</span>(id === <span class="string">"123"</span>)&#123;</span><br><span class="line">        res.status(<span class="number">200</span>).json(&#123;</span><br><span class="line">            message: <span class="string">'this is orders true id'</span>,</span><br><span class="line">            id: id</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        res.status(<span class="number">200</span>).json(&#123;</span><br><span class="line">            message: <span class="string">'this is orders error id'</span>,</span><br><span class="line">            id: <span class="number">-1</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">router.delete(<span class="string">'/:orderId'</span>, (req, res, next)=&gt;&#123;</span><br><span class="line">    res.status(<span class="number">200</span>).json(&#123;</span><br><span class="line">        message: <span class="string">'this is orders delete'</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = router</span><br></pre></td></tr></table></figure><h4 id="3-在cmd中node-server-js运行后台服务进行测试"><a href="#3-在cmd中node-server-js运行后台服务进行测试" class="headerlink" title="3.在cmd中node server.js运行后台服务进行测试"></a>3.在cmd中node server.js运行后台服务进行测试</h4><blockquote><ul><li>在浏览器中进行测试 </li></ul></blockquote><h5 id="http-localhost-3000-products"><a href="#http-localhost-3000-products" class="headerlink" title="http://localhost:3000/products"></a><a href="http://localhost:3000/products" target="_blank" rel="noopener">http://localhost:3000/products</a></h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 20180725165116</span></span><br><span class="line"><span class="comment">// http://localhost:3000/products</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="string">"message"</span>: <span class="string">"this is get req"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="但是很不幸的是浏览器只能测试get方法-不能测试post以及其他的方法所以测试后台api写的正确与否-一般使用postman进行测试"><a href="#但是很不幸的是浏览器只能测试get方法-不能测试post以及其他的方法所以测试后台api写的正确与否-一般使用postman进行测试" class="headerlink" title="但是很不幸的是浏览器只能测试get方法,不能测试post以及其他的方法所以测试后台api写的正确与否,一般使用postman进行测试"></a>但是很不幸的是浏览器只能测试get方法,不能测试post以及其他的方法所以测试后台api写的正确与否,一般使用postman进行测试</h5><h5 id="postman下载地址-nbsp-nbsp-postman下载地址"><a href="#postman下载地址-nbsp-nbsp-postman下载地址" class="headerlink" title="postman下载地址 &nbsp;&nbsp;[postman下载地址]"></a>postman下载地址 &nbsp;&nbsp;<a href="https://www.getpostman.com/apps" target="_blank" rel="noopener">[postman下载地址]</a></h5><blockquote><ul><li>在postman中测试</li></ul></blockquote><h5 id="GET-http-localhost-3000-products"><a href="#GET-http-localhost-3000-products" class="headerlink" title="GET http://localhost:3000/products"></a>GET <a href="http://localhost:3000/products" target="_blank" rel="noopener">http://localhost:3000/products</a></h5><p><img src="/images/node/get.png" alt=""></p><h5 id="POST-http-localhost-3000-products"><a href="#POST-http-localhost-3000-products" class="headerlink" title="POST http://localhost:3000/products"></a>POST <a href="http://localhost:3000/products" target="_blank" rel="noopener">http://localhost:3000/products</a></h5><p><img src="/images/node/post.png" alt=""></p><h5 id="带正确id-POST-http-localhost-3000-products-special"><a href="#带正确id-POST-http-localhost-3000-products-special" class="headerlink" title="带正确id POST http://localhost:3000/products/special"></a>带正确id POST <a href="http://localhost:3000/products/special" target="_blank" rel="noopener">http://localhost:3000/products/special</a></h5><p><img src="/images/node/带正确id.png" alt=""></p><h5 id="修改-PATCH-http-localhost-3000-products-special"><a href="#修改-PATCH-http-localhost-3000-products-special" class="headerlink" title="修改 PATCH http://localhost:3000/products/special"></a>修改 PATCH <a href="http://localhost:3000/products/special" target="_blank" rel="noopener">http://localhost:3000/products/special</a></h5><p><img src="/images/node/patch.png" alt=""></p><h5 id="删除-DELETE-http-localhost-3000-products-special"><a href="#删除-DELETE-http-localhost-3000-products-special" class="headerlink" title="删除 DELETE http://localhost:3000/products/special"></a>删除 DELETE <a href="http://localhost:3000/products/special" target="_blank" rel="noopener">http://localhost:3000/products/special</a></h5><p><img src="/images/node/delete.png" alt=""></p><h4 id="3-后端服务器进行热跟新-安装nodemon-npm-install-–save-dev-nodemon（–save-dev安装开发时依赖文件）"><a href="#3-后端服务器进行热跟新-安装nodemon-npm-install-–save-dev-nodemon（–save-dev安装开发时依赖文件）" class="headerlink" title="3.后端服务器进行热跟新,安装nodemon npm install –save-dev nodemon（–save-dev安装开发时依赖文件）"></a>3.后端服务器进行热跟新,安装nodemon npm install –save-dev nodemon（–save-dev安装开发时依赖文件）</h4><h5 id="修改package-json文件修改启动方式"><a href="#修改package-json文件修改启动方式" class="headerlink" title="修改package.json文件修改启动方式"></a>修改package.json文件修改启动方式</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="string">"name"</span>: <span class="string">"rest-shop"</span>,</span><br><span class="line"><span class="string">"version"</span>: <span class="string">"1.0.0"</span>,</span><br><span class="line"><span class="string">"description"</span>: <span class="string">"a describe"</span>,</span><br><span class="line"><span class="string">"main"</span>: <span class="string">"index.js"</span>,</span><br><span class="line"><span class="string">"scripts"</span>: &#123;</span><br><span class="line">    <span class="string">"test"</span>: <span class="string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span>,</span><br><span class="line">    <span class="comment">// 增加这一句启动方式就可以了</span></span><br><span class="line">    <span class="string">"start"</span>: <span class="string">"nodemon server.js"</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">"author"</span>: <span class="string">"daniel-lij"</span>,</span><br><span class="line"><span class="string">"license"</span>: <span class="string">"MIT"</span>,</span><br><span class="line"><span class="string">"dependencies"</span>: &#123;</span><br><span class="line">    <span class="string">"express"</span>: <span class="string">"^4.16.3"</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">"devDependencies"</span>: &#123;</span><br><span class="line">    <span class="string">"nodemon"</span>: <span class="string">"^1.18.3"</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="在cmd中运行npm-start后修改代码会从新启动服务"><a href="#在cmd中运行npm-start后修改代码会从新启动服务" class="headerlink" title="在cmd中运行npm start后修改代码会从新启动服务"></a>在cmd中运行npm start后修改代码会从新启动服务</h5>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;文中代码github地址-nbsp-nbsp-文中代码github地址&quot;&gt;&lt;a href=&quot;#文中代码github地址-nbsp-nbsp-文中代码github地址&quot; class=&quot;headerlink&quot; title=&quot;文中代码github地址 &amp;nbsp;&amp;nb
      
    
    </summary>
    
      <category term="javascript" scheme="http://yoursite.com/categories/javascript/"/>
    
      <category term="node.js" scheme="http://yoursite.com/categories/javascript/node-js/"/>
    
    
      <category term="node" scheme="http://yoursite.com/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>一些自己常用的网站</title>
    <link href="http://yoursite.com/2018/04/19/%E4%B8%80%E4%BA%9B%E8%87%AA%E5%B7%B1%E5%B8%B8%E7%94%A8%E7%9A%84%E7%BD%91%E7%AB%99/"/>
    <id>http://yoursite.com/2018/04/19/一些自己常用的网站/</id>
    <published>2018-04-19T02:11:16.000Z</published>
    <updated>2019-05-13T01:58:56.326Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一些自己常用的网站"><a href="#一些自己常用的网站" class="headerlink" title="一些自己常用的网站"></a>一些自己常用的网站</h2><h4 id="公司工作常用"><a href="#公司工作常用" class="headerlink" title="公司工作常用"></a>公司工作常用</h4><blockquote><ul><li>腾讯企业邮箱 &nbsp;&nbsp;<a href="https://exmail.qq.com/cgi-bin/loginpage?s=session_timeout&amp;from=&amp;r=cdcbb0879d0f165ddcb34f1954bbee84" target="_blank" rel="noopener">[腾讯企业邮箱地址]</a></li><li>彩程设计 &nbsp;&nbsp;<a href="https://tower.im/users/sign_in" target="_blank" rel="noopener">[彩程设计地址]</a></li><li>Coding &nbsp;&nbsp; <a href="https://coding.net/login" target="_blank" rel="noopener">[Coding地址]</a></li><li>Mantis &nbsp;&nbsp; <a href="http://www.yoteam.net:81/login_page.php" target="_blank" rel="noopener">[mantis地址]</a> <!-- > * 服务地址 &nbsp;&nbsp; [[服务地址]](http://39.106.110.130:1014/) --></li><li>ArcGIS Server 管理器 &nbsp;&nbsp; <a href="http://192.168.2.9:6080/arcgis/manager/index.html#f=System" target="_blank" rel="noopener">[ArcGIS Server 管理器地址]</a></li><li>MDN WEB &nbsp;&nbsp; <a href="https://developer.mozilla.org/zh-CN/" target="_blank" rel="noopener">[MDN WEB地址]</a> </li><li>google图片 &nbsp;&nbsp; <a href="https://images.google.com/" target="_blank" rel="noopener">[google图片地址]</a></li><li>印象笔记 &nbsp;&nbsp; <a href="https://app.yinxiang.com/Login.action?targetUrl=%2FHome.action#n=19d767f0-19f2-411c-aada-9e9a1555a5dd&amp;s=s6&amp;b=c54eee78-ac3e-47af-ad8e-eb061a956c59&amp;ses=4&amp;sh=1&amp;sds=5&amp;" target="_blank" rel="noopener">[印象笔记地址]</a></li><li>vue官网 &nbsp;&nbsp; <a href="https://cn.vuejs.org/" target="_blank" rel="noopener">[vue地址]</a></li><li>vue测试 &nbsp;&nbsp; <a href="http://jsfiddle.net/chrisvfritz/50wL7mdz/" target="_blank" rel="noopener">[vue测试地址]</a></li><li>css3参考手册 &nbsp;&nbsp; <a href="http://css.doyoe.com/" target="_blank" rel="noopener">[css3参考手册地址]</a></li><li>htmltojade &nbsp;&nbsp; <a href="http://www.html2jade.org/" target="_blank" rel="noopener">[htmltojade地址]</a></li><li>谷歌的devtools文档中文 &nbsp;&nbsp; <a href="http://www.css88.com/doc/chrome-devtools/" target="_blank" rel="noopener">[谷歌的devtools文档中文地址]</a></li><li>node版本下载地址 &nbsp;&nbsp; <a href="https://nodejs.org/zh-cn/download/releases/" target="_blank" rel="noopener">[node版本下载地址]</a></li><li>流程图设计 &nbsp;&nbsp; <a href="https://www.draw.io/" target="_blank" rel="noopener">[流程图设计]</a></li></ul></blockquote><h4 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h4><blockquote><ul><li>Github上最热门的项目 &nbsp;&nbsp;<a href="https://github.com/trending" target="_blank" rel="noopener">[Github趋势地址]</a></li><li>HelloGitHub &nbsp;&nbsp;<a href="https://github.com/521xueweihan/HelloGitHub" target="_blank" rel="noopener">[HelloGitHub]</a></li><li>现代Javascript教程 &nbsp;&nbsp;<a href="https://javascript.info/" target="_blank" rel="noopener">[现代Javascript教程地址]</a></li><li>ECharts &nbsp;&nbsp;<a href="https://github.com/ecomfe/echarts" target="_blank" rel="noopener">[ECharts地址]</a></li><li>开发人员路线图 &nbsp;&nbsp; <a href="https://github.com/kamranahmedse/developer-roadmap" target="_blank" rel="noopener">[开发人员路线图地址]</a></li><li>所有程序开发工具集合 &nbsp;&nbsp; <a href="https://github.com/sindresorhus/awesome#gaming" target="_blank" rel="noopener">[awesome地址]</a></li><li>中国独立开发者项目列表 &nbsp;&nbsp; <a href="https://github.com/1c7/chinese-independent-developer" target="_blank" rel="noopener">[中国独立开发者项目列表]</a></li><li>技术面试基础 &nbsp;&nbsp; <a href="https://github.com/CyC2018/Interview-Notebook" target="_blank" rel="noopener">[技术面试基础]</a></li><li>基于bootStrap的tablerUI &nbsp;&nbsp; <a href="https://tabler.github.io/tabler/" target="_blank" rel="noopener">[tablerUI地址]</a></li><li>30秒的javaScript代码 &nbsp;&nbsp; <a href="https://30secondsofcode.org/" target="_blank" rel="noopener">[30秒的javaScript代码]</a></li><li>vue的富文本编辑器 &nbsp;&nbsp; <a href="https://github.com/heyscrumpy/tiptap" target="_blank" rel="noopener">[vue的富文本编辑器]</a></li><li>JavaScript开发者应懂的33个概念 &nbsp;&nbsp; <a href="https://github.com/stephentian/33-js-concepts" target="_blank" rel="noopener">[JavaScript开发者应懂的33个概念]</a></li></ul></blockquote><h4 id="Ember"><a href="#Ember" class="headerlink" title="Ember"></a>Ember</h4><blockquote><ul><li>EmberTruthHelpers &nbsp;&nbsp;<a href="https://github.com/jmurphyau/ember-truth-helpers" target="_blank" rel="noopener">[Ember Truth Helpers]</a></li></ul></blockquote><h4 id="系统下载网站"><a href="#系统下载网站" class="headerlink" title="系统下载网站"></a>系统下载网站</h4><blockquote><ul><li>Linux下载 &nbsp;&nbsp;<a href="https://www.linux.org/pages/download/" target="_blank" rel="noopener">[Linux下载地址1]</a>&nbsp;&nbsp;&nbsp;<a href="https://distrowatch.com/" target="_blank" rel="noopener">[Linux下载地址2]</a></li><li>Windows下载 &nbsp;&nbsp;<a href="https://msdn.itellyou.cn/" target="_blank" rel="noopener">[Windows下载地址]</a></li><li>Macos下载 &nbsp;&nbsp; <a href="https://support.apple.com/en_US/downloads/macos" target="_blank" rel="noopener">[Macos下载地址]</a></li><li>Unix下载 &nbsp;&nbsp; <a href="http://www.unixdownload.net/" target="_blank" rel="noopener">[Unix下载地址]</a></li></ul></blockquote><h4 id="Youtube视屏下载"><a href="#Youtube视屏下载" class="headerlink" title="Youtube视屏下载"></a>Youtube视屏下载</h4><blockquote><ul><li>Findyoutube &nbsp;&nbsp; <a href="https://www.findyoutube.net/" target="_blank" rel="noopener">[Findyoutube地址]</a></li><li>Savefrom &nbsp;&nbsp; <a href="https://en.savefrom.net/" target="_blank" rel="noopener">[Savefrom地址]</a></li></ul></blockquote><h4 id="工具网站"><a href="#工具网站" class="headerlink" title="工具网站"></a>工具网站</h4><blockquote><ul><li>颜色转换网站 &nbsp;&nbsp;<a href="http://www.sioe.cn/yingyong/yanse-rgb-16/" target="_blank" rel="noopener">[颜色转换网站地址1]</a>&nbsp;&nbsp;&nbsp;<a href="http://gavin-yyc.github.io/colorconvert/" target="_blank" rel="noopener">[颜色转换网站地址2]</a></li><li>检测CSS兼容性网站 &nbsp;&nbsp;<a href="https://caniuse.com/" target="_blank" rel="noopener">[检测CSS兼容性网站]</a></li><li>数据可视化工具集合 &nbsp;&nbsp;<a href="https://www.zhihu.com/question/19929609/answer/133825589" target="_blank" rel="noopener">[数据可视化工具集合]</a></li><li>pugToHtml &nbsp;&nbsp;<a href="https://html2jade.org/" target="_blank" rel="noopener">[pugToHtml]</a></li><li>在线工具 &nbsp;&nbsp; <a href="http://tool.oschina.net/" target="_blank" rel="noopener">[在线工具]</a></li><li>git可视化工具 &nbsp;&nbsp; <a href="https://pcottle.github.com/learnGitBranching/" target="_blank" rel="noopener">[git可视化工具]</a></li><li>js测试网站 &nbsp;&nbsp; <a href="http://jsbin.com" target="_blank" rel="noopener">[js测试网站]</a></li></ul></blockquote><h4 id="图片类网站"><a href="#图片类网站" class="headerlink" title="图片类网站"></a>图片类网站</h4><blockquote><ul><li>FIND ICONS &nbsp;&nbsp;<a href="https://findicons.com/" target="_blank" rel="noopener">[免费图表和矢量文件]</a></li><li>ICONFONT &nbsp;&nbsp;<a href="https://www.iconfont.cn/" target="_blank" rel="noopener">[阿里巴巴矢量图库]</a></li><li>ICONS8 &nbsp;&nbsp;<a href="https://icons8.com" target="_blank" rel="noopener">[谷歌图片库]</a></li></ul></blockquote><h4 id="新闻类网站"><a href="#新闻类网站" class="headerlink" title="新闻类网站"></a>新闻类网站</h4><blockquote><ul><li>纽约时报官网 &nbsp;&nbsp;<a href="https://cn.nytimes.com/" target="_blank" rel="noopener">[纽约时报官网地址]</a></li><li>路透社中文网 &nbsp;&nbsp; <a href="https://cn.reuters.com/" target="_blank" rel="noopener">[路透社中文网地址]</a></li><li>BBC中文网 &nbsp;&nbsp; <a href="http://www.bbc.com/zhongwen/simp" target="_blank" rel="noopener">[BBC中文网地址]</a></li></ul></blockquote><h4 id="其他网站"><a href="#其他网站" class="headerlink" title="其他网站"></a>其他网站</h4><blockquote><ul><li>留声十年-绝版青春 &nbsp;&nbsp;<a href="http://www.kugou.com/album/557656.html" target="_blank" rel="noopener">[留声十年-绝版青春]</a></li><li>人体3D解剖 &nbsp;&nbsp;<a href="https://human.biodigital.com/signin.html" target="_blank" rel="noopener">[人体3D解剖]</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一些自己常用的网站&quot;&gt;&lt;a href=&quot;#一些自己常用的网站&quot; class=&quot;headerlink&quot; title=&quot;一些自己常用的网站&quot;&gt;&lt;/a&gt;一些自己常用的网站&lt;/h2&gt;&lt;h4 id=&quot;公司工作常用&quot;&gt;&lt;a href=&quot;#公司工作常用&quot; class=&quot;head
      
    
    </summary>
    
      <category term="个人" scheme="http://yoursite.com/categories/%E4%B8%AA%E4%BA%BA/"/>
    
      <category term="网站集合" scheme="http://yoursite.com/categories/%E4%B8%AA%E4%BA%BA/%E7%BD%91%E7%AB%99%E9%9B%86%E5%90%88/"/>
    
    
      <category term="个人" scheme="http://yoursite.com/tags/%E4%B8%AA%E4%BA%BA/"/>
    
  </entry>
  
  <entry>
    <title>初识简单的grid</title>
    <link href="http://yoursite.com/2018/04/19/%E5%88%9D%E8%AF%86%E7%AE%80%E5%8D%95%E7%9A%84grid/"/>
    <id>http://yoursite.com/2018/04/19/初识简单的grid/</id>
    <published>2018-04-19T01:11:16.000Z</published>
    <updated>2018-04-24T01:01:18.165Z</updated>
    
    <content type="html"><![CDATA[<h2 id="文中代码测试网站-nbsp-nbsp-文中代码测试网站地址"><a href="#文中代码测试网站-nbsp-nbsp-文中代码测试网站地址" class="headerlink" title="文中代码测试网站 &nbsp;&nbsp;[文中代码测试网站地址]"></a>文中代码测试网站 &nbsp;&nbsp;<a href="https://codepen.io/pen/" target="_blank" rel="noopener">[文中代码测试网站地址]</a></h2><h2 id="grid布局概述"><a href="#grid布局概述" class="headerlink" title="grid布局概述"></a>grid布局概述</h2><h4 id="网格是一组相交的水平线和垂直线，它定义了网格的列和行。我们可以将网格元素放置在与这些行和列相关的位置上"><a href="#网格是一组相交的水平线和垂直线，它定义了网格的列和行。我们可以将网格元素放置在与这些行和列相关的位置上" class="headerlink" title="网格是一组相交的水平线和垂直线，它定义了网格的列和行。我们可以将网格元素放置在与这些行和列相关的位置上"></a>网格是一组相交的水平线和垂直线，它定义了网格的列和行。我们可以将网格元素放置在与这些行和列相关的位置上</h4><blockquote><ul><li>固定的位置和弹性的轨道的大小:你可以使用固定的轨道尺寸创建网格，比如使用像素单位。你也可以使用比如百分比或者专门为此目的创建的新单位 fr来创建有弹性尺寸的网格</li><li>元素位置:你可以使用行号、行名或者标定一个网格区域来精确定位元素。网格同时还使用一种算法来控制未给出明确网格位置的元素</li><li>创建额外的轨道来包含元素:可以使用网格布局定义一个显式网格，但是根据规范它会处理你加在网格外面的内容，当必要时它会自动增加行和列，它会尽可能多的容纳所有的列</li><li>对齐控制:网格包含对齐特点，以便我们可以控制一旦放置到网格区域中的物体对齐，以及整个网格如何对齐。</li><li>控制重叠内容:多个元素可以放置在网格单元格中，或者区域可以部分地彼此重叠。然后可以CSS中的z-index属性来控制重叠区域显示的优先级</li></ul></blockquote><h2 id="简单的grid布局"><a href="#简单的grid布局" class="headerlink" title="简单的grid布局"></a>简单的grid布局</h2><h4 id="我们通过在元素上声明-display：grid-或-display：inline-grid-来创建一个网格容器。一旦我们这样做，这个元素的所有直系子元素将成为网格元素"><a href="#我们通过在元素上声明-display：grid-或-display：inline-grid-来创建一个网格容器。一旦我们这样做，这个元素的所有直系子元素将成为网格元素" class="headerlink" title="我们通过在元素上声明  display：grid  或   display：inline-grid  来创建一个网格容器。一旦我们这样做，这个元素的所有直系子元素将成为网格元素"></a>我们通过在元素上声明 <strong><em> display：grid </em></strong> 或 <strong><em>  display：inline-grid </em></strong> 来创建一个网格容器。一旦我们这样做，这个元素的所有直系子元素将成为网格元素</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrapper"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span>&gt;</span>One<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span>&gt;</span>Two<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span>&gt;</span>Three<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span>&gt;</span>Four<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span>&gt;</span>Five<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* CSS */</span></span><br><span class="line">* &#123;<span class="attribute">box-sizing</span>: border-box;&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.wrapper</span> &#123;</span><br><span class="line">    <span class="comment">/* 重点是这一句代码 */</span></span><br><span class="line">    <span class="attribute">display</span>: grid;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.wrapper</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#f76707</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff4e6</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.wrapper</span> &gt; <span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#ffa94d</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ffd8a8</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">1em</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#d9480f</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="网格轨道"><a href="#网格轨道" class="headerlink" title="网格轨道"></a>网格轨道</h2><h4 id="在grid中我们通过-grid-template-columns-和-grid-template-rows-属性来定义网格中的行和列"><a href="#在grid中我们通过-grid-template-columns-和-grid-template-rows-属性来定义网格中的行和列" class="headerlink" title="在grid中我们通过 grid-template-columns 和 grid-template-rows 属性来定义网格中的行和列\"></a>在grid中我们通过 grid-template-columns 和 grid-template-rows 属性来定义网格中的行和列\</h4><h4 id="先固定宽度"><a href="#先固定宽度" class="headerlink" title="先固定宽度"></a>先固定宽度</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrapper"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span>&gt;</span>One<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span>&gt;</span>Two<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span>&gt;</span>Three<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span>&gt;</span>Four<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span>&gt;</span>Five<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* CSS */</span></span><br><span class="line">* &#123;<span class="attribute">box-sizing</span>: border-box;&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.wrapper</span> &#123;</span><br><span class="line">    <span class="comment">/* 重点是这一句代码 */</span></span><br><span class="line">    <span class="attribute">display</span>: grid;</span><br><span class="line">    <span class="comment">/* 固定宽度可以写多个属性值,你可以写一个属性值也可以像我一样写4个,总之写多少个一行中显示多少个 */</span> </span><br><span class="line">    <span class="attribute">grid-template-columns</span>: <span class="number">200px</span> <span class="number">200px</span> <span class="number">200px</span> <span class="number">200px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.wrapper</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#f76707</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff4e6</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.wrapper</span> &gt; <span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#ffa94d</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ffd8a8</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">1em</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#d9480f</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="网格还引入了一个另外的长度单位来帮助我们创建灵活的网格轨道。"><a href="#网格还引入了一个另外的长度单位来帮助我们创建灵活的网格轨道。" class="headerlink" title="网格还引入了一个另外的长度单位来帮助我们创建灵活的网格轨道。"></a>网格还引入了一个另外的长度单位来帮助我们创建灵活的网格轨道。</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrapper"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span>&gt;</span>一<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>二<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>三<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>四<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>五<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>六<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>七<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>八<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>九<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>十<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>十一<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>十二<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>十三<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>十四<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>十五<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>十六<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>一<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>二<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>三<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>四<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>五<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>六<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>七<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>八<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>九<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>十<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>十一<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>十二<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>十三<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>十四<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>十五<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>十六<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* CSS */</span></span><br><span class="line">* &#123;<span class="attribute">box-sizing</span>: border-box;&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.wrapper</span> &#123;</span><br><span class="line">    <span class="comment">/* 重点是这一句代码 */</span></span><br><span class="line">    <span class="attribute">display</span>: grid;</span><br><span class="line">    <span class="comment">/* 使用fr也可以写多个属性值,你可以写一个属性值也可以像我一样写4个,总之写多少个一行中显示多少个,而且是等比例进行均分 */</span> </span><br><span class="line">    <span class="attribute">grid-template-columns</span>: <span class="number">1</span>fr <span class="number">2</span>fr <span class="number">1</span>fr <span class="number">1</span>fr;</span><br><span class="line">    &lt;!-- 有着多轨道的大型网格可使用 repeat() 标记来重复部分或整个轨道列表,我写的意思是一行均分4个--&gt;</span><br><span class="line">    <span class="selector-tag">grid-template-columns</span>: <span class="selector-tag">repeat</span>(4, 1<span class="selector-tag">fr</span>);</span><br><span class="line">    &lt;!<span class="selector-tag">--</span> 有着多轨道的大型网格可使用 <span class="selector-tag">repeat</span>() 网格将有共计10个轨道，为1个1<span class="selector-tag">fr</span>轨道后面跟着1个2<span class="selector-tag">fr</span>轨道，该模式重复5次<span class="selector-tag">--</span>&gt;</span><br><span class="line">    <span class="selector-tag">grid-template-columns</span>: <span class="selector-tag">repeat</span>(4, 1<span class="selector-tag">fr</span>, 2<span class="selector-tag">fr</span>);</span><br><span class="line">    &lt;!<span class="selector-tag">--</span> 网格中每一行的高度 第一行高度25% 第二行高度100<span class="selector-tag">px</span> 第三行高度200<span class="selector-tag">px</span> 其他是<span class="selector-tag">auto--</span>&gt;</span><br><span class="line">    <span class="selector-tag">grid-template-rows</span>: 25% 100<span class="selector-tag">px</span> 200<span class="selector-tag">px</span> <span class="selector-tag">auto</span>;</span><br><span class="line">    &lt;!<span class="selector-tag">--</span> <span class="selector-tag">grid-auto-rows</span>的属性值是能够影响<span class="selector-tag">grid-template-rows</span>中的<span class="selector-tag">auto</span>的<span class="selector-tag">--</span>&gt;</span><br><span class="line">    <span class="selector-tag">grid-auto-rows</span>: 200<span class="selector-tag">px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.wrapper</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#f76707</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff4e6</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.wrapper</span> &gt; <span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#ffa94d</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ffd8a8</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">1em</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#d9480f</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="网格高度的最大最小值"><a href="#网格高度的最大最小值" class="headerlink" title="网格高度的最大最小值"></a>网格高度的最大最小值</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrapper"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>One<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>Two</span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>I have some more content in.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>This makes me taller than 100 pixels.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span>&gt;</span>Three<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span>&gt;</span>Four<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span>&gt;</span>Five<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* CSS */</span></span><br><span class="line">* &#123;<span class="attribute">box-sizing</span>: border-box;&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.wrapper</span> &#123;</span><br><span class="line">    <span class="comment">/* 重点是这一句代码 */</span></span><br><span class="line">    <span class="attribute">display</span>: grid;</span><br><span class="line">    <span class="attribute">grid-template-columns</span>: <span class="built_in">repeat</span>(4, 1fr, 2fr);</span><br><span class="line">    <span class="attribute">grid-auto-rows</span>: <span class="built_in">minmax</span>(200px,auto);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.wrapper</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#f76707</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff4e6</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.wrapper</span> &gt; <span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#ffa94d</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ffd8a8</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">1em</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#d9480f</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="当我们定义网格时，我们定义的是网格轨道，而不是网格线。Grid-会为我们创建编号的网格线来让我们来定位每一个网格元素-三列两行的网格中，就拥有四条纵向的网格线-三条横向的网格线"><a href="#当我们定义网格时，我们定义的是网格轨道，而不是网格线。Grid-会为我们创建编号的网格线来让我们来定位每一个网格元素-三列两行的网格中，就拥有四条纵向的网格线-三条横向的网格线" class="headerlink" title="当我们定义网格时，我们定义的是网格轨道，而不是网格线。Grid 会为我们创建编号的网格线来让我们来定位每一个网格元素,三列两行的网格中，就拥有四条纵向的网格线,三条横向的网格线"></a>当我们定义网格时，我们定义的是网格轨道，而不是网格线。Grid 会为我们创建编号的网格线来让我们来定位每一个网格元素,三列两行的网格中，就拥有四条纵向的网格线,三条横向的网格线</h4><p><img src="/images/文章图片/flex-start.png" alt=""></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrapper"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box1"</span>&gt;</span>One<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box2"</span>&gt;</span>Two<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box3"</span>&gt;</span>Three<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box4"</span>&gt;</span>Four<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box5"</span>&gt;</span>Five<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* CSS */</span></span><br><span class="line">* &#123;<span class="attribute">box-sizing</span>: border-box;&#125;</span><br><span class="line"><span class="selector-class">.wrapper</span>&#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#f76707</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff4e6</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.wrapper</span> <span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#ffa94d</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ffd8a8</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">1em</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#d9480f</span>;</span><br><span class="line">&#125;</span><br><span class="line">&lt;!<span class="selector-tag">--</span> 以下代码需要多次尝试 反复试验才能很好的运用 <span class="selector-tag">--</span>&gt;</span><br><span class="line"><span class="selector-class">.wrapper</span> &#123; </span><br><span class="line">    <span class="attribute">display</span>: grid; </span><br><span class="line">    <span class="attribute">grid-template-columns</span>: <span class="built_in">repeat</span>(3, 1fr); </span><br><span class="line">    <span class="attribute">grid-auto-rows</span>: <span class="number">100px</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-class">.box1</span> &#123; </span><br><span class="line">    <span class="attribute">grid-column-start</span>: <span class="number">1</span>; </span><br><span class="line">    <span class="attribute">grid-column-end</span>: <span class="number">3</span>; </span><br><span class="line">    <span class="attribute">grid-row-start</span>: <span class="number">1</span>; </span><br><span class="line">    <span class="attribute">grid-row-end</span>: <span class="number">3</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="selector-class">.box2</span> &#123; </span><br><span class="line">    <span class="attribute">grid-column-start</span>: <span class="number">3</span>; </span><br><span class="line">    <span class="attribute">grid-column-end</span>: <span class="number">4</span>;</span><br><span class="line">    <span class="attribute">grid-row-start</span>: <span class="number">1</span>; </span><br><span class="line">    <span class="attribute">grid-row-end</span>: <span class="number">3</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="网格间距-在两个网格单元之间的-网格横向间距-或-网格纵向间距-可使用-grid-column-gap-和-grid-row-gap-属性来创建，或者直接使用两个合并的缩写形式-grid-gap"><a href="#网格间距-在两个网格单元之间的-网格横向间距-或-网格纵向间距-可使用-grid-column-gap-和-grid-row-gap-属性来创建，或者直接使用两个合并的缩写形式-grid-gap" class="headerlink" title="网格间距:在两个网格单元之间的 网格横向间距  或 网格纵向间距  可使用 grid-column-gap 和 grid-row-gap 属性来创建，或者直接使用两个合并的缩写形式 grid-gap"></a>网格间距:在两个网格单元之间的 网格横向间距  或 网格纵向间距  可使用 grid-column-gap 和 grid-row-gap 属性来创建，或者直接使用两个合并的缩写形式 grid-gap</h4><p><img src="/images/文章图片/grid-gap.png" alt=""></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrapper"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>One<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>Two<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>Three<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>Four<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>Five<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* CSS */</span></span><br><span class="line">* &#123;<span class="attribute">box-sizing</span>: border-box;&#125;</span><br><span class="line"><span class="selector-class">.wrapper</span>&#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#f76707</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff4e6</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.wrapper</span> <span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#ffa94d</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ffd8a8</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">1em</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#d9480f</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.wrapper</span> &#123; </span><br><span class="line">    <span class="attribute">display</span>: grid;</span><br><span class="line">    <span class="attribute">grid-template-columns</span>: <span class="built_in">repeat</span>(3, 1fr);</span><br><span class="line">    <span class="attribute">grid-column-gap</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">grid-row-gap</span>: <span class="number">1em</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="嵌套网格-一个网格元素可以也成为一个网格容器-当这些元素不是网格容器的直接子级元素时，它们不会参与到网格布局中，并显示为正常的文档流"><a href="#嵌套网格-一个网格元素可以也成为一个网格容器-当这些元素不是网格容器的直接子级元素时，它们不会参与到网格布局中，并显示为正常的文档流" class="headerlink" title="嵌套网格: 一个网格元素可以也成为一个网格容器,当这些元素不是网格容器的直接子级元素时，它们不会参与到网格布局中，并显示为正常的文档流"></a>嵌套网格: 一个网格元素可以也成为一个网格容器,当这些元素不是网格容器的直接子级元素时，它们不会参与到网格布局中，并显示为正常的文档流</h4><p><img src="/images/文章图片/flex-z-index.png" alt=""></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrapper"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box box1"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"nested"</span>&gt;</span>a<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"nested"</span>&gt;</span>b<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"nested"</span>&gt;</span>c<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box box2"</span>&gt;</span>Two<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box box3"</span>&gt;</span>Three<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box box4"</span>&gt;</span>Four<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box box5"</span>&gt;</span>Five<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* CSS */</span></span><br><span class="line">* &#123;<span class="attribute">box-sizing</span>: border-box;&#125;</span><br><span class="line"><span class="selector-class">.wrapper</span>&#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#f76707</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff4e6</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.wrapper</span> <span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="number">#ffa94d</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ffd8a8</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">1em</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#d9480f</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.wrapper</span> &#123;</span><br><span class="line">   <span class="attribute">display</span>: grid;</span><br><span class="line">   <span class="attribute">grid-template-columns</span>: <span class="built_in">repeat</span>(3, 1fr);</span><br><span class="line">   <span class="attribute">grid-auto-rows</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.box1</span> &#123;</span><br><span class="line">   <span class="attribute">grid-column-start</span>: <span class="number">1</span>;</span><br><span class="line">   <span class="attribute">grid-column-end</span>: <span class="number">4</span>;</span><br><span class="line">   <span class="attribute">grid-row-start</span>: <span class="number">1</span>;</span><br><span class="line">   <span class="attribute">grid-row-end</span>: <span class="number">3</span>;</span><br><span class="line">   <span class="attribute">display</span>: grid;</span><br><span class="line">   <span class="attribute">grid-template-columns</span>: <span class="built_in">repeat</span>(3, 1fr);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="使用z-index控制层级-多个网格项目可以占用同一个网格单位。如果我们回到之前根据网格线编号放置网格项目的话，我们可以更改此项来使两个网格项目重叠。"><a href="#使用z-index控制层级-多个网格项目可以占用同一个网格单位。如果我们回到之前根据网格线编号放置网格项目的话，我们可以更改此项来使两个网格项目重叠。" class="headerlink" title="使用z-index控制层级:多个网格项目可以占用同一个网格单位。如果我们回到之前根据网格线编号放置网格项目的话，我们可以更改此项来使两个网格项目重叠。"></a>使用z-index控制层级:多个网格项目可以占用同一个网格单位。如果我们回到之前根据网格线编号放置网格项目的话，我们可以更改此项来使两个网格项目重叠。</h4><p><img src="/images/文章图片/flex-z-index.png" alt=""></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrapper"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box box1"</span>&gt;</span>One<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box box2"</span>&gt;</span>Two<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box box3"</span>&gt;</span>Three<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box box4"</span>&gt;</span>Four<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box box5"</span>&gt;</span>Five<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>`</code>css<br>/<em> CSS </em>/</p><ul><li>{box-sizing: border-box;}<br>.wrapper{<br>  border: 2px solid #f76707;<br>  border-radius: 5px;<br>  background-color: #fff4e6;<br>}<br>.wrapper div{<br>  border: 2px solid #ffa94d;<br>  border-radius: 5px;<br>  background-color: #ffd8a8;<br>  padding: 1em;<br>  color: #d9480f;<br>}</li></ul><p>.wrapper {<br>   display: grid;<br>   grid-template-columns: repeat(3, 1fr);<br>   grid-auto-rows: 100px;<br>}<br>.box1 {<br>   grid-column-start: 1;<br>   grid-column-end: 4;<br>   grid-row-start: 1;<br>   grid-row-end: 3;<br>   z-index: 2;<br>}<br>.box2 {<br>   grid-column-start: 1;<br>   grid-row-start: 2;<br>   grid-row-end: 4;<br>   z-index: 1;<br>}</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;文中代码测试网站-nbsp-nbsp-文中代码测试网站地址&quot;&gt;&lt;a href=&quot;#文中代码测试网站-nbsp-nbsp-文中代码测试网站地址&quot; class=&quot;headerlink&quot; title=&quot;文中代码测试网站 &amp;nbsp;&amp;nbsp;[文中代码测试网站地址]&quot;
      
    
    </summary>
    
      <category term="CSS" scheme="http://yoursite.com/categories/CSS/"/>
    
      <category term="grid布局" scheme="http://yoursite.com/categories/CSS/grid%E5%B8%83%E5%B1%80/"/>
    
    
      <category term="CSS" scheme="http://yoursite.com/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>策略模式-动画</title>
    <link href="http://yoursite.com/2018/03/30/%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F-%E5%8A%A8%E7%94%BB/"/>
    <id>http://yoursite.com/2018/03/30/策略模式-动画/</id>
    <published>2018-03-30T07:25:22.000Z</published>
    <updated>2018-03-30T07:26:30.620Z</updated>
    
    <content type="html"><![CDATA[<h3 id="策略模式动画"><a href="#策略模式动画" class="headerlink" title="策略模式动画"></a>策略模式动画</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"ie=edge"</span>&gt;</span><br><span class="line">    &lt;title&gt;策略模式-动画&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div style=<span class="string">"position: absolute; background:blue"</span> id=<span class="string">"div"</span>&gt; 我是div&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;script&gt;</span></span><br><span class="line"><span class="regexp">        var tween = &#123;</span></span><br><span class="line"><span class="regexp">            linear: function( t, b, c, d )&#123;</span></span><br><span class="line"><span class="regexp">                return c*t/</span>d + b</span><br><span class="line">            &#125;,</span><br><span class="line">            easeIn: <span class="function"><span class="keyword">function</span>(<span class="params"> t, b, c, d </span>)</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> c*(t/=d)*t + b</span><br><span class="line">            &#125;,</span><br><span class="line">            strongEaseIn: <span class="function"><span class="keyword">function</span>(<span class="params"> t, b, c, d </span>)</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> c*(t/=d)*t*t*t*t + b</span><br><span class="line">            &#125;,</span><br><span class="line">            strongEaseOut: <span class="function"><span class="keyword">function</span>(<span class="params"> t, b, c, d</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> c*( ( t = t/d <span class="number">-1</span> )*t*t*t*t + <span class="number">1</span>) + b</span><br><span class="line">            &#125;,</span><br><span class="line">            sineaseIn: <span class="function"><span class="keyword">function</span>(<span class="params"> t, b, c, d </span>)</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> c * (t/=d)*t*t +b</span><br><span class="line">            &#125;,</span><br><span class="line">            sineaseOut: <span class="function"><span class="keyword">function</span>(<span class="params"> t, b, c, d </span>)</span>&#123;</span><br><span class="line">                <span class="keyword">return</span>  c * (( t= t/d - <span class="number">1</span> ) * t * t + <span class="number">1</span>) + b</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> Animate = <span class="function"><span class="keyword">function</span>(<span class="params">dom</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.dom = dom</span><br><span class="line">            <span class="keyword">this</span>.startTime = <span class="number">0</span></span><br><span class="line">            <span class="keyword">this</span>.startPos = <span class="number">0</span></span><br><span class="line">            <span class="keyword">this</span>.endPos = <span class="number">0</span> </span><br><span class="line">            <span class="keyword">this</span>.propertyName = <span class="literal">null</span></span><br><span class="line">            <span class="keyword">this</span>.easing = <span class="literal">null</span></span><br><span class="line">            <span class="keyword">this</span>.duration = <span class="literal">null</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Animate.prototype.start = <span class="function"><span class="keyword">function</span>(<span class="params"> propertyName, endPos, duration, easing</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.startTime = +<span class="keyword">new</span> <span class="built_in">Date</span></span><br><span class="line">            <span class="keyword">this</span>.startPos = <span class="keyword">this</span>.dom.getBoundingClientRect()[propertyName]</span><br><span class="line">            <span class="keyword">this</span>.propertyName = propertyName</span><br><span class="line">            <span class="keyword">this</span>.endPos = endPos</span><br><span class="line">            <span class="keyword">this</span>.duration = duration</span><br><span class="line">            <span class="keyword">this</span>.easing = tween[ easing ]</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> self = <span class="keyword">this</span></span><br><span class="line">            <span class="keyword">var</span> timeId = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(self.step() === <span class="literal">false</span>)&#123;</span><br><span class="line">                    clearInterval( timeId )</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, <span class="number">19</span>)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Animate.prototype.step = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> t = +<span class="keyword">new</span> <span class="built_in">Date</span>;</span><br><span class="line">            <span class="keyword">if</span>( t &gt;= <span class="keyword">this</span>.startTime + <span class="keyword">this</span>.duration )&#123;</span><br><span class="line">                <span class="keyword">this</span>.update( <span class="keyword">this</span>.endPos )</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">var</span> pos = <span class="keyword">this</span>.easing( t - <span class="keyword">this</span>.startTime, <span class="keyword">this</span>.startPos, <span class="keyword">this</span>.endPos, <span class="keyword">this</span>.startPos, <span class="keyword">this</span>.duration)</span><br><span class="line">            <span class="keyword">this</span>.update(pos)</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Animate.prototype.update = <span class="function"><span class="keyword">function</span>(<span class="params"> pos </span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.dom.style[ <span class="keyword">this</span>.propertyName ] = pos + <span class="string">'px'</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> div = <span class="built_in">document</span>.getElementById(<span class="string">'div'</span>)</span><br><span class="line">        <span class="keyword">var</span> animate = <span class="keyword">new</span> Animate(div)</span><br><span class="line">        animate.start( <span class="string">'left'</span>, <span class="number">500</span>, <span class="number">1000</span>, <span class="string">'easeIn'</span>)</span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;策略模式动画&quot;&gt;&lt;a href=&quot;#策略模式动画&quot; class=&quot;headerlink&quot; title=&quot;策略模式动画&quot;&gt;&lt;/a&gt;策略模式动画&lt;/h3&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class
      
    
    </summary>
    
      <category term="JavaScript设计模式" scheme="http://yoursite.com/categories/JavaScript%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
      <category term="策略模式动画" scheme="http://yoursite.com/categories/JavaScript%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F%E5%8A%A8%E7%94%BB/"/>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>策略模式-为文本框添加多种验证</title>
    <link href="http://yoursite.com/2018/03/30/%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F-%E4%B8%BA%E6%96%87%E6%9C%AC%E6%A1%86%E6%B7%BB%E5%8A%A0%E5%A4%9A%E7%A7%8D%E9%AA%8C%E8%AF%81/"/>
    <id>http://yoursite.com/2018/03/30/策略模式-为文本框添加多种验证/</id>
    <published>2018-03-30T07:23:43.000Z</published>
    <updated>2018-03-30T07:26:02.787Z</updated>
    
    <content type="html"><![CDATA[<h3 id="策略模式为文本框添加多种验证"><a href="#策略模式为文本框添加多种验证" class="headerlink" title="策略模式为文本框添加多种验证"></a>策略模式为文本框添加多种验证</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"ie=edge"</span>&gt;</span><br><span class="line">    &lt;title&gt;复杂表单验证&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;form action=<span class="string">""</span> id=<span class="string">"registerForm"</span> mothod=<span class="string">"post"</span>&gt;</span><br><span class="line">        请输入用户名: <span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"userName"</span>/&gt;</span></span></span><br><span class="line">        请输入密码: &lt;input type="text" name="password"/&gt;</span><br><span class="line">        请输入手机号码: &lt;input type="text" name="phoneNumber"/&gt;</span><br><span class="line">        &lt;button&gt;提交&lt;/button&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        var strategies = &#123;</span><br><span class="line">            isNonEmpty: function(value, errorMsg)&#123;</span><br><span class="line">                if(value === '')&#123;</span><br><span class="line">                    return errorMsg</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            minLength: function(value, length, errorMsg)&#123;</span><br><span class="line">                if(value.length &lt; length)&#123;</span><br><span class="line">                    return errorMsg</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            isMobile: function(value , errorMsg)&#123;</span><br><span class="line">                if(!/(1^[3][5][8][0-9]&#123;9&#125;$)/.test(value))&#123;</span><br><span class="line">                    return errorMsg</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        var Varlidator = function()&#123;</span><br><span class="line">            this.cache = [] </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Varlidator.prototype.add = function(dom, rules)&#123;</span><br><span class="line">            var self = this</span><br><span class="line">            for( var i = 0, rule; rule = rules[i++];)&#123;</span><br><span class="line">                (function(rule)&#123;</span><br><span class="line">                    var strategyAry = rule.strategy.split( ':' )</span><br><span class="line">                    var errorMsg = rule.errorMsg</span><br><span class="line">                    self.cache.push(function()&#123;</span><br><span class="line">                        var strategy = strategyAry.shift()</span><br><span class="line">                        strategyAry.unshift( dom.value )</span><br><span class="line">                        strategyAry.push( errorMsg )</span><br><span class="line">                        return strategies[ strategy ].apply( dom, strategyAry )</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;)(rule)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Varlidator.prototype.start = function()&#123;</span><br><span class="line">            for( var i=0, validataFunc; validataFunc = this.cache[ i++ ];)&#123;</span><br><span class="line">                var errorMsg = validataFunc()</span><br><span class="line">                if( errorMsg )&#123;</span><br><span class="line">                    alert(errorMsg)</span><br><span class="line">                    return errorMsg</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        /****************************** 客户端调用代码         ********************************/</span><br><span class="line"></span><br><span class="line">        var registerForm = document.getElementById('registerForm')</span><br><span class="line"></span><br><span class="line">        var validataFunc = function()&#123;</span><br><span class="line">            var varlidator = new Varlidator()</span><br><span class="line">            varlidator.add(registerForm.userName, [&#123;</span><br><span class="line">                strategy : 'isNonEmpty',</span><br><span class="line">                errorMsg : '用户名不能为空'</span><br><span class="line">            &#125;,&#123;</span><br><span class="line">                strategy : 'minLength:10',</span><br><span class="line">                errorMsg : '用户名长度不能少于10位'</span><br><span class="line">            &#125;])</span><br><span class="line">            varlidator.add(registerForm.password,[&#123;</span><br><span class="line">                strategy : 'minLength:6',</span><br><span class="line">                errorMsg : '密码长度不能少于6位'</span><br><span class="line">            &#125;])</span><br><span class="line">            varlidator.add(registerForm.phoneNumber, [&#123;</span><br><span class="line">                strategy : 'isMobile', </span><br><span class="line">                errorMsg : '手机号码格式不正确'</span><br><span class="line">            &#125;])</span><br><span class="line">            var errorMsg = varlidator.start()</span><br><span class="line">            return errorMsg</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        registerForm.onsubmit = function()&#123;</span><br><span class="line">            var errorMsg = validataFunc()</span><br><span class="line">            if(errorMsg)&#123;</span><br><span class="line">                alert(errorMsg)</span><br><span class="line">                return false</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;策略模式为文本框添加多种验证&quot;&gt;&lt;a href=&quot;#策略模式为文本框添加多种验证&quot; class=&quot;headerlink&quot; title=&quot;策略模式为文本框添加多种验证&quot;&gt;&lt;/a&gt;策略模式为文本框添加多种验证&lt;/h3&gt;&lt;figure class=&quot;highlight 
      
    
    </summary>
    
      <category term="JavaScript设计模式" scheme="http://yoursite.com/categories/JavaScript%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
      <category term="策略模式为文本框添加多种验证" scheme="http://yoursite.com/categories/JavaScript%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F%E4%B8%BA%E6%96%87%E6%9C%AC%E6%A1%86%E6%B7%BB%E5%8A%A0%E5%A4%9A%E7%A7%8D%E9%AA%8C%E8%AF%81/"/>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>设计模式-策略模式表单应用</title>
    <link href="http://yoursite.com/2018/03/30/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F%E8%A1%A8%E5%8D%95%E5%BA%94%E7%94%A8/"/>
    <id>http://yoursite.com/2018/03/30/设计模式-策略模式表单应用/</id>
    <published>2018-03-30T07:20:36.000Z</published>
    <updated>2018-03-30T07:22:44.888Z</updated>
    
    <content type="html"><![CDATA[<h3 id="策略模式表单应用"><a href="#策略模式表单应用" class="headerlink" title="策略模式表单应用"></a>策略模式表单应用</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"ie=edge"</span>&gt;</span><br><span class="line">    &lt;title&gt;简单表单验证&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;form action=<span class="string">""</span> id=<span class="string">"registerForm"</span> mothod=<span class="string">"post"</span>&gt;</span><br><span class="line">        请输入用户名: <span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"userName"</span>/&gt;</span></span></span><br><span class="line">        请输入密码: &lt;input type="text" name="password"/&gt;</span><br><span class="line">        请输入手机号码: &lt;input type="text" name="phoneNumber"/&gt;</span><br><span class="line">        &lt;button&gt;提交&lt;/button&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        var strategies = &#123;</span><br><span class="line">            isNonEmpty: function(value, errorMsg)&#123;</span><br><span class="line">                if(value === '')&#123;</span><br><span class="line">                    return errorMsg</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            minLength: function(value, length, errorMsg)&#123;</span><br><span class="line">                if(value.length &lt; length)&#123;</span><br><span class="line">                    return errorMsg</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            isMobile: function(value , errorMsg)&#123;</span><br><span class="line">                if(!/(1^[3][5][8][0-9]&#123;9&#125;$)/.test(value))&#123;</span><br><span class="line">                    return errorMsg</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        var validataFunc = function()&#123;</span><br><span class="line">            var varlidator = new Varlidator()</span><br><span class="line">            varlidator.add(registerForm.userName, 'isNonEmpty', '用户名不能为空')</span><br><span class="line">            varlidator.add( registerForm.userName, 'minLength:10', '用户名不能小于10位')</span><br><span class="line">            varlidator.add(registerForm.password, 'minLength:6', '密码长度不能少于6位')</span><br><span class="line">            varlidator.add(registerForm.phoneNumber, 'isMobile', '手机号码格式不正确')</span><br><span class="line">            var errorMsg = varlidator.start()</span><br><span class="line">            return errorMsg</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        var registerForm = document.getElementById('registerForm')</span><br><span class="line">        registerForm.onsubmit = function()&#123;</span><br><span class="line">            var errorMsg = validataFunc()</span><br><span class="line">            if(errorMsg)&#123;</span><br><span class="line">                alert(errorMsg)</span><br><span class="line">                return false</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        var Varlidator = function()&#123;</span><br><span class="line">            this.cache = [] </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Varlidator.prototype.add = function(dom, rule, errorMsg)&#123;</span><br><span class="line">            var ary = rule.split(':')</span><br><span class="line">            this.cache.push(function()&#123;</span><br><span class="line">                var strategy = ary.shift()</span><br><span class="line">                ary.unshift(dom.value)</span><br><span class="line">                ary.push(errorMsg)</span><br><span class="line">                return strategies[ strategy ].apply( dom,ary )</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Varlidator.prototype.start = function()&#123;</span><br><span class="line">            for( var i=0, validataFunc; validataFunc = this.cache[ i++ ];)&#123;</span><br><span class="line">                var msg = validataFunc()</span><br><span class="line">                if( msg )&#123;</span><br><span class="line">                    return msg</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;   </span><br><span class="line">    &lt;/script&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;策略模式表单应用&quot;&gt;&lt;a href=&quot;#策略模式表单应用&quot; class=&quot;headerlink&quot; title=&quot;策略模式表单应用&quot;&gt;&lt;/a&gt;策略模式表单应用&lt;/h3&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;
      
    
    </summary>
    
      <category term="JavaScript设计模式" scheme="http://yoursite.com/categories/JavaScript%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
      <category term="策略模式表单应用" scheme="http://yoursite.com/categories/JavaScript%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F%E8%A1%A8%E5%8D%95%E5%BA%94%E7%94%A8/"/>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>设计模式-策略模式</title>
    <link href="http://yoursite.com/2018/03/30/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/"/>
    <id>http://yoursite.com/2018/03/30/设计模式-策略模式/</id>
    <published>2018-03-30T07:04:48.000Z</published>
    <updated>2018-03-30T07:12:39.113Z</updated>
    
    <content type="html"><![CDATA[<h2 id="JavaScript设计模式-策略模式"><a href="#JavaScript设计模式-策略模式" class="headerlink" title="JavaScript设计模式-策略模式"></a>JavaScript设计模式-策略模式</h2><h3 id="策略模式定义：定义一系列的算法，把他们一个个封装起来-并且使他们可以相互替换"><a href="#策略模式定义：定义一系列的算法，把他们一个个封装起来-并且使他们可以相互替换" class="headerlink" title="策略模式定义：定义一系列的算法，把他们一个个封装起来,并且使他们可以相互替换"></a>策略模式定义：定义一系列的算法，把他们一个个封装起来,并且使他们可以相互替换</h3><h3 id="1-简单模式"><a href="#1-简单模式" class="headerlink" title="1.简单模式"></a>1.简单模式</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> calculateBonus = <span class="function"><span class="keyword">function</span>(<span class="params"> level, salary</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(level === <span class="string">"S"</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> salary * <span class="number">5</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(level === <span class="string">"A"</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> salary * <span class="number">3</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(level === <span class="string">"B"</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> salary * <span class="number">2</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">calculateBonus(<span class="string">'B'</span>, <span class="number">2000</span>)</span><br><span class="line">calculateBonus(<span class="string">'S'</span>, <span class="number">6000</span>)</span><br></pre></td></tr></table></figure><h3 id="2-组合函数重构代码"><a href="#2-组合函数重构代码" class="headerlink" title="2.组合函数重构代码"></a>2.组合函数重构代码</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> performanceS = <span class="function"><span class="keyword">function</span>(<span class="params"> salary </span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> salary * <span class="number">4</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> performanceA = <span class="function"><span class="keyword">function</span>(<span class="params"> salary </span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> salary * <span class="number">3</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> performanceB = <span class="function"><span class="keyword">function</span>(<span class="params"> salary </span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> salary * <span class="number">2</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> calculateBonus = <span class="function"><span class="keyword">function</span>(<span class="params"> level, salary </span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>( level === <span class="string">"S"</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> performanceS( salary )</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>( level === <span class="string">"A"</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> performanceA( salary )</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>( level === <span class="string">"B"</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> performanceB( salary )</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">calculateBonus( <span class="string">'S'</span>, <span class="number">1000</span>)</span><br></pre></td></tr></table></figure><h3 id="3-策略模式重构代码"><a href="#3-策略模式重构代码" class="headerlink" title="3.策略模式重构代码"></a>3.策略模式重构代码</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> performanceS = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">performanceS.prototype.calculate = <span class="function"><span class="keyword">function</span>(<span class="params"> salary </span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> salary * <span class="number">4</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> performanceA = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">performanceA.prototype.calculate = <span class="function"><span class="keyword">function</span>(<span class="params"> salary </span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> salary * <span class="number">4</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> performanceA = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">performanceA.prototype.calculate = <span class="function"><span class="keyword">function</span>(<span class="params"> salary </span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> salary * <span class="number">3</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> performanceB = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">performanceB.prototype.calculate = <span class="function"><span class="keyword">function</span>(<span class="params"> salary </span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> salary * <span class="number">2</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> Bonus = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.salary = <span class="literal">null</span></span><br><span class="line">    <span class="keyword">this</span>.strategy = <span class="literal">null</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Bonus.prototype.setSalary = <span class="function"><span class="keyword">function</span>(<span class="params"> salary </span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.salary = salary</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Bonus.prototype.setStrategy = <span class="function"><span class="keyword">function</span>(<span class="params"> strategy </span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.strategy = strategy</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Bonus.prototype.getBonus = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.strategy.calculate( <span class="keyword">this</span>.salary )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> bonus = <span class="keyword">new</span> Bonus()</span><br><span class="line"></span><br><span class="line">bonus.setSalary( <span class="number">1000</span> )</span><br><span class="line">bonus.setStrategy( <span class="keyword">new</span> performanceS())</span><br><span class="line"><span class="built_in">console</span>.log( bonus.getBonus() )</span><br><span class="line"></span><br><span class="line">bonus.setStrategy(<span class="keyword">new</span> performanceA())</span><br><span class="line"><span class="built_in">console</span>.log( bonus.getBonus() )</span><br></pre></td></tr></table></figure><h3 id="4-JavaScript版本策略"><a href="#4-JavaScript版本策略" class="headerlink" title="4.JavaScript版本策略"></a>4.JavaScript版本策略</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> strategies = &#123;</span><br><span class="line">    <span class="string">"S"</span>: <span class="function"><span class="keyword">function</span>(<span class="params">salary</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> salary * <span class="number">4</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"A"</span>: <span class="function"><span class="keyword">function</span>(<span class="params">salary</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> salary * <span class="number">3</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"B"</span>: <span class="function"><span class="keyword">function</span>(<span class="params">salary</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> salary * <span class="number">2</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> calculateBonus = <span class="function"><span class="keyword">function</span>(<span class="params"> level,salary </span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> strategies[ level ]( salary )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log( calculateBonus( <span class="string">'S'</span>, <span class="number">20000</span> ))</span><br><span class="line"><span class="built_in">console</span>.log( calculateBonus( <span class="string">'A'</span>, <span class="number">10000</span> ) )</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;JavaScript设计模式-策略模式&quot;&gt;&lt;a href=&quot;#JavaScript设计模式-策略模式&quot; class=&quot;headerlink&quot; title=&quot;JavaScript设计模式-策略模式&quot;&gt;&lt;/a&gt;JavaScript设计模式-策略模式&lt;/h2&gt;&lt;h3 i
      
    
    </summary>
    
      <category term="JavaScript设计模式" scheme="http://yoursite.com/categories/JavaScript%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
      <category term="策略模式" scheme="http://yoursite.com/categories/JavaScript%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>设计模式-单例模式的简单应用</title>
    <link href="http://yoursite.com/2018/03/30/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F%E7%9A%84%E7%AE%80%E5%8D%95%E5%BA%94%E7%94%A8/"/>
    <id>http://yoursite.com/2018/03/30/设计模式-单例模式的简单应用/</id>
    <published>2018-03-30T03:42:43.000Z</published>
    <updated>2018-03-30T07:13:05.391Z</updated>
    
    <content type="html"><![CDATA[<h3 id="实现QQ登陆框"><a href="#实现QQ登陆框" class="headerlink" title="实现QQ登陆框"></a>实现QQ登陆框</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">    &lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">        &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">        &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"ie=edge"</span>&gt;</span><br><span class="line">        &lt;title&gt;QQ登陆&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;button id=<span class="string">"loginBtn"</span>&gt;登陆&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>body&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">// 1.进入页面创建dom</span></span><br><span class="line">        <span class="keyword">var</span> loginLayer = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> div = <span class="built_in">document</span>.createElement( <span class="string">'div'</span> )</span><br><span class="line">            div.innerHTML = <span class="string">'我是登陆框'</span></span><br><span class="line">            div.style.display = <span class="string">'none'</span></span><br><span class="line">            <span class="built_in">document</span>.body.appendChild(div)</span><br><span class="line">            <span class="keyword">return</span> div</span><br><span class="line">        &#125;)()</span><br><span class="line"></span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">'loginBtn'</span>).onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            loginLayer.style.display = <span class="string">'block'</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2.点击登入创建dom</span></span><br><span class="line">        <span class="keyword">var</span> creatLoginLayer = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> div = <span class="built_in">document</span>.createElement( <span class="string">'div'</span> )</span><br><span class="line">            div.innerHTML = <span class="string">'我是登陆框'</span></span><br><span class="line">            div.style.display = <span class="string">'none'</span></span><br><span class="line">            <span class="built_in">document</span>.body.appendChild(div)</span><br><span class="line">            <span class="keyword">return</span> div</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">'loginBtn'</span>).onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> loginLayer = creatLoginLayer()</span><br><span class="line">            loginLayer.style.display = <span class="string">'block'</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3.做一个单例的悬浮框</span></span><br><span class="line">        <span class="keyword">var</span> creatLoginLayer = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> div</span><br><span class="line">            <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(!div)&#123;</span><br><span class="line">                    div = <span class="built_in">document</span>.createElement( <span class="string">'div'</span> )</span><br><span class="line">                    div.innerHTML = <span class="string">'我是登陆框'</span></span><br><span class="line">                    div.style.display = <span class="string">'none'</span></span><br><span class="line">                    <span class="built_in">document</span>.body.appendChild(div)</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> div</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)()</span><br><span class="line"></span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">'loginBtn'</span>).onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> loginLayer = creatLoginLayer()</span><br><span class="line">            loginLayer.style.display = <span class="string">'block'</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>html&gt;</span><br></pre></td></tr></table></figure><h3 id="实现单例模式抽离逻辑代码"><a href="#实现单例模式抽离逻辑代码" class="headerlink" title="实现单例模式抽离逻辑代码"></a>实现单例模式抽离逻辑代码</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">    &lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">        &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">        &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"ie=edge"</span>&gt;</span><br><span class="line">        &lt;title&gt;抽离逻辑代码&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;button id=<span class="string">"loginBtn"</span>&gt;登陆&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>body&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="comment">// 做一个通用的单例,将管理单例的逻辑从之前的代码中抽离出来</span></span><br><span class="line">        <span class="keyword">var</span> getSingle = <span class="function"><span class="keyword">function</span>(<span class="params"> fn </span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> result </span><br><span class="line">            <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> result || (result = fn.apply(<span class="keyword">this</span>, <span class="built_in">arguments</span>))</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> creatLoginLayer = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> div = <span class="built_in">document</span>.createElement( <span class="string">'div'</span> )</span><br><span class="line">            div.innerHTML = <span class="string">'我是登陆框'</span></span><br><span class="line">            div.style.display = <span class="string">'none'</span></span><br><span class="line">            <span class="built_in">document</span>.body.appendChild(div)</span><br><span class="line">            <span class="keyword">return</span> div</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> createGetSingle = <span class="keyword">new</span> getSingle(creatLoginLayer)</span><br><span class="line"></span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">'loginBtn'</span>).onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> loginLayer = createGetSingle()</span><br><span class="line">            loginLayer.style.display = <span class="string">'block'</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// iframe动态加载第三方页面</span></span><br><span class="line">        <span class="keyword">var</span> createGetSingleIframe = getSingle(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> iframe = <span class="built_in">document</span>.createElement( <span class="string">'iframe'</span> )</span><br><span class="line">            <span class="built_in">document</span>.body.appendChild( iframe )</span><br><span class="line">            <span class="keyword">return</span> iframe</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">'loginBtn'</span>).onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> loginLayer = createGetSingleIframe()</span><br><span class="line">            loginLayer.src= <span class="string">'http://baidu.com'</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">var</span> bindEvent = getSingle(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">document</span>.getElementById(<span class="string">'div1'</span>).onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                alert(<span class="string">'click'</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> render = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'start'</span>)</span><br><span class="line">            bindEvent()</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        render()</span><br><span class="line">        render()</span><br><span class="line">        render()</span><br><span class="line"></span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>html&gt;</span><br></pre></td></tr></table></figure><h3 id="单例控制事件"><a href="#单例控制事件" class="headerlink" title="单例控制事件"></a>单例控制事件</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">    &lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">        &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">        &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"ie=edge"</span>&gt;</span><br><span class="line">        &lt;title&gt;单例控制事件&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;button id=<span class="string">"div1"</span>&gt;点击&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>body&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">var</span> bindEvent = getSingle(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">document</span>.getElementById(<span class="string">'div1'</span>).onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                alert(<span class="string">'click'</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> render = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'start'</span>)</span><br><span class="line">            bindEvent()</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        render()</span><br><span class="line">        render()</span><br><span class="line">        render()</span><br><span class="line"></span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>html&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;实现QQ登陆框&quot;&gt;&lt;a href=&quot;#实现QQ登陆框&quot; class=&quot;headerlink&quot; title=&quot;实现QQ登陆框&quot;&gt;&lt;/a&gt;实现QQ登陆框&lt;/h3&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td c
      
    
    </summary>
    
      <category term="JavaScript设计模式" scheme="http://yoursite.com/categories/JavaScript%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
      <category term="单例模式的简单应用" scheme="http://yoursite.com/categories/JavaScript%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F%E7%9A%84%E7%AE%80%E5%8D%95%E5%BA%94%E7%94%A8/"/>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>设计模式-单例模式</title>
    <link href="http://yoursite.com/2018/03/30/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F-%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/"/>
    <id>http://yoursite.com/2018/03/30/设计模式-单例模式/</id>
    <published>2018-03-30T03:28:02.000Z</published>
    <updated>2018-03-30T07:12:16.405Z</updated>
    
    <content type="html"><![CDATA[<h2 id="JavaScript设计模式-单例模式"><a href="#JavaScript设计模式-单例模式" class="headerlink" title="JavaScript设计模式-单例模式"></a>JavaScript设计模式-单例模式</h2><h3 id="单例模式-保证一个类仅有一个实例-并提供一个访问它的全局变量"><a href="#单例模式-保证一个类仅有一个实例-并提供一个访问它的全局变量" class="headerlink" title="单例模式: 保证一个类仅有一个实例,并提供一个访问它的全局变量"></a><strong>单例模式:</strong> 保证一个类仅有一个实例,并提供一个访问它的全局变量</h3><h3 id="实现简单单例模式"><a href="#实现简单单例模式" class="headerlink" title="实现简单单例模式"></a>实现简单单例模式</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> Singleton = <span class="function"><span class="keyword">function</span>(<span class="params"> name </span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name</span><br><span class="line">    <span class="keyword">this</span>.instance = <span class="literal">null</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Singleton.prototype.getName = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.name)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Singleton.getInstance = <span class="function"><span class="keyword">function</span>(<span class="params"> name </span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>( !<span class="keyword">this</span>.instance )&#123;</span><br><span class="line">        <span class="keyword">this</span>.instance = <span class="keyword">new</span> Singleton( name )</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.instance</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> a = Singleton.getInstance( <span class="string">'seve1'</span> )</span><br><span class="line"><span class="keyword">var</span> b = Singleton.getInstance( <span class="string">'seve2'</span> )</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log( a===b )</span><br><span class="line"><span class="built_in">console</span>.log(b.getName())</span><br></pre></td></tr></table></figure><h3 id="透明的单例模式"><a href="#透明的单例模式" class="headerlink" title="透明的单例模式"></a>透明的单例模式</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> CreatDiv = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> instance</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> CreatDiv = <span class="function"><span class="keyword">function</span>(<span class="params"> html </span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>( instance )&#123;</span><br><span class="line">            <span class="keyword">return</span> instance</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">this</span>.html = html</span><br><span class="line">        <span class="keyword">this</span>.init()</span><br><span class="line">        <span class="keyword">return</span> instance = <span class="keyword">this</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    CreatDiv.prototype.init = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> div = <span class="built_in">document</span>.createElement(<span class="string">'div'</span>)</span><br><span class="line">        div.innerHTML = <span class="keyword">this</span>.html</span><br><span class="line">        <span class="built_in">document</span>.body.appendChild( div )</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> CreatDiv</span><br><span class="line">&#125;)()</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a = <span class="keyword">new</span> CreatDiv(<span class="string">'seve1'</span>)</span><br><span class="line"><span class="keyword">var</span> b = <span class="keyword">new</span> CreatDiv(<span class="string">'seve2'</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(a === b)</span><br></pre></td></tr></table></figure><h3 id="代理模式实现单例模式"><a href="#代理模式实现单例模式" class="headerlink" title="代理模式实现单例模式"></a>代理模式实现单例模式</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> CreatDiv = <span class="function"><span class="keyword">function</span>(<span class="params"> html </span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.html = html</span><br><span class="line">    <span class="keyword">this</span>.init()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">CreatDiv.prototype.init = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> div = <span class="built_in">document</span>.createElement(<span class="string">'div'</span>)</span><br><span class="line">    div.innerHTML = <span class="keyword">this</span>.html</span><br><span class="line">    <span class="built_in">document</span>.body.appendChild( div )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 引入代理类</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> ProxySingletonCreatDiv = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> instance</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"> html </span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!instance)&#123;</span><br><span class="line">            instance = <span class="keyword">new</span>  CreatDiv(html)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> instance</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)()</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a = <span class="keyword">new</span> ProxySingletonCreatDiv(<span class="string">'seve1'</span>)</span><br><span class="line"><span class="keyword">var</span> b = <span class="keyword">new</span> ProxySingletonCreatDiv(<span class="string">'seve2'</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log( a===b )</span><br></pre></td></tr></table></figure><h3 id="javaScript的简单单例模式"><a href="#javaScript的简单单例模式" class="headerlink" title="javaScript的简单单例模式"></a>javaScript的简单单例模式</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> MyApp = &#123;&#125;</span><br><span class="line"></span><br><span class="line">MyApp.namespace = <span class="function"><span class="keyword">function</span>(<span class="params">name</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> parts = name.split(<span class="string">'.'</span>)</span><br><span class="line">    <span class="keyword">var</span> current = MyApp</span><br><span class="line">    <span class="keyword">for</span>( <span class="keyword">var</span> i <span class="keyword">in</span> parts )&#123;</span><br><span class="line">        <span class="keyword">if</span>(!current[ parts[ i ] ])&#123;</span><br><span class="line">            current[ parts[i] ] =&#123;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">        current = current[ parts[ i ] ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">MyApp.namespace( <span class="string">'event'</span> )</span><br><span class="line">MyApp.namespace( <span class="string">'dom.style'</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(MyApp)</span><br></pre></td></tr></table></figure><h3 id="惰性单例"><a href="#惰性单例" class="headerlink" title="惰性单例"></a>惰性单例</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> Singleton = <span class="function"><span class="keyword">function</span>(<span class="params"> name </span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Singleton.prototype.getName = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.name)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Singleton.getInstance = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> instance = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params">name</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>( !instance )&#123;</span><br><span class="line">            instance = <span class="keyword">new</span> Singleton( name )</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> instance</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a = <span class="keyword">new</span> Singleton(<span class="string">'haha'</span>)</span><br><span class="line"></span><br><span class="line">a.getName()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;JavaScript设计模式-单例模式&quot;&gt;&lt;a href=&quot;#JavaScript设计模式-单例模式&quot; class=&quot;headerlink&quot; title=&quot;JavaScript设计模式-单例模式&quot;&gt;&lt;/a&gt;JavaScript设计模式-单例模式&lt;/h2&gt;&lt;h3 i
      
    
    </summary>
    
      <category term="JavaScript设计模式" scheme="http://yoursite.com/categories/JavaScript%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
      <category term="单例模式" scheme="http://yoursite.com/categories/JavaScript%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/"/>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript中的所有事件</title>
    <link href="http://yoursite.com/2018/03/29/JavaScript%E4%B8%AD%E7%9A%84%E6%89%80%E6%9C%89%E4%BA%8B%E4%BB%B6/"/>
    <id>http://yoursite.com/2018/03/29/JavaScript中的所有事件/</id>
    <published>2018-03-29T09:20:06.000Z</published>
    <updated>2018-03-30T07:16:01.973Z</updated>
    
    <content type="html"><![CDATA[<h2 id="JavaScript-事件参考手册"><a href="#JavaScript-事件参考手册" class="headerlink" title="JavaScript 事件参考手册"></a>JavaScript 事件参考手册</h2><h3 id="事件通常与函数配合使用，这样就可以通过发生的事件来驱动函数执行。"><a href="#事件通常与函数配合使用，这样就可以通过发生的事件来驱动函数执行。" class="headerlink" title="事件通常与函数配合使用，这样就可以通过发生的事件来驱动函数执行。"></a>事件通常与函数配合使用，这样就可以通过发生的事件来驱动函数执行。</h3><hr><h3 id="事件句柄"><a href="#事件句柄" class="headerlink" title="事件句柄"></a>事件句柄</h3><p>HTML 4.0 的新特性之一是有能力使 HTML 事件触发浏览器中的动作（action），比如当用户点击某个 HTML 元素时启动一段 JavaScript。下面是一个属性列表，这些属性可插入 HTML 标签来定义事件动作。</p><p><img src="/images/events.jpg" alt="JavaScript中的所有事件"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;JavaScript-事件参考手册&quot;&gt;&lt;a href=&quot;#JavaScript-事件参考手册&quot; class=&quot;headerlink&quot; title=&quot;JavaScript 事件参考手册&quot;&gt;&lt;/a&gt;JavaScript 事件参考手册&lt;/h2&gt;&lt;h3 id=&quot;事件通常与
      
    
    </summary>
    
      <category term="JavaScript基础" scheme="http://yoursite.com/categories/JavaScript%E5%9F%BA%E7%A1%80/"/>
    
      <category term="event事件" scheme="http://yoursite.com/categories/JavaScript%E5%9F%BA%E7%A1%80/event%E4%BA%8B%E4%BB%B6/"/>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>MarkDown</title>
    <link href="http://yoursite.com/2018/03/29/%E5%88%9D%E6%AC%A1%E4%BD%BF%E7%94%A8MarkDown/"/>
    <id>http://yoursite.com/2018/03/29/初次使用MarkDown/</id>
    <published>2018-03-29T01:37:00.000Z</published>
    <updated>2018-03-29T09:31:32.895Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/daniel-lij.png" alt=""></p><h2 id="MaHua是什么"><a href="#MaHua是什么" class="headerlink" title="MaHua是什么?"></a>MaHua是什么?</h2><p>一个在线编辑markdown文档的编辑器</p><p>向Mac下优秀的markdown编辑器mou致敬</p><h2 id="MaHua有哪些功能？"><a href="#MaHua有哪些功能？" class="headerlink" title="MaHua有哪些功能？"></a>MaHua有哪些功能？</h2><ul><li>方便的<code>导入导出</code>功能<ul><li>直接把一个markdown的文本文件拖放到当前这个页面就可以了</li><li>导出为一个html格式的文件，样式一点也不会丢失</li></ul></li><li>编辑和预览<code>同步滚动</code>，所见即所得（右上角设置）</li><li><code>VIM快捷键</code>支持，方便vim党们快速的操作 （右上角设置）</li><li>强大的<code>自定义CSS</code>功能，方便定制自己的展示</li><li>有数量也有质量的<code>主题</code>,编辑器和预览区域</li><li>完美兼容<code>Github</code>的markdown语法</li><li>预览区域<code>代码高亮</code></li><li>所有选项自动记忆</li></ul><h2 id="有问题反馈"><a href="#有问题反馈" class="headerlink" title="有问题反馈"></a>有问题反馈</h2><p>在使用中有任何问题，欢迎反馈给我，可以用以下联系方式跟我交流</p><ul><li>邮件(dev.hubo#gmail.com, 把#换成@)</li><li>QQ: 287759234</li><li>weibo: <a href="http://weibo.com/ihubo" target="_blank" rel="noopener">@草依山</a></li><li>twitter: <a href="http://twitter.com/ihubo" target="_blank" rel="noopener">@ihubo</a></li></ul><h2 id="捐助开发者"><a href="#捐助开发者" class="headerlink" title="捐助开发者"></a>捐助开发者</h2><p>在兴趣的驱动下,写一个<code>免费</code>的东西，有欣喜，也还有汗水，希望你喜欢我的作品，同时也能支持一下。<br>当然，有钱捧个钱场（右上角的爱心标志，支持支付宝和PayPal捐助），没钱捧个人场，谢谢各位。</p><h2 id="感激"><a href="#感激" class="headerlink" title="感激"></a>感激</h2><p>感谢以下的项目,排名不分先后</p><ul><li><a href="http://mouapp.com/" target="_blank" rel="noopener">mou</a> </li><li><a href="http://ace.ajax.org/" target="_blank" rel="noopener">ace</a></li><li><a href="http://jquery.com" target="_blank" rel="noopener">jquery</a></li></ul><h2 id="关于作者"><a href="#关于作者" class="headerlink" title="关于作者"></a>关于作者</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> ihubo = &#123;</span><br><span class="line">  nickName  : <span class="string">"草依山"</span>,</span><br><span class="line">  site : <span class="string">"http://jser.me"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/images/daniel-lij.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;MaHua是什么&quot;&gt;&lt;a href=&quot;#MaHua是什么&quot; class=&quot;headerlink&quot; title=&quot;MaHua是什么?&quot;&gt;&lt;/a&gt;MaHua是什么?&lt;/h
      
    
    </summary>
    
      <category term="MarkDown测试" scheme="http://yoursite.com/categories/MarkDown%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="测试" scheme="http://yoursite.com/tags/%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
</feed>
